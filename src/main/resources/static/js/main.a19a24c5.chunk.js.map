{"version":3,"sources":["logo.svg","store/redux/ActionTypes.js","service/requestUtils.js","service/APIService.js","containers/account.js","containers/user.js","utils/utils.js","containers/orders.js","containers/settings.js","containers/recharge.js","App.js","serviceWorker.js","store/redux/reducer/common.js","store/index.js","index.js"],"names":["module","exports","Status","ActionTypes","BASE","INDEXBANNER","HISTORYTSPORTRECORD","SPORTSLIST","RECOMMENDSOPRTS","PROMOTIONTYPE","PROMOTIONLIST","NEWSLIST","USERINFO","SPORTSFOLLOW","LOTTERYFOLLOW","SPORTSCOLLECTION","USERMESSAGE","RECOMMENDLOTTERY","PROFESSORRECOMMENDLOTTERY","HISTORYLOTTERY","LOTTERYDETAIL","LOTTERYLIST","LOTTERYCATEGORY","SPORTSINFORMATION","SPORTSLEAGUELIST","SPORTSGETHANDICALIST","NEWSDETAIL","PROMOTIONDETAIL","NEWSCOMMENTLIST","UPDATENEWSCOMMENT","WELFAREAPPLYLIST","HISTORYINDEXLOTTERY","ASIANSPORTSINDEXLIST","EROUPSPORTSINDEXLIST","SIZESPORTSINDEXLIST","ASIANSPORTSINDEXDETAIL","SPORTSTEXTLIVE","RequestTool","method","path","params","headers","request","url","undefined","sessionStorage","getItem","paramsArry","Object","keys","forEach","key","push","join","Request","bodyStr","JSON","stringify","body","APIService","type","data","dispatch","status","reduceType","actionType","handleDispatch","fetch","then","response","json","resultCode","message","warning","catch","err","responseType","obj","requests","seriesRequest","this","promiseRequest","handleRequest","NEWSCOLLECTION","rankLevelSingleOpts","value","rankLevelNumOpts","vipsLevelOpts","AccountList","props","state","dataSource","initData","rankLevelName","rankLevelFlexibleNum","visible","saveType","fecthAccounts","WeChatRobotAPI","wxid","res","console","log","setState","rankLevelNum","rankLevelFlexibleName","record","rankLevelSingle","substring","length","rankFlexLevelNum","rankLevelFlexible","rankIndexSingle","rankIndexFlexible","values","find","item","id","code","success","columns","title","dataIndex","render","text","index","style","color","ellipsis","onClick","handleEditAccount","bind","marginBottom","handleAdd","width","onClose","labelCol","span","wrapperCol","layout","initialValues","onFinish","Item","label","name","required","placeholder","Password","map","Option","TextArea","htmlType","React","Component","Select","UserList","curPage","pageSize","total","fetchUsers","page","query","size","mark","sex","content","totalElements","handleQuery","backgroundColor","padding","allowClear","pagination","defaultCurrent","onChange","handleChangePage","showSizeChanger","formdateTime","dateValue","dateNum","Date","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","OrderList","fetchOrders","time","Setting","openStatus","checkStatus","fetchMode","checked","checkedChildren","unCheckedChildren","float","handleChangeModeStatus","RechargeList","fetchRecharge","TabPane","Tabs","Header","Layout","Content","App","className","height","fontSize","textAlign","tab","Boolean","window","location","hostname","match","initialState","combineReducers","Common","action","assign","middleWare","thunk","createStore","reducer","applyMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.a19a24c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/*\r\n * @Date: 2020-06-05 10:03:46\r\n * @LastEditors: Please set LastEditors\r\n * @LastEditTime: 2020-10-25 14:45:45\r\n * @FilePath: /project/src/store/redux/ActionTypes.js\r\n */ \r\nexport const Status = {\r\n    INIT:'INIT',\r\n    LOADING: 'LOADING',\r\n    SUCCESS:'SUCCESS',\r\n    ERROR:'ERRPR'\r\n}\r\n\r\nexport const ActionTypes = {\r\n    BASE: 'BASE', //  初始类型\r\n    INDEXBANNER:'INDEXBANNER', // 首页轮播\r\n    HISTORYTSPORTRECORD: 'HISTORYTSPORTRECORD', // 昨日战绩\r\n    SPORTSLIST: 'SPORTSLIST', // 赛事列表\r\n    RECOMMENDSOPRTS: 'RECOMMENDSOPRTS', // 热门赛事\r\n    PROMOTIONTYPE: 'PROMOTIONTYPE', // 活动种类\r\n    PROMOTIONLIST: 'PROMOTIONLIST',  // 活动列表\r\n    NEWSLIST: 'NEWSLIST', // 资讯列表\r\n    USERINFO:'USERINFO', // 用户信息\r\n    SPORTSFOLLOW: 'SPORTSFOLLOW', // 体育关注\r\n    LOTTERYFOLLOW: 'LOTTERYFOLLOW', // 彩票关注\r\n    SPORTSCOLLECTION: 'SPORTSCOLLECTION', // 体育收藏\r\n    USERMESSAGE: 'USERMESSAGE', // 用户消息\r\n    RECOMMENDLOTTERY: 'RECOMMENDLOTTERY', //推荐彩票\r\n    PROFESSORRECOMMENDLOTTERY:'PROFESSORRECOMMENDLOTTERY',// 专家推荐\r\n    HISTORYLOTTERY: 'HISTORYLOTTERY', // 历史开奖\r\n    LOTTERYDETAIL:'LOTTERYDETAIL', // 开奖详情\r\n    LOTTERYLIST: 'LOTTERYLIST', // 彩票列表,\r\n    LOTTERYCATEGORY: 'LOTTERYCATEGORY', // 彩种，\r\n    SPORTSINFORMATION: 'SPORTSINFORMATION', // 赛事情报\r\n    SPORTSLEAGUELIST: 'SPORTSLEAGUELIST', // 联赛列表\r\n    SPORTSGETHANDICALIST: 'SPORTSGETHANDICALIST', // 盘口数据\r\n    NEWSDETAIL:'NEWSDETAIL', // 资讯详情,\r\n    PROMOTIONDETAIL:'PROMOTIONDETAIL', // 活动详情\r\n    NEWSCOMMENTLIST:'NEWSCOMMENTLIST', // 新闻评论列表\r\n    UPDATENEWSCOMMENT: 'UPDATENEWSCOMMENT', // 更新评论数\r\n    WELFAREAPPLYLIST:'WELFAREAPPLYLIST', //福利申请列表\r\n    HISTORYINDEXLOTTERY: 'HISTORYINDEXLOTTERY', // 首页昨日战绩彩票\r\n    ASIANSPORTSINDEXLIST:'ASIANSPORTSINDEXLIST', // 亚盘盘口数据\r\n    EROUPSPORTSINDEXLIST: 'EROUPSPORTSINDEXLIST', // 欧盘盘口数据\r\n    SIZESPORTSINDEXLIST: 'SIZESPORTSINDEXLIST', // 让球盘口数据\r\n    ASIANSPORTSINDEXDETAIL:'ASIANSPORTSINDEXDETAIL', // 亚盘详情\r\n    SPORTSTEXTLIVE:'SPORTSTEXTLIVE', // 文字直播\r\n}\r\n\r\nexport const serverUrl= 'http://localhost:10000'\r\n// export const serverUrl= 'http://192.168.3.32:10000'\r\n","/*\r\n * @Date: 2020-06-05 10:04:50\r\n * @LastEditors: Please set LastEditors\r\n * @LastEditTime: 2020-10-14 22:35:05\r\n * @FilePath: /project/src/service/requestUtils.js\r\n * @Description: Description\r\n */ \r\nimport { serverUrl, uploadUrl} from '../store/redux/ActionTypes'\r\n\r\nexport default class RequestTool {\r\n\r\n    \r\n    // 异步请求\r\n    static seriesRequest (method, path, params, headers) {\r\n        let url = serverUrl + path\r\n        if(headers === undefined) {\r\n            headers = {}\r\n            headers['Content-Type'] = 'application/json'\r\n            headers['Authorization'] = sessionStorage.getItem('omToken')\r\n        }\r\n        if(params === undefined) {\r\n            params = {}\r\n        }\r\n        let request\r\n        if(method === 'GET') {\r\n            let paramsArry = []\r\n            Object.keys(params).forEach((key) => params[key] != undefined && params[key] != null ? paramsArry.push(key + '=' + params[key]) : null)\r\n            url += '?' + paramsArry.join('&')\r\n            request = new Request(url, {\r\n                method: 'GET',\r\n                headers: headers\r\n            })\r\n        } else if(method === 'POST') {\r\n            let bodyStr = JSON.stringify(params)\r\n            request = new Request(url, {\r\n                method: 'POST',\r\n                headers: headers,\r\n                body: bodyStr\r\n            })\r\n\r\n        } else if(method === 'PUT') {\r\n            let bodyStr = JSON.stringify(params)\r\n            request = new Request(url, {\r\n                method: 'PUT',\r\n                headers: headers,\r\n                body: JSON.stringify(bodyStr)\r\n\r\n            })\r\n        } else if(method === 'DELETE') {\r\n\r\n            let bodyStr = JSON.stringify(params)\r\n\r\n            request = new Request(url, {\r\n                method: 'DELETE',\r\n                headers: headers,\r\n                body: JSON.stringify(bodyStr)\r\n            })\r\n        }\r\n\r\n        return request\r\n    }   \r\n\r\n   \r\n\r\n}","/*\r\n * @Date: 2020-06-05 10:05:30\r\n * @LastEditors: Please set LastEditors\r\n * @LastEditTime: 2020-10-25 14:40:07\r\n * @FilePath: /project/src/service/APIService.js\r\n */ \r\nimport RequestTool from './requestUtils'\r\nimport {message} from 'antd'\r\nimport {ActionTypes, Status} from '../store/redux/ActionTypes'\r\n \r\nexport default class APIService {\r\n\r\n    /*************************** 调用封装 ************************/\r\n    static handleDispatch(type, data, dispatch, status) {\r\n        return dispatch({\r\n            reduceType: ActionTypes.BASE,\r\n            type: type,\r\n            data: data,\r\n            status: status\r\n        })\r\n    }\r\n\r\n    static handleRequest(actionType, request) {\r\n        return (dispatch) => {\r\n            this.handleDispatch(actionType, {}, dispatch, Status.LOADING);\r\n            fetch(\r\n                request\r\n            ).then((response)=> \r\n                response.json()\r\n            ).then((json) => {\r\n                if(json.resultCode == 1) { // 成功\r\n                    this.handleDispatch(actionType, json, dispatch, Status.SUCCESS)\r\n                } else  {\r\n                    message.warning(json.message)\r\n                    return false\r\n                }\r\n            }).catch((err) =>  {\r\n                this.handleDispatch(actionType, {}, dispatch, Status.ERROR);\r\n            })\r\n        }\r\n    }\r\n\r\n    static promiseRequest(request, responseType) {\r\n        return fetch(request).then((response) =>  {\r\n            return response.json()\r\n        })\r\n    }\r\n\r\n\r\n    /*************************************************** API  接口 ************************************************/\r\n\r\n  \r\n\r\n     \r\n    /**\r\n     * 账号相关\r\n     * @param {*} type  具体接口定义\r\n     * @param {*} obj 参数\r\n     */\r\n    static WeChatRobotAPI(type, obj) {\r\n        let  requests;\r\n        switch(type) {\r\n            case 'fetchAccounts': // 账号列表\r\n                requests =  RequestTool.seriesRequest('POST', '/accounts', obj)\r\n                return this.promiseRequest(requests)\r\n            case 'saveAccounts': // 账号保存\r\n                requests =  RequestTool.seriesRequest('POST', '/account/save', obj)\r\n                return this.promiseRequest(requests)\r\n            case 'fetchOrders': // 订单列表\r\n                requests =  RequestTool.seriesRequest('GET', '/orders', obj)\r\n                return this.promiseRequest(requests)\r\n            case 'fetchUsers': // 用户列表\r\n                requests =  RequestTool.seriesRequest('POST', '/user_list', obj)\r\n                return this.promiseRequest(requests)\r\n            case 'saveMode': // 修改mode\r\n                requests =  RequestTool.seriesRequest('GET', '/mode', obj)\r\n                return this.promiseRequest(requests)\r\n            case 'fetchMode': // 获取mode\r\n                requests =  RequestTool.seriesRequest('GET', '/getmode', obj)\r\n                return this.promiseRequest(requests)\r\n            case 'fetchRechargeList': // 获取充值列表\r\n                requests =  RequestTool.seriesRequest('GET', '/recharge/list', obj)\r\n                return this.promiseRequest(requests)\r\n            default: \r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * 彩票管理\r\n     * @param {*} type  具体接口定义\r\n     * @param {*} obj 参数\r\n     */\r\n    static LotteryAPI(type, obj) {\r\n        let requests;\r\n        switch(type) {\r\n            case 'LotteryType': //  彩票类型\r\n                requests =  RequestTool.seriesRequest('POST', '/Lottery/LotteryTypeList', obj)\r\n                return this.promiseRequest(requests)\r\n            case 'LotteryCatList': // 彩票重分类列表\r\n                requests =  RequestTool.seriesRequest('POST', '/Lottery/LotteryCategoryList', obj)\r\n                return this.handleRequest(ActionTypes.LOTTERYCATEGORY,requests)\r\n            case 'lotteryList': // 彩票列表\r\n                requests =  RequestTool.seriesRequest('POST', '/Lottery/LottoList', obj)\r\n                return this.handleRequest(ActionTypes.LOTTERYLIST ,requests)\r\n            case 'recommendLottery': // 推荐彩票\r\n                requests =  RequestTool.seriesRequest('POST', '/Lottery/HotLotteryList', obj)\r\n                return this.handleRequest(ActionTypes.RECOMMENDLOTTERY ,requests)\r\n            case 'porfessorRecommendLottery': // 专家推荐\r\n                requests =  RequestTool.seriesRequest('POST', '/Lottery/LotteryRecordList', obj)\r\n                return this.handleRequest(ActionTypes.PROFESSORRECOMMENDLOTTERY ,requests)\r\n            case 'historyLottery': // 历史开奖\r\n                requests =  RequestTool.seriesRequest('POST', '/Lottery/LotteryList', obj)\r\n                return this.handleRequest(ActionTypes.HISTORYLOTTERY ,requests)\r\n            case 'lotteryDetail': // 开奖详情\r\n                requests =  RequestTool.seriesRequest('POST', '/Lottery/LotteryDetail', obj)\r\n                return this.handleRequest(ActionTypes.LOTTERYDETAIL ,requests)\r\n            case 'LotteryYesterdayInfo': //  昨日彩票战绩\r\n                requests =  RequestTool.seriesRequest('POST', '/Lottery/GetLotteryExploits', obj)\r\n                return this.handleRequest(ActionTypes.HISTORYINDEXLOTTERY,requests)\r\n            default:\r\n                break\r\n\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 体育服务\r\n     * @param {*} type  具体接口定义\r\n     * @param {*} obj 参数\r\n     */\r\n    static SportsAPI(type, obj) {\r\n        let requests;\r\n        switch(type) {\r\n            case 'historyRecord': // 昨日战绩\r\n                requests =  RequestTool.seriesRequest('POST', '/Sports/GetExploits', obj)\r\n                return this.handleRequest(ActionTypes.HISTORYTSPORTRECORD, requests)\r\n            case 'sportsList': // 查询赛事列表\r\n                requests =  RequestTool.seriesRequest('POST', '/Sports/GetCompetitionList', obj)\r\n                return this.handleRequest(ActionTypes.SPORTSLIST, requests)\r\n            case 'recommendSports': // 热门赛事\r\n                requests =  RequestTool.seriesRequest('POST', '/Sports/GetReferralsList', obj)\r\n                return this.handleRequest(ActionTypes.RECOMMENDSOPRTS, requests)\r\n            case 'sportsDetail': // 赛事详情\r\n                requests =  RequestTool.seriesRequest('POST', '/Sports/GetCompetitionDetail', obj)\r\n                return this.promiseRequest( requests)\r\n            case 'sportsInformationDetail': // 赛事情报\r\n                requests =  RequestTool.seriesRequest('POST', '/Sports/GetInformationList', obj)\r\n                return this.handleRequest(ActionTypes.SPORTSINFORMATION, requests)\r\n            case 'sportsLeagueList': // 联赛列表\r\n                requests =  RequestTool.seriesRequest('POST', '/Sports/GetLeagueList', obj)\r\n                return this.handleRequest(ActionTypes.SPORTSLEAGUELIST, requests)\r\n            case 'asianSportsIndexList': // 让球（亚盘）盘口数据\r\n                requests =  RequestTool.seriesRequest('POST', '/Sports/GetAsiaHandicaList', obj)\r\n                return this.handleRequest(ActionTypes.ASIANSPORTSINDEXLIST, requests)\r\n            case 'asianSportsIndexDetail': // 让球（亚盘）盘口数据详情\r\n                requests =  RequestTool.seriesRequest('POST', '/Sports/GetCompanyAsiaHandicaList', obj)\r\n                return this.handleRequest(ActionTypes.ASIANSPORTSINDEXDETAIL, requests)\r\n            case 'eroupSportsIndexList': // 亚盘盘口数据\r\n                requests =  RequestTool.seriesRequest('POST', '/Sports/GetEuropeHandicaList', obj)\r\n                return this.handleRequest(ActionTypes.EROUPSPORTSINDEXLIST, requests)\r\n            case 'sizeSportsIndexList': // 亚盘盘口数据\r\n                requests =  RequestTool.seriesRequest('POST', '/Sports/GetEuropeHandicaList', obj)\r\n                return this.handleRequest(ActionTypes.SIZESPORTSINDEXLIST, requests)\r\n            case 'sportsTextLive': // 文字直播查询\r\n                requests =  RequestTool.seriesRequest('POST', '/Sports/GetLiveInformation', obj)\r\n                return this.handleRequest(ActionTypes.SPORTSTEXTLIVE, requests)\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 活动服务\r\n     */\r\n    static PromotionAPI(type, obj) {\r\n        let requests;\r\n        switch(type) {\r\n            case 'promotionType': // 活动种类\r\n                requests =  RequestTool.seriesRequest('POST', '/Promotion/PromotionTypeList', obj)\r\n                return this.handleRequest(ActionTypes.PROMOTIONTYPE, requests)\r\n            case 'promotionList': // 活动列表\r\n                requests =  RequestTool.seriesRequest('POST', '/Promotion/PromotionList', obj)\r\n                return this.handleRequest(ActionTypes.PROMOTIONLIST, requests)\r\n            case 'promotionDetail': // 活动详情\r\n                requests =  RequestTool.seriesRequest('POST', '/Promotion/PromotionDetail', obj)\r\n                return this.handleRequest(ActionTypes.PROMOTIONDETAIL, requests)\r\n            case 'applyWelfare': // 申请活动\r\n                requests =  RequestTool.seriesRequest('POST', '/Promotion/ApplyForPromotion', obj)\r\n                return this.promiseRequest(requests)\r\n            case 'applyWelfareList': // 申请活动列表\r\n                requests =  RequestTool.seriesRequest('POST', '/Promotion/ApplyRecordList', obj)\r\n                return this.handleRequest(ActionTypes.WELFAREAPPLYLIST,requests)\r\n        }\r\n\r\n    }\r\n    /**\r\n     * 资讯服务\r\n     */\r\n    static NewsAPI(type, obj) {\r\n        let requests;\r\n        switch(type) {\r\n            case 'newsList':\r\n                requests =  RequestTool.seriesRequest('POST', '/News/GetNewsList', obj)\r\n                return this.handleRequest(ActionTypes.NEWSLIST, requests)\r\n            case 'newsDetail':\r\n                requests =  RequestTool.seriesRequest('POST', '/News/GetNewsById', obj)\r\n                return this.handleRequest(ActionTypes.NEWSDETAIL, requests)\r\n            case 'NewsCommentList': // 资讯评论列表\r\n                requests =  RequestTool.seriesRequest('POST', '/News/GetCommentInfoList', obj)\r\n                return this.handleRequest(ActionTypes.NEWSCOMMENTLIST, requests)\r\n            case 'addNewsComment': // 添加资讯评论\r\n                requests =  RequestTool.seriesRequest('POST', '/News/AddCommentInfo', obj)\r\n                return this.promiseRequest(requests)\r\n            case 'updateCommentNum': // 更新评论数\r\n                requests =  RequestTool.seriesRequest('POST', '/News/UpdateNewsCommentNumber', obj)\r\n                return this.handleRequest(ActionTypes.UPDATENEWSCOMMENT, requests)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 用户收藏关注\r\n     */\r\n    static UserInterstedAPI(type, obj) {\r\n        let requests;\r\n        switch(type) {\r\n            case 'sportsFollow': // 体育关注列表\r\n                requests =  RequestTool.seriesRequest('POST', '/UserIntersted/GetAttentionRecordsBySportList', obj)\r\n                return this.handleRequest(ActionTypes.SPORTSFOLLOW, requests)\r\n            case 'lotteryFollow': // 彩票关注列表\r\n                requests =  RequestTool.seriesRequest('POST', '/UserIntersted/GetAttentionRecordsByLotteryList', obj)\r\n                return this.handleRequest(ActionTypes.LOTTERYFOLLOW, requests)\r\n            case 'newsCollection': // 资讯收藏列表\r\n                requests =  RequestTool.seriesRequest('POST', '/UserIntersted/GetSYSBlackWordList', obj)\r\n                return this.handleRequest(ActionTypes.NEWSCOLLECTION, requests)\r\n            case 'sportsCollection': // 体育收藏列表\r\n                requests =  RequestTool.seriesRequest('POST', '/UserIntersted/GetInterestedRecordsSportList', obj)\r\n                return this.handleRequest(ActionTypes.SPORTSCOLLECTION, requests)\r\n            case 'addCollection': // 添加收藏\r\n                requests =  RequestTool.seriesRequest('POST', '/UserIntersted/AddInterestedRecords', obj)\r\n                return this.promiseRequest(requests)\r\n            case 'addFollow': // 添加关注\r\n                requests =  RequestTool.seriesRequest('POST', '/UserIntersted/AddAttentionRecords', obj)\r\n                return this.promiseRequest(requests)\r\n            default:\r\n                break\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 聊天室服务\r\n     */\r\n    static ChatRoomAPI(type, obj) {\r\n        let requests;\r\n        switch(type) {\r\n            case 'createChatRoom':\r\n                requests =  RequestTool.seriesRequest('POST', '/ChatRoom/CreateChatroom', obj)\r\n                return this.promiseRequest(requests)\r\n            case 'enterChatRoom':\r\n                requests =  RequestTool.seriesRequest('POST', '/ChatRoom/AddMembers', obj)\r\n                return this.promiseRequest(requests)\r\n            case 'exitChatRoom':\r\n                requests =  RequestTool.seriesRequest('POST', '/ChatRoom/RemoveMembers', obj)\r\n                return this.promiseRequest(requests)\r\n            case 'sendText': // 发送聊天文字信息\r\n                requests =  RequestTool.seriesRequest('POST', '/ChatRoom/SendTxtMessage', obj)\r\n                return this.handleRequest(ActionTypes.NEWSLIST, requests)\r\n            case 'chatroomDetail': // 聊天室详情\r\n                requests =  RequestTool.seriesRequest('GET', '/ChatRoom/GetChatroomInfoById', obj)\r\n                return this.promiseRequest(requests)\r\n            case 'getSign': // 获取签名\r\n                requests =  RequestTool.seriesRequest('POST', '/ChatRoom/GetSign', obj)\r\n                return this.promiseRequest(requests)\r\n        }\r\n    }\r\n\r\n    \r\n}","/*\r\n * @Author: your name\r\n * @Date: 2020-10-05 16:17:52\r\n * @LastEditTime: 2020-10-25 14:01:41\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 账号列表\r\n * @FilePath: \\project\\src\\containers\\user.js\r\n */\r\nimport React from 'react'\r\nimport { Table, Drawer, Button, Form, Input, Select, Col, Row, message } from 'antd'\r\nimport APIService from '../service/APIService'\r\nconst rankLevelSingleOpts = [\r\n    { key: 0, value: '黑铁' },\r\n    { key: 1, value: '青铜' },\r\n    { key: 2, value: '白银' },\r\n    { key: 3, value: '黄金' },\r\n    { key: 4, value: '铂金' },\r\n    { key: 5, value: '钻石' },\r\n    { key: 6, value: '大师' },\r\n    { key: 7, value: '王者' },\r\n    { key: -1, value: '无段位' },\r\n\r\n]\r\nconst rankLevelFlexibleOpts = {}\r\n\r\nconst rankLevelNumOpts = [\r\n    { key: 'Ⅰ', value: 'Ⅰ' },\r\n    { key: 'Ⅱ', value: 'Ⅱ' },\r\n    { key: 'Ⅲ', value: 'Ⅲ' },\r\n    { key: 'Ⅳ', value: 'Ⅳ' },\r\n    { key: 'Ⅴ', value: 'Ⅴ' },\r\n]\r\n\r\nconst vipsLevelOpts = [\r\n    { key: 0, value: '普通' },\r\n    { key: 1, value: 'VIP' },\r\n    { key: 2, value: 'SVIP' },\r\n]\r\nclass AccountList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dataSource: [\r\n                {}\r\n            ],\r\n            initData: {\r\n                rankLevelName: '0',\r\n                rankLevelFlexibleNum: '0'\r\n            },\r\n            visible: false,\r\n            saveType: 'add'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fecthAccounts()\r\n    }\r\n\r\n    fecthAccounts() {\r\n        APIService.WeChatRobotAPI('fetchAccounts', { wxid: 'root' }).then(res => {\r\n            console.log('res======', res)\r\n            this.setState({\r\n                dataSource: res.data\r\n            })\r\n        })\r\n    }\r\n\r\n    // 点击新增\r\n    handleAdd() {\r\n        this.setState({\r\n            initData: {\r\n                rankLevelNum: null,\r\n                rankLevelName: -1,\r\n                rankLevelFlexibleName:  -1,\r\n                rankLevelFlexibleNum: null\r\n            },\r\n            visible: true,\r\n            saveType: 'add'\r\n        })\r\n    }\r\n\r\n\r\n    // 点击编辑\r\n    handleEditAccount(record) {\r\n        // 单双排具体值\r\n        let rankLevelNum = record.rankLevelSingle ? record.rankLevelSingle.substring(2, record.rankLevelSingle.length) : null\r\n        // 灵活排具体值\r\n        let rankFlexLevelNum = record.rankLevelFlexible ? record.rankLevelFlexible.substring(2, record.rankLevelFlexible.length) : null\r\n        this.setState({\r\n            initData: {\r\n                ...record,\r\n                rankLevelNum: rankLevelNum,\r\n                rankLevelName: record.rankIndexSingle ? record.rankIndexSingle : -1,\r\n                rankLevelFlexibleName: record.rankIndexFlexible ? record.rankIndexFlexible : -1,\r\n                rankLevelFlexibleNum: rankFlexLevelNum\r\n            },\r\n            visible: true,\r\n            saveType: 'edit'\r\n\r\n        })\r\n    }\r\n    onFinish(values) {\r\n        let params = {\r\n            ...values,\r\n            rankIndexSingle: values.rankLevelName ? values.rankLevelName : 0,\r\n            rankLevelSingle: rankLevelSingleOpts.find(item => item.key === values.rankLevelName).value + values.rankLevelNum,\r\n            rankIndexFlexible: values.rankLevelFlexibleName ? values.rankLevelFlexibleName : 0,\r\n            rankLevelFlexible: rankLevelSingleOpts.find(item => item.key === values.rankLevelFlexibleName).value + values.rankLevelFlexibleNum\r\n        }\r\n        if(this.state.saveType === 'edit') {\r\n            params.id = this.state.initData.id\r\n        }\r\n        delete values.rankLevelName\r\n        delete values.rankLevelNum\r\n        delete values.rankLevelFlexibleName\r\n        delete values.rankLevelFlexibleNum\r\n        APIService.WeChatRobotAPI('saveAccounts', params).then(res => {\r\n            if(res.code === 200) {\r\n                message.success('保存成功！')\r\n                this.fecthAccounts()\r\n                this.setState({\r\n                    visible: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { dataSource, initData, visible, saveType } = this.state\r\n        const columns = [\r\n            { title: '账号', dataIndex: 'username', key: 'username', },\r\n            { title: '密码', dataIndex: 'password', key: 'password', },\r\n            { title: '昵称', dataIndex: 'nickName', key: 'nickName', },\r\n            {\r\n                title: 'VIP限制等级', dataIndex: 'vipLevel', key: 'vipLevel', render: (text, record, index) => {\r\n                    return (\r\n                        <div>\r\n                            {\r\n                                text == 0 ?\r\n                                    <span style={{ color: '#008000' }}>普通</span>\r\n                                    :\r\n                                    text == 1 ?\r\n                                        <span style={{ color: '#FF8C00' }}>VIP</span>\r\n                                        :\r\n                                        <span style={{ color: '#ff0000' }}>SVIP</span>\r\n\r\n                            }\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                title: '状态', dataIndex: 'status', key: 'status', render: (text, record, index) => {\r\n                    return (\r\n                        <div>\r\n                            {\r\n                                text == 0 ?\r\n                                    <span style={{ color: '#008000' }}>正常</span>\r\n                                    :\r\n                                    text == 1 ?\r\n                                        <span style={{ color: '#FF8C00' }}>使用中</span>\r\n                                        :\r\n                                        <span style={{ color: '#ff0000' }}>不可用</span>\r\n\r\n                            }\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n            { title: '单双排段位', dataIndex: 'rankLevelSingle', key: 'rankLevelSingle', },\r\n            { title: '灵活排位段位', dataIndex: 'rankLevelFlexible', key: 'rankLevelFlexible', },\r\n            { title: '英雄数量', dataIndex: 'heroNum', key: 'heroNum', },\r\n            { title: '等级', dataIndex: 'level', key: 'level', },\r\n            { title: '租号单价（元/时）', dataIndex: 'price', key: 'price', },\r\n            { title: '英雄', dataIndex: 'heroList', key: 'heroList', ellipsis: true },\r\n            {\r\n                title: '操作', dataIndex: 'operation', render: (text, record, index) => {\r\n                    return (\r\n                        <div>\r\n                            <Button type='link' onClick={this.handleEditAccount.bind(this, record)}>编辑</Button>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n\r\n        ]\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Row style={{marginBottom: 20}}>\r\n                    <Button onClick={this.handleAdd.bind(this)} type=\"primary\">新增</Button>\r\n                </Row>\r\n                <Table\r\n                    columns={columns}\r\n                    dataSource={dataSource}\r\n                />\r\n                <Drawer\r\n                    visible={visible}\r\n                    width={600}\r\n                    title={saveType==='edit' ? '编辑' : '新建'}\r\n                    onClose={() => { this.setState({ visible: false }) }}\r\n\r\n                >\r\n                    <Form\r\n                        labelCol={{ span: 6 }}\r\n                        wrapperCol={{ span: 14 }}\r\n                        layout=\"horizontal\"\r\n                        initialValues={initData}\r\n                        onFinish={this.onFinish.bind(this)}\r\n                    >\r\n                        <Form.Item label=\"账号\" name=\"username\" required={true}>\r\n                            <Input placeholder=\"请输入账号\" />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"密码\" name=\"password\" required={true}>\r\n                            <Input.Password placeholder=\"请输入密码\" />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"昵称\" name=\"nickName\">\r\n                            <Input placeholder=\"请输入昵称\" />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"VIP限制等级\" name=\"vipLevel\">\r\n                            <Select>\r\n                                {\r\n                                    vipsLevelOpts.map((item, index) => {\r\n                                        return (\r\n                                            <Select.Option value={item.key} key={item.key}>{item.value}</Select.Option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"单双排段位\">\r\n                            <Form.Item name=\"rankLevelName\">\r\n\r\n                                <Select placeholder=\"请选择单双排段位\">\r\n                                    {\r\n                                        rankLevelSingleOpts.map((item, index) => {\r\n                                            return (\r\n                                                <Select.Option key={item.key} value={item.key}>{item.value}</Select.Option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item name=\"rankLevelNum\">\r\n                                <Select>\r\n                                    {\r\n                                        rankLevelNumOpts.map((item, index) => {\r\n                                            return (\r\n                                                <Select.Option key={item.key} value={item.key}>{item.value}</Select.Option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </Form.Item>\r\n\r\n                        </Form.Item>\r\n                        <Form.Item label=\"灵活排位段位\">\r\n                            <Form.Item name=\"rankLevelFlexibleName\">\r\n                                <Select placeholder=\"请选择单双排段位\">\r\n                                    {\r\n                                        rankLevelSingleOpts.map((item, index) => {\r\n                                            return (\r\n                                                <Select.Option key={item.key} value={item.key}>{item.value}</Select.Option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item name=\"rankLevelFlexibleNum\">\r\n                                <Select>\r\n\r\n                                    {\r\n                                        rankLevelNumOpts.map((item, index) => {\r\n                                            return (\r\n                                                <Select.Option key={item.key} value={item.key}>{item.value}</Select.Option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item label=\"英雄数量\" name=\"heroNum\">\r\n                            <Input placeholder=\"请输入昵称\" />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"等级\" name=\"level\">\r\n                            <Input placeholder=\"请输入昵称\" />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"租号单价（元/时）\" name=\"price\">\r\n                            <Input placeholder=\"请输入租号单价\" />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"英雄\" name=\"heroList\">\r\n                            <Input.TextArea placeholder=\"请输入英雄\" />\r\n                        </Form.Item>\r\n                        <Form.Item >\r\n                            <Button type=\"primary\" htmlType=\"submit\">提交</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Drawer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AccountList","/*\r\n * @Author: your name\r\n * @Date: 2020-10-05 16:17:52\r\n * @LastEditTime: 2020-10-15 00:48:13\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 用户列表\r\n * @FilePath: \\project\\src\\containers\\user.js\r\n */\r\nimport React from 'react'\r\nimport {Table, Pagination, Form, Row, Col, Input, Select, Button  } from 'antd'\r\nimport APIService from '../service/APIService'\r\nconst { Option } = Select;\r\nclass UserList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dataSource: [],\r\n            curPage: 1,\r\n            pageSize: 10, \r\n            total: 0\r\n\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.fetchUsers()\r\n    }\r\n\r\n    fetchUsers(page, query) {\r\n        this.setState({\r\n            curPage: page ? page : 0\r\n        }, () => {\r\n            let {curPage, pageSize} = this.state\r\n            let params = {\r\n                page: page ? page - 1 : curPage,\r\n                size: pageSize\r\n            }\r\n            if(query) {\r\n                params = {\r\n                    page: params.page ?params.page : 0,\r\n                    size: params.size ? params.size : 10,\r\n                    mark: query.mark ? query.mark : '',\r\n                    name:  query.name ? query.name : '',\r\n                    sex:  query.sex ? query.sex : null,\r\n                    status:  query.status ? query.status : null,\r\n\r\n                    \r\n                }\r\n            }\r\n            // this.props.form.getFieldsValue()\r\n            APIService.WeChatRobotAPI('fetchUsers', params).then(res => {\r\n                this.setState({\r\n                    dataSource: res.data.content,\r\n                    total: res.data.totalElements\r\n                })\r\n            })  \r\n        })\r\n       \r\n    }\r\n\r\n    handleChangePage(page) {\r\n        this.fetchUsers(page)\r\n    }\r\n\r\n    handleQuery(values) {\r\n        this.fetchUsers(0, values)\r\n    }\r\n    render () {\r\n        const {dataSource, curPage, pageSize, total} = this.state\r\n        const columns = [\r\n           \r\n            {\r\n                title: '昵称',\r\n                dataIndex: 'nickName',\r\n                key: 'nickName',\r\n                width: 260,\r\n                ellipsis: true\r\n            },\r\n            {\r\n                title: '备注名',\r\n                dataIndex: 'remarkName',\r\n                key: 'remarkName',\r\n            },\r\n            {\r\n                title: '用户类型',\r\n                dataIndex: 'type',\r\n                key: 'type',\r\n                render: (text, record, index) => {\r\n                    return (\r\n                        <div>\r\n                            {\r\n                                text == 0 ? \r\n                                    <span style={{color: '#1E90FF'}}>普通用户</span>\r\n                                    :\r\n                                    text == 1 ?\r\n                                    <span style={{color: '#FFD700'}}>VIP</span>\r\n                                    :\r\n                                    text == 2 ?\r\n                                    <span style={{color: '#FF8C00'}}>SVIP</span>\r\n                                    :\r\n                                    <span style={{color: '#ccc'}}>未知</span>\r\n\r\n                                \r\n                            }\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                title: '用户状态',\r\n                dataIndex: 'status',\r\n                key: 'status',\r\n                render: (text, record, index) => {\r\n                    return (\r\n                        <div>\r\n                            {\r\n                                text == 0 ? \r\n                                    <span style={{color: '#008000'}}>正常</span>\r\n                                    :\r\n                                    text == 1 ?\r\n                                    <span style={{color: '#ff0000'}}>异常（不可租号）</span>\r\n                                    :\r\n                                    <span style={{color: '#ccc'}}>未知</span>\r\n                                \r\n                            }\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                title: '余额',\r\n                dataIndex: 'balance',\r\n                key: 'balance',\r\n            },\r\n            {\r\n                title: '性别',\r\n                dataIndex: 'sex',\r\n                key: 'sex',\r\n                render: (text, record, index) => {\r\n                    return (\r\n                        <div>\r\n                            {\r\n                                text == 1 ? \r\n                                    <span >男</span>\r\n                                    :\r\n                                    <span >女</span>\r\n                                \r\n                            }\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                title: '租号模式',\r\n                dataIndex: 'rentMode',\r\n                key: 'rentMode',\r\n                render: (text, record, index) => {\r\n                    return (\r\n                        <div>\r\n                            {\r\n                                text == 1 ? \r\n                                    <span>先打后付款</span>\r\n                                    :\r\n                                    text == 2 ?\r\n                                    <span>先付款后打</span>\r\n                                    :\r\n                                    <span style={{color: '#ccc'}}>未知</span>\r\n                                \r\n                            }\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n           \r\n            \r\n            // {\r\n            //     title: '操作',\r\n            //     dataIndex: 'operation',\r\n            //     key: 'operation',\r\n            //     render: () => {\r\n            //         return (\r\n            //             <div>\r\n            //                 <Button type=\"link\">编辑</Button>\r\n            //                 <Button type=\"link\">删除</Button>  \r\n            //             </div>\r\n            //         )\r\n            //     }\r\n            // },\r\n            \r\n        ]\r\n        const formItemLayout = {\r\n            labelCol: {\r\n              span: 6,\r\n            },\r\n            wrapperCol: {\r\n              span: 14,\r\n            },\r\n          };\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Form {...formItemLayout}  onFinish={this.handleQuery.bind(this)}>\r\n                        <Row style={{backgroundColor: '#fff', padding: '16px 0px 0px 0px', marginBottom: 16}}>\r\n                            <Col span={5}>\r\n                                <Form.Item label=\"昵称\" name=\"name\">\r\n                                   \r\n                                    <Input placeholder=\"请输入昵称\" allowClear={true}/>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={5}>\r\n                                <Form.Item label=\"备注名\" name=\"mark\">\r\n                                 \r\n                                        <Input placeholder=\"请输入备注名\" allowClear={true}/>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={5}>\r\n                                <Form.Item label=\"状态\" name=\"status\">\r\n                                 \r\n                                            <Select allowClear={true}>\r\n                                                <Option value={0}>正常</Option>\r\n                                                <Option value={1}>异常（不可租号）</Option>\r\n                                            </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={5}>\r\n                                <Form.Item label=\"性别\" name=\"sex\">\r\n                                            <Select allowClear={true}>\r\n                                                <Option value=\"1\">男</Option>\r\n                                                <Option value=\"2\">女</Option>\r\n                                            </Select>\r\n                                  \r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={2}>\r\n                                <Form.Item >\r\n                                    <Button type=\"primary\"  htmlType=\"submit\">查询</Button>\r\n                                </Form.Item>\r\n                            </Col>\r\n                           \r\n                        </Row>\r\n\r\n                        \r\n                    </Form>\r\n                </div>\r\n                <Table \r\n                    style={{marginBottom: 20}}\r\n                    columns={columns}\r\n                    dataSource={dataSource}\r\n                    pagination={false}\r\n                />\r\n                <Pagination defaultCurrent={curPage} total={total} pageSize={pageSize} onChange={this.handleChangePage.bind(this)} showSizeChanger={false}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default UserList","/*\r\n * @Author: your name\r\n * @Date: 2020-06-14 12:29:32\r\n * @LastEditTime: 2020-10-14 23:18:17\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\pc\\src\\utils\\utils.js\r\n */ \r\n\r\n // 年月日转换\r\nexport  function formdateTime(dateValue) {\r\n    let dateNum = new Date(dateValue)\r\n\r\n    let year = dateNum.getFullYear()\r\n    let month = dateNum.getMonth() > 9 ? dateNum.getMonth() : '0'+ dateNum.getMonth()\r\n    let day = dateNum.getDay() > 9 ? dateNum.getDay() : '0' + dateNum.getDay()\r\n    let hours = dateNum.getHours() > 9 ? dateNum.getHours() : '0' + dateNum.getHours()\r\n    let minus = dateNum.getMinutes() > 9 ? dateNum.getMinutes() : '0' + dateNum.getMinutes()\r\n    let secnds = dateNum.getSeconds() > 9 ? dateNum.getSeconds() : '0' + dateNum.getSeconds()\r\n    // let dateFormDate = {\r\n    //     year: year,\r\n    //     month: month,\r\n    //     day: day,\r\n    //     hours: hours,\r\n    //     minus: minus,\r\n    //     secnds: secnds\r\n    // }\r\n    let dateFormDate = year + '-' + month + '-' + day + '  ' + hours + ':' + minus + ':' + secnds\r\n    return dateFormDate \r\n}\r\n\r\nexport function reamianTime(timeValue) {\r\n    let curTime = new Date()\r\n}\r\n\r\n\r\n// 随机字符串\r\nexport  function randomString(randomLen, min, max){\r\n    var str = \"\",\r\n        range = min,\r\n        arr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\r\n               'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\r\n               'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\r\n               'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F',\r\n               'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', \r\n               'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\n    // 随机产生\r\n    if(randomLen){\r\n        range = Math.round(Math.random() * (max-min)) + min;\r\n    }\r\n    for(var i=0; i<range; i++){\r\n        let pos = Math.round(Math.random() * (arr.length-1));\r\n        str += arr[pos];\r\n    }\r\n    return str;\r\n}\r\n\r\nlet timeObj = {\r\n    day: null,\r\n    hour: null,\r\n    min: null,\r\n    sec: null\r\n}\r\n// 倒计时\r\nexport function remainTime(start, end) {\r\n    var count = 0;//计时器开始时，给一个全局变量用于减少时间差（以秒为单位，每次增加1）\r\n        count += 1;//该方法执行几次，count相应++\r\n        var date1 = new Date(start);\r\n        var date2 = new Date(end);\r\n        var s1 = date1.getTime();\r\n        var s2 = date2.getTime();//毫秒为单位\r\n        var total = (s2 - s1) / 1000 - count;//每执行一次，减少时间差-1\r\n        var day = parseInt(total / (24 * 60 * 60)); //计算整数天数\r\n        var afterDay = total - day * 24 * 60 * 60; //取得算出天数后剩余的秒数\r\n        var hour = parseInt(afterDay / (60 * 60)); //计算整数小时数\r\n        var afterHour = total - day * 24 * 60 * 60 - hour * 60 * 60; //取得算出小时数后剩余的秒数\r\n        var min = parseInt(afterHour / 60); //计算整数分\r\n        var afterMin = total - day * 24 * 60 * 60 - hour * 60 * 60 - min * 60;\r\n\r\n        return  timeObj = {\r\n            day: day > 0 ? parseInt(day) : 0,\r\n            hour:hour> 0 ? parseInt(hour): 0,\r\n            min:min > 0 ? parseInt(min) : 0,\r\n            sec:afterMin > 0 ? parseInt(afterMin) : 0\r\n        }\r\n\r\n}","/*\r\n * @Author: your name\r\n * @Date: 2020-10-05 16:17:52\r\n * @LastEditTime: 2020-10-15 00:40:03\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 订单列表\r\n * @FilePath: \\project\\src\\containers\\user.js\r\n */\r\nimport React from 'react'\r\nimport {Table, Pagination} from 'antd'\r\nimport APIService from '../service/APIService'\r\nimport {formdateTime} from '../utils/utils'\r\n\r\nclass OrderList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dataSource: [],\r\n            curPage: 0,\r\n            pageSize: 10, \r\n            total: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchOrders()\r\n    }\r\n\r\n    fetchOrders(page) {\r\n        this.setState({\r\n            curPage: page ? page : 0\r\n        }, () => {\r\n            let {curPage, pageSize} = this.state\r\n            let params = {\r\n                page: page ? page - 1  : curPage,\r\n                size: pageSize\r\n            }\r\n            APIService.WeChatRobotAPI('fetchOrders', params).then(res => {\r\n                this.setState({\r\n                    dataSource: res.data.content,\r\n                    total: res.data.totalElements\r\n\r\n                })\r\n            })  \r\n        })\r\n        \r\n    }\r\n\r\n    \r\n    handleChangePage(page) {\r\n        this.fetchOrders(page)\r\n    }\r\n\r\n    render () {\r\n        const {dataSource, curPage, pageSize, total} = this.state\r\n\r\n        const columns = [\r\n            {\r\n                title: '订单号',\r\n                dataIndex: 'accountId',\r\n                key: 'accountId',\r\n            },\r\n           \r\n            {\r\n                title: '状态',\r\n                dataIndex: 'status',\r\n                key: 'status',\r\n                render: (text, record, index) => {\r\n                    return (\r\n                        <div>\r\n                            {\r\n                                text == 0 ? \r\n                                    <span style={{color: '#008000'}}>已结束</span>\r\n                                    :\r\n                                    text == 1 ?\r\n                                    <span style={{color: '#FF8C00'}}>进行中</span>\r\n                                    :\r\n                                    text == 2 ?\r\n                                    <span style={{color: '#1E90FF'}}>已完成</span>\r\n                                    :\r\n                                    <span style={{color: '#ccc'}}>其他</span>\r\n                            }\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                title: '消费金额(元)',\r\n                dataIndex: 'amount',\r\n                key: 'amount',\r\n            },\r\n            {\r\n                title: '历时(分钟)',\r\n                dataIndex: 'costTime',\r\n                key: 'costTime',\r\n            },\r\n            {\r\n                title: '支付状态',\r\n                dataIndex: 'payStatus',\r\n                key: 'payStatus',\r\n                render: (text, record, index) => {\r\n                    return (\r\n                        <div>\r\n                            {\r\n                                text == 0 ? \r\n                                    <span style={{color: '#008000'}}>已支付</span>\r\n                                    :\r\n                                    text == 1 ?\r\n                                    <span style={{color: '#FF8C00'}}>待支付</span>\r\n                                    :\r\n                                    <span style={{color: '#ccc'}}>未知</span>\r\n                            }\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                title: '开始时间',\r\n                dataIndex: 'createTime',\r\n                key: 'createTime',\r\n                render: (text, record, index) => {\r\n                    let time = formdateTime(text)\r\n                    return (\r\n                        <div>\r\n                            {time}\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                title: '结束时间',\r\n                dataIndex: 'endTime',\r\n                key: 'endTime',\r\n                render: (text, record, index) => {\r\n                    let time = formdateTime(text)\r\n                    return (\r\n                        <div>\r\n                            {time}\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n            \r\n        ]\r\n\r\n        return (\r\n            <div>\r\n                <Table \r\n                    style={{marginBottom: 20}}\r\n                    columns={columns}\r\n                    dataSource={dataSource}\r\n                    pagination={false}\r\n                />\r\n                <Pagination defaultCurrent={curPage} total={total} pageSize={pageSize} onChange={this.handleChangePage.bind(this)}  showSizeChanger={false}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrderList","/*\r\n * @Author: your name\r\n * @Date: 2020-10-05 16:17:52\r\n * @LastEditTime: 2020-10-25 14:39:01\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 订单列表\r\n * @FilePath: \\project\\src\\containers\\user.js\r\n */\r\nimport React from 'react'\r\nimport {Table, Pagination, Col, Switch, Row, message} from 'antd'\r\nimport APIService from '../service/APIService'\r\nimport {formdateTime} from '../utils/utils'\r\n\r\nclass Setting extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            openStatus: null, // 1-开启， 0关闭\r\n            checkStatus: '1'\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.fetchMode()\r\n    }\r\n\r\n    fetchMode() {\r\n        APIService.WeChatRobotAPI('fetchMode', {}).then(res => {\r\n            if(res.code === 200) {\r\n                console.log(res)\r\n                this.setState({\r\n                    checkStatus: res.data\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChangeModeStatus(checked) {\r\n        console.log(checked)\r\n        let params = {\r\n            status: checked ? '1' : '0'\r\n        }\r\n        APIService.WeChatRobotAPI('saveMode', params).then(res => {\r\n            if(res.code === 200) {\r\n                message.success('操作成功')\r\n                this.fetchMode()\r\n\r\n            }\r\n        })\r\n    }\r\n    render () {\r\n        const {checkStatus} = this.state\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col span={2}>静默模式</Col>\r\n                    <Col span={4}>\r\n                        <Switch checked={checkStatus === '1' ? true : false} checkedChildren=\"开启\" unCheckedChildren=\"关闭\"  style={{float: 'left'}} onChange={this.handleChangeModeStatus.bind(this)}/>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Setting","/*\r\n * @Author: your name\r\n * @Date: 2020-10-05 16:17:52\r\n * @LastEditTime: 2020-10-25 14:45:00\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 订单列表\r\n * @FilePath: \\project\\src\\containers\\user.js\r\n */\r\nimport React from 'react'\r\nimport {Table, Pagination} from 'antd'\r\nimport APIService from '../service/APIService'\r\nimport {formdateTime} from '../utils/utils'\r\n\r\nclass RechargeList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dataSource: [],\r\n            curPage: 0,\r\n            pageSize: 10, \r\n            total: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchRecharge()\r\n    }\r\n\r\n    fetchRecharge(page) {\r\n        this.setState({\r\n            curPage: page ? page : 0\r\n        }, () => {\r\n            let {curPage, pageSize} = this.state\r\n            let params = {\r\n                page: page ? page - 1  : curPage,\r\n                size: pageSize\r\n            }\r\n            APIService.WeChatRobotAPI('fetchRechargeList', params).then(res => {\r\n                this.setState({\r\n                    dataSource: res.data.content,\r\n                    total: res.data.totalElements\r\n                })\r\n            })  \r\n        })\r\n        \r\n    }\r\n\r\n    \r\n    handleChangePage(page) {\r\n        this.fetchRecharge(page)\r\n    }\r\n\r\n    render () {\r\n        const {dataSource, curPage, pageSize, total} = this.state\r\n\r\n        const columns = [\r\n            {\r\n                title: '昵称',\r\n                dataIndex: 'nickName',\r\n                key: 'nickName',\r\n            },\r\n            {\r\n                title: '充值金额(元)',\r\n                dataIndex: 'balance',\r\n                key: 'balance',\r\n            },\r\n          \r\n            {\r\n                title: '充值时间',\r\n                dataIndex: 'lastUpdateTime',\r\n                key: 'lastUpdateTime',\r\n                render: (text, record, index) => {\r\n                    let time = formdateTime(text)\r\n                    return (\r\n                        <div>\r\n                            {time}\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n        ]\r\n\r\n        return (\r\n            <div>\r\n                <Table \r\n                    style={{marginBottom: 20}}\r\n                    columns={columns}\r\n                    dataSource={dataSource}\r\n                    pagination={false}\r\n                />\r\n                <Pagination defaultCurrent={curPage} total={total} pageSize={pageSize} onChange={this.handleChangePage.bind(this)}  showSizeChanger={false}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RechargeList","/*\n * @Author: your name\n * @Date: 2020-10-05 16:09:56\n * @LastEditTime: 2020-10-25 14:42:21\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\project\\src\\App.js\n */\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button, Layout, Tabs } from 'antd';\nimport AccountList from './containers/account'\nimport UserList from './containers/user'\nimport OrderList from './containers/orders'\nimport Setting from './containers/settings'\nimport RechargeList from './containers/recharge'\nconst {TabPane } = Tabs\nconst { Header, Content } = Layout;\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Layout style={{height: '100%'}}>\n                <Header style={{color: '#fff', fontSize: '24px', textAlign:'left'}}>\n                    包猪公微信机器人管理后台\n                </Header>\n                <Layout>\n                    <Content className=\"page-content\">\n                        <Tabs>\n                            <TabPane tab=\"账号列表\" key={0}>\n\n                                <AccountList />\n                            </TabPane>\n                            <TabPane tab=\"用户列表\" key={1}>\n                                <UserList />\n\n                            </TabPane>\n                            <TabPane tab=\"订单列表\" key={2}>\n                                <OrderList />\n\n                            </TabPane>\n                            <TabPane tab=\"充值管理\" key={3}>\n                                <RechargeList />\n\n                            </TabPane>\n                            <TabPane tab=\"系统设置\" key={4}>\n                                <Setting/>\n                            </TabPane>\n                        </Tabs>\n                    </Content>\n                </Layout>\n\n            </Layout>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*\r\n * @Date: 2020-06-05 10:02:55\r\n * @LastEditors: Austin.Xu\r\n * @LastEditTime: 2020-06-09 21:05:32\r\n * @FilePath: /project/src/store/redux/reducer/common.js\r\n */ \r\nimport { ActionTypes, Status } from '../ActionTypes'\r\n\r\nconst initialState = {\r\n    type:  ActionTypes.BASE,\r\n    data: {},\r\n    status: Status.INIT\r\n}\r\nexport function Common (state=initialState, action) {\r\n\r\n    switch(action.reduceType) {\r\n        case ActionTypes.BASE: \r\n            return Object.assign({}, state, {\r\n                type: action.type,\r\n                data: action.data,\r\n                status: action.status\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}","/*\r\n * @Date: 2020-06-05 10:02:30\r\n * @LastEditors: Austin.Xu\r\n * @LastEditTime: 2020-06-05 10:23:51\r\n * @FilePath: /project/src/store/index.js\r\n */ \r\nimport { CombineReducers, combineReducers} from 'redux'\r\n\r\nimport {Common} from './redux/reducer/common'\r\n\r\nexport default combineReducers({\r\n    Common\r\n})","/*\n * @Author: your name\n * @Date: 2020-10-05 16:09:56\n * @LastEditTime: 2020-10-14 22:29:03\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\project\\src\\index.js\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store'\nimport {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\n\nconst middleWare = [thunk]\nconst store = createStore(reducer, applyMiddleware(...middleWare))\n \nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}