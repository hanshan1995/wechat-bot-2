{"version":3,"sources":["logo.svg","store/redux/ActionTypes.js","service/requestUtils.js","service/APIService.js","containers/account.js","containers/user.js","utils/utils.js","containers/orders.js","containers/exceptionAccounts.js","App.js","serviceWorker.js","store/redux/reducer/common.js","store/index.js","index.js"],"names":["module","exports","Status","ActionTypes","BASE","INDEXBANNER","HISTORYTSPORTRECORD","SPORTSLIST","RECOMMENDSOPRTS","PROMOTIONTYPE","PROMOTIONLIST","NEWSLIST","USERINFO","SPORTSFOLLOW","LOTTERYFOLLOW","SPORTSCOLLECTION","USERMESSAGE","RECOMMENDLOTTERY","PROFESSORRECOMMENDLOTTERY","HISTORYLOTTERY","LOTTERYDETAIL","LOTTERYLIST","LOTTERYCATEGORY","SPORTSINFORMATION","SPORTSLEAGUELIST","SPORTSGETHANDICALIST","NEWSDETAIL","PROMOTIONDETAIL","NEWSCOMMENTLIST","UPDATENEWSCOMMENT","WELFAREAPPLYLIST","HISTORYINDEXLOTTERY","ASIANSPORTSINDEXLIST","EROUPSPORTSINDEXLIST","SIZESPORTSINDEXLIST","ASIANSPORTSINDEXDETAIL","SPORTSTEXTLIVE","RequestTool","method","path","params","headers","request","url","undefined","sessionStorage","getItem","paramsArry","Object","keys","forEach","key","push","join","Request","bodyStr","JSON","stringify","body","APIService","type","data","dispatch","status","reduceType","actionType","handleDispatch","fetch","then","response","json","resultCode","message","warning","catch","err","responseType","obj","requests","seriesRequest","this","promiseRequest","handleRequest","NEWSCOLLECTION","rankLevelSingleOpts","value","rankLevelNumOpts","vipsLevelOpts","statusOpts","AccountList","props","state","dataSource","initData","rankLevelName","rankLevelFlexibleNum","visible","fecthAccounts","WeChatRobotAPI","wxid","res","console","log","setState","record","rankLevelNum","rankLevelSingle","substring","length","rankFlexLevelNum","rankLevelFlexible","rankIndexSingle","rankLevelFlexibleName","rankIndexFlexible","saveType","values","find","item","id","code","success","calcelVisible","choosenAccount","e","balanceNum","target","accountIds","balance","userId","isRentGroup","columns","title","dataIndex","width","render","text","index","style","color","ellipsis","display","onClick","handleEditAccount","bind","handleLoginOut","marginBottom","handleAdd","onClose","labelCol","span","wrapperCol","layout","initialValues","onFinish","Item","label","name","required","map","Option","placeholder","Password","TextArea","htmlType","onOk","handleOk","onCancel","handleCancel","okText","cancelText","flexDirection","flex","onChange","getBalanceNum","React","Component","Select","UserList","curPage","pageSize","total","choosenUser","fetchUsers","page","query","size","mark","sex","content","totalElements","indexOf","checkedChildren","unCheckedChildren","checked","handleSetRentGroup","handleRecharge","handleQuery","backgroundColor","padding","allowClear","pagination","defaultCurrent","handleChangePage","showSizeChanger","formdateTime","dateValue","dateNum","Date","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","OrderList","fetchOrders","time","ExceptionAccountList","parseInt","TabPane","Tabs","Header","Layout","Content","App","className","height","fontSize","textAlign","tab","Boolean","window","location","hostname","match","initialState","combineReducers","Common","action","assign","middleWare","thunk","createStore","reducer","applyMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.8bc93304.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/*\n * @Date: 2020-06-05 10:03:46\n * @LastEditors: Please set LastEditors\n * @LastEditTime: 2020-10-25 01:03:09\n * @FilePath: /project/src/store/redux/ActionTypes.js\n */\nexport const Status = {\n    INIT: 'INIT',\n    LOADING: 'LOADING',\n    SUCCESS: 'SUCCESS',\n    ERROR: 'ERRPR'\n}\n\nexport const ActionTypes = {\n    BASE: 'BASE', //  初始类型\n    INDEXBANNER: 'INDEXBANNER', // 首页轮播\n    HISTORYTSPORTRECORD: 'HISTORYTSPORTRECORD', // 昨日战绩\n    SPORTSLIST: 'SPORTSLIST', // 赛事列表\n    RECOMMENDSOPRTS: 'RECOMMENDSOPRTS', // 热门赛事\n    PROMOTIONTYPE: 'PROMOTIONTYPE', // 活动种类\n    PROMOTIONLIST: 'PROMOTIONLIST',  // 活动列表\n    NEWSLIST: 'NEWSLIST', // 资讯列表\n    USERINFO: 'USERINFO', // 用户信息\n    SPORTSFOLLOW: 'SPORTSFOLLOW', // 体育关注\n    LOTTERYFOLLOW: 'LOTTERYFOLLOW', // 彩票关注\n    SPORTSCOLLECTION: 'SPORTSCOLLECTION', // 体育收藏\n    USERMESSAGE: 'USERMESSAGE', // 用户消息\n    RECOMMENDLOTTERY: 'RECOMMENDLOTTERY', //推荐彩票\n    PROFESSORRECOMMENDLOTTERY: 'PROFESSORRECOMMENDLOTTERY',// 专家推荐\n    HISTORYLOTTERY: 'HISTORYLOTTERY', // 历史开奖\n    LOTTERYDETAIL: 'LOTTERYDETAIL', // 开奖详情\n    LOTTERYLIST: 'LOTTERYLIST', // 彩票列表,\n    LOTTERYCATEGORY: 'LOTTERYCATEGORY', // 彩种，\n    SPORTSINFORMATION: 'SPORTSINFORMATION', // 赛事情报\n    SPORTSLEAGUELIST: 'SPORTSLEAGUELIST', // 联赛列表\n    SPORTSGETHANDICALIST: 'SPORTSGETHANDICALIST', // 盘口数据\n    NEWSDETAIL: 'NEWSDETAIL', // 资讯详情,\n    PROMOTIONDETAIL: 'PROMOTIONDETAIL', // 活动详情\n    NEWSCOMMENTLIST: 'NEWSCOMMENTLIST', // 新闻评论列表\n    UPDATENEWSCOMMENT: 'UPDATENEWSCOMMENT', // 更新评论数\n    WELFAREAPPLYLIST: 'WELFAREAPPLYLIST', //福利申请列表\n    HISTORYINDEXLOTTERY: 'HISTORYINDEXLOTTERY', // 首页昨日战绩彩票\n    ASIANSPORTSINDEXLIST: 'ASIANSPORTSINDEXLIST', // 亚盘盘口数据\n    EROUPSPORTSINDEXLIST: 'EROUPSPORTSINDEXLIST', // 欧盘盘口数据\n    SIZESPORTSINDEXLIST: 'SIZESPORTSINDEXLIST', // 让球盘口数据\n    ASIANSPORTSINDEXDETAIL: 'ASIANSPORTSINDEXDETAIL', // 亚盘详情\n    SPORTSTEXTLIVE: 'SPORTSTEXTLIVE', // 文字直播\n}\n\nexport const serverUrl = 'http://localhost:10000'\n// export const serverUrl = 'http://192.168.3.32:10000'\n","/*\n * @Date: 2020-06-05 10:04:50\n * @LastEditors: Please set LastEditors\n * @LastEditTime: 2020-10-14 22:35:05\n * @FilePath: /project/src/service/requestUtils.js\n * @Description: Description\n */ \nimport { serverUrl, uploadUrl} from '../store/redux/ActionTypes'\n\nexport default class RequestTool {\n\n    \n    // 异步请求\n    static seriesRequest (method, path, params, headers) {\n        let url = serverUrl + path\n        if(headers === undefined) {\n            headers = {}\n            headers['Content-Type'] = 'application/json'\n            headers['Authorization'] = sessionStorage.getItem('omToken')\n        }\n        if(params === undefined) {\n            params = {}\n        }\n        let request\n        if(method === 'GET') {\n            let paramsArry = []\n            Object.keys(params).forEach((key) => params[key] != undefined && params[key] != null ? paramsArry.push(key + '=' + params[key]) : null)\n            url += '?' + paramsArry.join('&')\n            request = new Request(url, {\n                method: 'GET',\n                headers: headers\n            })\n        } else if(method === 'POST') {\n            let bodyStr = JSON.stringify(params)\n            request = new Request(url, {\n                method: 'POST',\n                headers: headers,\n                body: bodyStr\n            })\n\n        } else if(method === 'PUT') {\n            let bodyStr = JSON.stringify(params)\n            request = new Request(url, {\n                method: 'PUT',\n                headers: headers,\n                body: JSON.stringify(bodyStr)\n\n            })\n        } else if(method === 'DELETE') {\n\n            let bodyStr = JSON.stringify(params)\n\n            request = new Request(url, {\n                method: 'DELETE',\n                headers: headers,\n                body: JSON.stringify(bodyStr)\n            })\n        }\n\n        return request\n    }   \n\n   \n\n}","/*\n * @Date: 2020-06-05 10:05:30\n * @LastEditors: Please set LastEditors\n * @LastEditTime: 2020-10-25 00:37:39\n * @FilePath: /project/src/service/APIService.js\n */\nimport RequestTool from './requestUtils'\nimport { message } from 'antd'\nimport { ActionTypes, Status } from '../store/redux/ActionTypes'\n\nexport default class APIService {\n\n    /*************************** 调用封装 ************************/\n    static handleDispatch(type, data, dispatch, status) {\n        return dispatch({\n            reduceType: ActionTypes.BASE,\n            type: type,\n            data: data,\n            status: status\n        })\n    }\n\n    static handleRequest(actionType, request) {\n        return (dispatch) => {\n            this.handleDispatch(actionType, {}, dispatch, Status.LOADING);\n            fetch(\n                request\n            ).then((response) =>\n                response.json()\n            ).then((json) => {\n                if (json.resultCode == 1) { // 成功\n                    this.handleDispatch(actionType, json, dispatch, Status.SUCCESS)\n                } else {\n                    message.warning(json.message)\n                    return false\n                }\n            }).catch((err) => {\n                this.handleDispatch(actionType, {}, dispatch, Status.ERROR);\n            })\n        }\n    }\n\n    static promiseRequest(request, responseType) {\n        return fetch(request).then((response) => {\n            return response.json()\n        })\n    }\n\n\n    /*************************************************** API  接口 ************************************************/\n\n\n\n\n    /**\n     * 账号相关\n     * @param {*} type  具体接口定义\n     * @param {*} obj 参数\n     */\n    static WeChatRobotAPI(type, obj) {\n        let requests;\n        switch (type) {\n            case 'fetchAccounts': // 账号列表\n                requests = RequestTool.seriesRequest('POST', '/accounts', obj)\n                return this.promiseRequest(requests)\n            case 'saveAccounts': // 账号保存\n                requests = RequestTool.seriesRequest('POST', '/account/save', obj)\n                return this.promiseRequest(requests)\n            case 'fetchOrders': // 订单列表\n                requests = RequestTool.seriesRequest('GET', '/orders', obj)\n                return this.promiseRequest(requests)\n            case 'fetchUsers': // 用户列表\n                requests = RequestTool.seriesRequest('POST', '/user_list', obj)\n                return this.promiseRequest(requests)\n            case 'rentGroupChange': // 设置租号群\n                requests = RequestTool.seriesRequest('GET', '/rentgroup/mark', obj)\n                return this.promiseRequest(requests)\n            case 'recharge': // 充值\n                requests = RequestTool.seriesRequest('POST', '/recharge', obj)\n                return this.promiseRequest(requests)\n            case 'cancelRent': // 下号\n                requests = RequestTool.seriesRequest('POST', '/rent/cancel', obj)\n                return this.promiseRequest(requests)\n            case 'fetchAccountsRent': // 出租账号列表\n                requests = RequestTool.seriesRequest('POST', '/accounts/rent', obj)\n                return this.promiseRequest(requests)\n            default:\n                break;\n        }\n    }\n    /**\n     * 彩票管理\n     * @param {*} type  具体接口定义\n     * @param {*} obj 参数\n     */\n    static LotteryAPI(type, obj) {\n        let requests;\n        switch (type) {\n            case 'LotteryType': //  彩票类型\n                requests = RequestTool.seriesRequest('POST', '/Lottery/LotteryTypeList', obj)\n                return this.promiseRequest(requests)\n            case 'LotteryCatList': // 彩票重分类列表\n                requests = RequestTool.seriesRequest('POST', '/Lottery/LotteryCategoryList', obj)\n                return this.handleRequest(ActionTypes.LOTTERYCATEGORY, requests)\n            case 'lotteryList': // 彩票列表\n                requests = RequestTool.seriesRequest('POST', '/Lottery/LottoList', obj)\n                return this.handleRequest(ActionTypes.LOTTERYLIST, requests)\n            case 'recommendLottery': // 推荐彩票\n                requests = RequestTool.seriesRequest('POST', '/Lottery/HotLotteryList', obj)\n                return this.handleRequest(ActionTypes.RECOMMENDLOTTERY, requests)\n            case 'porfessorRecommendLottery': // 专家推荐\n                requests = RequestTool.seriesRequest('POST', '/Lottery/LotteryRecordList', obj)\n                return this.handleRequest(ActionTypes.PROFESSORRECOMMENDLOTTERY, requests)\n            case 'historyLottery': // 历史开奖\n                requests = RequestTool.seriesRequest('POST', '/Lottery/LotteryList', obj)\n                return this.handleRequest(ActionTypes.HISTORYLOTTERY, requests)\n            case 'lotteryDetail': // 开奖详情\n                requests = RequestTool.seriesRequest('POST', '/Lottery/LotteryDetail', obj)\n                return this.handleRequest(ActionTypes.LOTTERYDETAIL, requests)\n            case 'LotteryYesterdayInfo': //  昨日彩票战绩\n                requests = RequestTool.seriesRequest('POST', '/Lottery/GetLotteryExploits', obj)\n                return this.handleRequest(ActionTypes.HISTORYINDEXLOTTERY, requests)\n            default:\n                break\n\n        }\n    }\n\n\n    /**\n     * 体育服务\n     * @param {*} type  具体接口定义\n     * @param {*} obj 参数\n     */\n    static SportsAPI(type, obj) {\n        let requests;\n        switch (type) {\n            case 'historyRecord': // 昨日战绩\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetExploits', obj)\n                return this.handleRequest(ActionTypes.HISTORYTSPORTRECORD, requests)\n            case 'sportsList': // 查询赛事列表\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetCompetitionList', obj)\n                return this.handleRequest(ActionTypes.SPORTSLIST, requests)\n            case 'recommendSports': // 热门赛事\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetReferralsList', obj)\n                return this.handleRequest(ActionTypes.RECOMMENDSOPRTS, requests)\n            case 'sportsDetail': // 赛事详情\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetCompetitionDetail', obj)\n                return this.promiseRequest(requests)\n            case 'sportsInformationDetail': // 赛事情报\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetInformationList', obj)\n                return this.handleRequest(ActionTypes.SPORTSINFORMATION, requests)\n            case 'sportsLeagueList': // 联赛列表\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetLeagueList', obj)\n                return this.handleRequest(ActionTypes.SPORTSLEAGUELIST, requests)\n            case 'asianSportsIndexList': // 让球（亚盘）盘口数据\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetAsiaHandicaList', obj)\n                return this.handleRequest(ActionTypes.ASIANSPORTSINDEXLIST, requests)\n            case 'asianSportsIndexDetail': // 让球（亚盘）盘口数据详情\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetCompanyAsiaHandicaList', obj)\n                return this.handleRequest(ActionTypes.ASIANSPORTSINDEXDETAIL, requests)\n            case 'eroupSportsIndexList': // 亚盘盘口数据\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetEuropeHandicaList', obj)\n                return this.handleRequest(ActionTypes.EROUPSPORTSINDEXLIST, requests)\n            case 'sizeSportsIndexList': // 亚盘盘口数据\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetEuropeHandicaList', obj)\n                return this.handleRequest(ActionTypes.SIZESPORTSINDEXLIST, requests)\n            case 'sportsTextLive': // 文字直播查询\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetLiveInformation', obj)\n                return this.handleRequest(ActionTypes.SPORTSTEXTLIVE, requests)\n            default:\n                break\n        }\n    }\n\n    /**\n     * 活动服务\n     */\n    static PromotionAPI(type, obj) {\n        let requests;\n        switch (type) {\n            case 'promotionType': // 活动种类\n                requests = RequestTool.seriesRequest('POST', '/Promotion/PromotionTypeList', obj)\n                return this.handleRequest(ActionTypes.PROMOTIONTYPE, requests)\n            case 'promotionList': // 活动列表\n                requests = RequestTool.seriesRequest('POST', '/Promotion/PromotionList', obj)\n                return this.handleRequest(ActionTypes.PROMOTIONLIST, requests)\n            case 'promotionDetail': // 活动详情\n                requests = RequestTool.seriesRequest('POST', '/Promotion/PromotionDetail', obj)\n                return this.handleRequest(ActionTypes.PROMOTIONDETAIL, requests)\n            case 'applyWelfare': // 申请活动\n                requests = RequestTool.seriesRequest('POST', '/Promotion/ApplyForPromotion', obj)\n                return this.promiseRequest(requests)\n            case 'applyWelfareList': // 申请活动列表\n                requests = RequestTool.seriesRequest('POST', '/Promotion/ApplyRecordList', obj)\n                return this.handleRequest(ActionTypes.WELFAREAPPLYLIST, requests)\n        }\n\n    }\n    /**\n     * 资讯服务\n     */\n    static NewsAPI(type, obj) {\n        let requests;\n        switch (type) {\n            case 'newsList':\n                requests = RequestTool.seriesRequest('POST', '/News/GetNewsList', obj)\n                return this.handleRequest(ActionTypes.NEWSLIST, requests)\n            case 'newsDetail':\n                requests = RequestTool.seriesRequest('POST', '/News/GetNewsById', obj)\n                return this.handleRequest(ActionTypes.NEWSDETAIL, requests)\n            case 'NewsCommentList': // 资讯评论列表\n                requests = RequestTool.seriesRequest('POST', '/News/GetCommentInfoList', obj)\n                return this.handleRequest(ActionTypes.NEWSCOMMENTLIST, requests)\n            case 'addNewsComment': // 添加资讯评论\n                requests = RequestTool.seriesRequest('POST', '/News/AddCommentInfo', obj)\n                return this.promiseRequest(requests)\n            case 'updateCommentNum': // 更新评论数\n                requests = RequestTool.seriesRequest('POST', '/News/UpdateNewsCommentNumber', obj)\n                return this.handleRequest(ActionTypes.UPDATENEWSCOMMENT, requests)\n        }\n    }\n\n    /**\n     * 用户收藏关注\n     */\n    static UserInterstedAPI(type, obj) {\n        let requests;\n        switch (type) {\n            case 'sportsFollow': // 体育关注列表\n                requests = RequestTool.seriesRequest('POST', '/UserIntersted/GetAttentionRecordsBySportList', obj)\n                return this.handleRequest(ActionTypes.SPORTSFOLLOW, requests)\n            case 'lotteryFollow': // 彩票关注列表\n                requests = RequestTool.seriesRequest('POST', '/UserIntersted/GetAttentionRecordsByLotteryList', obj)\n                return this.handleRequest(ActionTypes.LOTTERYFOLLOW, requests)\n            case 'newsCollection': // 资讯收藏列表\n                requests = RequestTool.seriesRequest('POST', '/UserIntersted/GetSYSBlackWordList', obj)\n                return this.handleRequest(ActionTypes.NEWSCOLLECTION, requests)\n            case 'sportsCollection': // 体育收藏列表\n                requests = RequestTool.seriesRequest('POST', '/UserIntersted/GetInterestedRecordsSportList', obj)\n                return this.handleRequest(ActionTypes.SPORTSCOLLECTION, requests)\n            case 'addCollection': // 添加收藏\n                requests = RequestTool.seriesRequest('POST', '/UserIntersted/AddInterestedRecords', obj)\n                return this.promiseRequest(requests)\n            case 'addFollow': // 添加关注\n                requests = RequestTool.seriesRequest('POST', '/UserIntersted/AddAttentionRecords', obj)\n                return this.promiseRequest(requests)\n            default:\n                break\n        }\n    }\n\n    /**\n     * 聊天室服务\n     */\n    static ChatRoomAPI(type, obj) {\n        let requests;\n        switch (type) {\n            case 'createChatRoom':\n                requests = RequestTool.seriesRequest('POST', '/ChatRoom/CreateChatroom', obj)\n                return this.promiseRequest(requests)\n            case 'enterChatRoom':\n                requests = RequestTool.seriesRequest('POST', '/ChatRoom/AddMembers', obj)\n                return this.promiseRequest(requests)\n            case 'exitChatRoom':\n                requests = RequestTool.seriesRequest('POST', '/ChatRoom/RemoveMembers', obj)\n                return this.promiseRequest(requests)\n            case 'sendText': // 发送聊天文字信息\n                requests = RequestTool.seriesRequest('POST', '/ChatRoom/SendTxtMessage', obj)\n                return this.handleRequest(ActionTypes.NEWSLIST, requests)\n            case 'chatroomDetail': // 聊天室详情\n                requests = RequestTool.seriesRequest('GET', '/ChatRoom/GetChatroomInfoById', obj)\n                return this.promiseRequest(requests)\n            case 'getSign': // 获取签名\n                requests = RequestTool.seriesRequest('POST', '/ChatRoom/GetSign', obj)\n                return this.promiseRequest(requests)\n        }\n    }\n\n\n}","/*\n * @Author: your name\n * @Date: 2020-10-05 16:17:52\n * @LastEditTime: 2020-10-25 01:00:23\n * @LastEditors: Please set LastEditors\n * @Description: 账号列表\n * @FilePath: \\project\\src\\containers\\user.js\n */\nimport React from 'react'\nimport { Table, Drawer, Button, Form, Input, Select, Col, Row, message, Modal } from 'antd'\nimport APIService from '../service/APIService'\nconst rankLevelSingleOpts = [\n    { key: 0, value: '黑铁' },\n    { key: 1, value: '青铜' },\n    { key: 2, value: '白银' },\n    { key: 3, value: '黄金' },\n    { key: 4, value: '铂金' },\n    { key: 5, value: '钻石' },\n    { key: 6, value: '大师' },\n    { key: 7, value: '王者' },\n    { key: -1, value: '无段位' },\n\n]\nconst rankLevelFlexibleOpts = {}\n\nconst rankLevelNumOpts = [\n    { key: 'Ⅰ', value: 'Ⅰ' },\n    { key: 'Ⅱ', value: 'Ⅱ' },\n    { key: 'Ⅲ', value: 'Ⅲ' },\n    { key: 'Ⅳ', value: 'Ⅳ' },\n    { key: 'Ⅴ', value: 'Ⅴ' },\n]\n\nconst vipsLevelOpts = [\n    { key: 0, value: '普通' },\n    { key: 1, value: 'VIP' },\n    { key: 2, value: 'SVIP' },\n]\n\nconst statusOpts = [\n    { key: 0, value: '正常' },\n    { key: 1, value: '使用中' },\n    { key: 2, value: '其他' },\n\n\n]\nclass AccountList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dataSource: [\n                {}\n            ],\n            initData: {\n                rankLevelName: '0',\n                rankLevelFlexibleNum: '0'\n            },\n            visible: false,\n            visible: false,\n            balanceNum: null,\n            choosenAccount: null\n\n        }\n    }\n\n    componentDidMount() {\n        this.fecthAccounts()\n    }\n\n    fecthAccounts() {\n        APIService.WeChatRobotAPI('fetchAccounts', { wxid: 'root' }).then(res => {\n            console.log('res======', res)\n            this.setState({\n                dataSource: res.data\n            })\n        })\n    }\n\n    handleEditAccount(record) {\n        // 单双排具体值\n        let rankLevelNum = record.rankLevelSingle ? record.rankLevelSingle.substring(2, record.rankLevelSingle.length) : null\n        // 灵活排具体值\n        let rankFlexLevelNum = record.rankLevelFlexible ? record.rankLevelFlexible.substring(2, record.rankLevelFlexible.length) : null\n        this.setState({\n            initData: {\n                ...record,\n                rankLevelNum: rankLevelNum,\n                rankLevelName: record.rankIndexSingle ? record.rankIndexSingle : -1,\n                rankLevelFlexibleName: record.rankIndexFlexible ? record.rankIndexFlexible : -1,\n                rankLevelFlexibleNum: rankFlexLevelNum\n            },\n            visible: true,\n            saveType: 'edit'\n        })\n    }\n    onFinish(values) {\n        let params = {\n            ...values,\n            rankIndexSingle: values.rankLevelName ? values.rankLevelName : 0,\n            rankLevelSingle: rankLevelSingleOpts.find(item => item.key === values.rankLevelName).value + values.rankLevelNum,\n            rankIndexFlexible: values.rankLevelFlexibleName ? values.rankLevelFlexibleName : 0,\n            rankLevelFlexible: rankLevelSingleOpts.find(item => item.key === values.rankLevelFlexibleName).value + values.rankLevelFlexibleNum\n        }\n        if (this.state.saveType === 'edit') {\n            params.id = this.state.initData.id\n        }\n        delete values.rankLevelName\n        delete values.rankLevelNum\n        delete values.rankLevelFlexibleName\n        delete values.rankLevelFlexibleNum\n        APIService.WeChatRobotAPI('saveAccounts', params).then(res => {\n            if (res.code === 200) {\n                message.success('保存成功！')\n                this.fecthAccounts()\n                this.setState({\n                    visible: false\n                })\n            }\n        })\n    }\n\n\n    /**\n    * 下号\n    */\n    handleLoginOut(record) {\n        this.setState({\n            calcelVisible: true,\n            choosenAccount: record\n        })\n    }\n\n    getBalanceNum(e) {\n        this.setState({\n            balanceNum: e.target.value\n        })\n    }\n\n\n    handleOk() {\n        let { balanceNum, choosenAccount } = this.state\n        if (balanceNum) {\n            let params = {\n                accountIds: [choosenAccount.id],\n                balance: balanceNum\n            }\n            APIService.WeChatRobotAPI('cancelRent', params).then(res => {\n                if (res.code == 200) {\n                    message.success('下号成功')\n                    this.setState({\n                        choosenAccount: null,\n                        calcelVisible: false,\n                        balanceNum: null\n                    }, () => {\n                        this.fecthAccounts()\n                    })\n                } else {\n                    message.warning(res.message)\n                }\n\n            })\n        }\n\n    }\n\n    handleCancel() {\n        this.setState({\n            calcelVisible: false\n        })\n    }\n\n    handleSetRentGroup(record) {\n        let params = {\n            userId: record.id,\n            status: !record.isRentGroup ? 1 : 0\n        }\n        APIService.WeChatRobotAPI('rentGroupChange', params).then(res => {\n            console.log(res)\n\n\n            this.fecthAccounts()\n        })\n    }\n\n    // 点击新增\n    handleAdd() {\n        this.setState({\n            initData: {\n                rankLevelNum: null,\n                rankLevelName: -1,\n                rankLevelFlexibleName: -1,\n                rankLevelFlexibleNum: null\n            },\n            visible: true,\n            saveType: 'add'\n        })\n    }\n\n\n    render() {\n        const { dataSource, initData, visible, saveType } = this.state\n        const columns = [\n            { title: '账号', dataIndex: 'username', key: 'username', },\n            { title: '密码', dataIndex: 'password', key: 'password', },\n            { title: '昵称', dataIndex: 'nickName', key: 'nickName', },\n            {\n                title: 'VIP限制等级', dataIndex: 'vipLevel', width: 160, key: 'vipLevel', render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                text == 0 ?\n                                    <span style={{ color: '#008000' }}>普通</span>\n                                    :\n                                    text == 1 ?\n                                        <span style={{ color: '#FF8C00' }}>VIP</span>\n                                        :\n                                        <span style={{ color: '#ff0000' }}>SVIP</span>\n\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '状态', dataIndex: 'status', key: 'status', render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                text == 0 ?\n                                    <span style={{ color: '#008000' }}>正常</span>\n                                    :\n                                    text == 1 ?\n                                        <span style={{ color: '#FF8C00' }}>使用中</span>\n                                        :\n                                        <span style={{ color: '#ff0000' }}>不可用</span>\n\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            { title: '单双排段位', dataIndex: 'rankLevelSingle', key: 'rankLevelSingle', width: 160, },\n            { title: '灵活排位段位', dataIndex: 'rankLevelFlexible', key: 'rankLevelFlexible', width: 160, },\n            { title: '英雄数', dataIndex: 'heroNum', key: 'heroNum', },\n            { title: '等级', dataIndex: 'level', key: 'level', },\n            { title: '租号单价（元/时）', dataIndex: 'price', key: 'price', width: 160, },\n            { title: '英雄', dataIndex: 'heroList', key: 'heroList', ellipsis: true },\n            {\n                title: '操作', dataIndex: 'operation', width: 160, render: (text, record, index) => {\n                    return (\n                        <div style={{ display: 'flex' }}>\n                            <Button type='link' onClick={this.handleEditAccount.bind(this, record)}>编辑</Button>\n                            <Button type='link' onClick={this.handleLoginOut.bind(this, record)}>下号</Button>\n                        </div>\n                    )\n                }\n            }\n\n        ]\n\n\n        return (\n            <div>\n                <Row style={{ marginBottom: 20 }}>\n                    <Button onClick={this.handleAdd.bind(this)} type=\"primary\">新增</Button>\n                </Row>\n\n                <Table\n                    columns={columns}\n                    dataSource={dataSource}\n                />\n                <Drawer\n                    visible={visible}\n                    width={600}\n                    title={saveType == 'edit' ? '编辑' : '新建'}\n                    onClose={() => { this.setState({ visible: false }) }}\n\n                >\n                    <Form\n                        labelCol={{ span: 6 }}\n                        wrapperCol={{ span: 14 }}\n                        layout=\"horizontal\"\n                        initialValues={initData}\n                        onFinish={this.onFinish.bind(this)}\n                    >\n                        <Form.Item label=\"账号状态\" name=\"status\" required={true}>\n                            <Select>\n                                {\n                                    statusOpts.map((item, index) => {\n                                        return (\n                                            <Select.Option value={item.key} key={item.key}>{item.value}</Select.Option>\n                                        )\n                                    })\n                                }\n                            </Select>\n                        </Form.Item>\n\n                        <Form.Item label=\"账号\" name=\"username\" required={true}>\n                            <Input placeholder=\"请输入账号\" />\n                        </Form.Item>\n                        <Form.Item label=\"密码\" name=\"password\" required={true}>\n                            <Input.Password placeholder=\"请输入密码\" />\n                        </Form.Item>\n                        <Form.Item label=\"昵称\" name=\"nickName\">\n                            <Input placeholder=\"请输入昵称\" />\n                        </Form.Item>\n                        <Form.Item label=\"VIP限制等级\" name=\"vipLevel\">\n                            <Select>\n                                {\n                                    vipsLevelOpts.map((item, index) => {\n                                        return (\n                                            <Select.Option value={item.key} key={item.key}>{item.value}</Select.Option>\n                                        )\n                                    })\n                                }\n                            </Select>\n                        </Form.Item>\n                        <Form.Item label=\"单双排段位\">\n                            <Form.Item name=\"rankLevelName\">\n\n                                <Select placeholder=\"请选择单双排段位\">\n                                    {\n                                        rankLevelSingleOpts.map((item, index) => {\n                                            return (\n                                                <Select.Option key={item.key} value={item.key}>{item.value}</Select.Option>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            </Form.Item>\n\n                            <Form.Item name=\"rankLevelNum\">\n                                <Select>\n                                    {\n                                        rankLevelNumOpts.map((item, index) => {\n                                            return (\n                                                <Select.Option key={item.key} value={item.key}>{item.value}</Select.Option>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            </Form.Item>\n\n                        </Form.Item>\n                        <Form.Item label=\"灵活排位段位\">\n                            <Form.Item name=\"rankLevelFlexibleName\">\n                                <Select placeholder=\"请选择单双排段位\">\n                                    {\n                                        rankLevelSingleOpts.map((item, index) => {\n                                            return (\n                                                <Select.Option key={item.key} value={item.key}>{item.value}</Select.Option>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            </Form.Item>\n                            <Form.Item name=\"rankLevelFlexibleNum\">\n                                <Select>\n\n                                    {\n                                        rankLevelNumOpts.map((item, index) => {\n                                            return (\n                                                <Select.Option key={item.key} value={item.key}>{item.value}</Select.Option>\n                                            )\n                                        })\n                                    }\n\n                                </Select>\n                            </Form.Item>\n                        </Form.Item>\n\n                        <Form.Item label=\"英雄数量\" name=\"heroNum\">\n                            <Input placeholder=\"请输入昵称\" />\n                        </Form.Item>\n                        <Form.Item label=\"等级\" name=\"level\">\n                            <Input placeholder=\"请输入昵称\" />\n                        </Form.Item>\n                        <Form.Item label=\"租号单价（元/时）\" name=\"price\">\n                            <Input placeholder=\"请输入租号单价\" />\n                        </Form.Item>\n                        <Form.Item label=\"英雄\" name=\"heroList\">\n                            <Input.TextArea placeholder=\"请输入英雄\" />\n                        </Form.Item>\n                        <Form.Item >\n                            <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n                        </Form.Item>\n                    </Form>\n                </Drawer>\n\n                <Modal\n                    title=\"下号\"\n                    visible={this.state.calcelVisible}\n                    onOk={this.handleOk.bind(this)}\n                    onCancel={this.handleCancel.bind(this)}\n                    okText=\"确认\"\n                    cancelText=\"取消\"\n                >\n                    <div style={{ display: 'flex', flexDirection: 'row' }}>\n                        <div style={{ flex: 2 }}>金额</div>\n                        <Input style={{ flex: 3 }} onChange={this.getBalanceNum.bind(this)}></Input>\n                    </div>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default AccountList","/*\n * @Author: your name\n * @Date: 2020-10-05 16:17:52\n * @LastEditTime: 2020-10-15 00:48:13\n * @LastEditors: Please set LastEditors\n * @Description: 用户列表\n * @FilePath: \\project\\src\\containers\\user.js\n */\nimport React from 'react'\nimport { Table, Pagination, Form, Row, Col, Input, Select, Button, Modal, Switch, message } from 'antd'\nimport APIService from '../service/APIService'\nconst { Option } = Select;\nclass UserList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dataSource: [{}],\n            curPage: 1,\n            pageSize: 10,\n            total: 0,\n            visible: false,\n            balanceNum: null,\n            choosenUser: null\n\n        }\n    }\n    componentDidMount() {\n        this.fetchUsers()\n    }\n\n    fetchUsers(page, query) {\n        this.setState({\n            curPage: page ? page : 0\n        }, () => {\n            let { curPage, pageSize } = this.state\n            let params = {\n                page: page ? page - 1 : curPage,\n                size: pageSize\n            }\n            if (query) {\n                params = {\n                    page: params.page ? params.page : 0,\n                    size: params.size ? params.size : 10,\n                    mark: query.mark ? query.mark : '',\n                    name: query.name ? query.name : '',\n                    sex: query.sex ? query.sex : null,\n                    status: query.status ? query.status : null,\n\n\n                }\n            }\n            // this.props.form.getFieldsValue()\n            APIService.WeChatRobotAPI('fetchUsers', params).then(res => {\n                this.setState({\n                    dataSource: res.data.content,\n                    total: res.data.totalElements\n                })\n            })\n        })\n\n    }\n\n    handleChangePage(page) {\n        this.fetchUsers(page)\n    }\n\n    handleQuery(values) {\n        this.fetchUsers(0, values)\n    }\n\n    /**\n     * 充值\n     */\n    handleRecharge(record) {\n        this.setState({\n            visible: true,\n            choosenUser: record\n        })\n    }\n\n    getBalanceNum(e) {\n        this.setState({\n            balanceNum: e.target.value\n        })\n    }\n    handleOk() {\n        let { balanceNum, choosenUser } = this.state\n        if (balanceNum) {\n            let params = {\n                type: 1,\n                balance: balanceNum,\n                userId: choosenUser.id\n            }\n            APIService.WeChatRobotAPI('recharge', params).then(res => {\n                if (res.code == 200) {\n                    message.success('充值成功')\n                    this.setState({\n                        choosenUser: null,\n                        visible: false,\n                        balanceNum: null\n                    }, () => {\n                        this.fetchUsers()\n                    })\n                } else {\n                    message.warning(res.message)\n                }\n\n            })\n        }\n\n    }\n\n    handleCancel() {\n        this.setState({\n            visible: false\n        })\n    }\n\n    handleSetRentGroup(record) {\n        let params = {\n            userId: record.id,\n            status: !record.isRentGroup ? 1 : 0\n        }\n        APIService.WeChatRobotAPI('rentGroupChange', params).then(res => {\n            console.log(res)\n\n\n            this.fetchUsers()\n        })\n    }\n\n\n    render() {\n        const { dataSource, curPage, pageSize, total } = this.state\n        const columns = [\n\n            {\n                title: '昵称',\n                dataIndex: 'nickName',\n                key: 'nickName',\n                width: 260,\n                ellipsis: true,\n                render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                record.wxid && record.wxid.indexOf('@chatroom') > -1 ?\n                                    <span>{text}(群)</span>\n                                    :\n                                    <span>{text}</span>\n                            }\n                        </div>\n                    )\n\n                }\n            },\n            {\n                title: '备注名',\n                dataIndex: 'remarkName',\n                key: 'remarkName',\n            },\n            {\n                title: '是否租号群',\n                dataIndex: 'isRentGroup',\n                key: 'isRentGroup',\n                render: (text, record, index) => {\n                    return (\n                        <div>\n                            <Switch checkedChildren=\"启用中\" unCheckedChildren=\"禁用中\" checked={record.isRentGroup} onChange={this.handleSetRentGroup.bind(this, record)} />\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '用户类型',\n                dataIndex: 'type',\n                key: 'type',\n                render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                text == 0 ?\n                                    <span style={{ color: '#1E90FF' }}>普通用户</span>\n                                    :\n                                    text == 1 ?\n                                        <span style={{ color: '#FFD700' }}>VIP</span>\n                                        :\n                                        text == 2 ?\n                                            <span style={{ color: '#FF8C00' }}>SVIP</span>\n                                            :\n                                            <span style={{ color: '#ccc' }}>未知</span>\n\n\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '用户状态',\n                dataIndex: 'status',\n                key: 'status',\n                render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                text == 0 ?\n                                    <span style={{ color: '#008000' }}>正常</span>\n                                    :\n                                    text == 1 ?\n                                        <span style={{ color: '#ff0000' }}>异常（不可租号）</span>\n                                        :\n                                        <span style={{ color: '#ccc' }}>未知</span>\n\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '余额',\n                dataIndex: 'balance',\n                key: 'balance',\n            },\n            {\n                title: '性别',\n                dataIndex: 'sex',\n                key: 'sex',\n                render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                text == 1 ?\n                                    <span >男</span>\n                                    :\n                                    <span >女</span>\n\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '租号模式',\n                dataIndex: 'rentMode',\n                key: 'rentMode',\n                render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                text == 1 ?\n                                    <span>先打后付款</span>\n                                    :\n                                    text == 2 ?\n                                        <span>先付款后打</span>\n                                        :\n                                        <span style={{ color: '#ccc' }}>未知</span>\n\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '操作',\n                dataIndex: 'operation',\n                key: 'operation',\n                render: (text, record, index) => {\n                    return (\n                        <div>\n                            <Button type=\"link\" onClick={this.handleRecharge.bind(this, record)}>充值</Button>\n                        </div>\n                    )\n                }\n            },\n\n        ]\n        const formItemLayout = {\n            labelCol: {\n                span: 6,\n            },\n            wrapperCol: {\n                span: 14,\n            },\n        };\n        return (\n            <div>\n                <div>\n                    <Form {...formItemLayout} onFinish={this.handleQuery.bind(this)}>\n                        <Row style={{ backgroundColor: '#fff', padding: '16px 0px 0px 0px', marginBottom: 16 }}>\n                            <Col span={5}>\n                                <Form.Item label=\"昵称\" name=\"name\">\n\n                                    <Input placeholder=\"请输入昵称\" allowClear={true} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={5}>\n                                <Form.Item label=\"备注名\" name=\"mark\">\n\n                                    <Input placeholder=\"请输入备注名\" allowClear={true} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={5}>\n                                <Form.Item label=\"状态\" name=\"status\">\n\n                                    <Select allowClear={true}>\n                                        <Option value={0}>正常</Option>\n                                        <Option value={1}>异常（不可租号）</Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                            <Col span={5}>\n                                <Form.Item label=\"性别\" name=\"sex\">\n                                    <Select allowClear={true}>\n                                        <Option value=\"1\">男</Option>\n                                        <Option value=\"2\">女</Option>\n                                    </Select>\n\n                                </Form.Item>\n                            </Col>\n                            <Col span={2}>\n                                <Form.Item >\n                                    <Button type=\"primary\" htmlType=\"submit\">查询</Button>\n                                </Form.Item>\n                            </Col>\n\n                        </Row>\n\n\n                    </Form>\n                </div>\n                <Table\n                    style={{ marginBottom: 20 }}\n                    columns={columns}\n                    dataSource={dataSource}\n                    pagination={false}\n                />\n                <Pagination defaultCurrent={curPage} total={total} pageSize={pageSize} onChange={this.handleChangePage.bind(this)} showSizeChanger={false} />\n\n                <Modal\n                    title=\"充值\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk.bind(this)}\n                    onCancel={this.handleCancel.bind(this)}\n                    okText=\"确认\"\n                    cancelText=\"取消\"\n                >\n                    <div style={{ display: 'flex', flexDirection: 'row' }}>\n                        <div style={{ flex: 2 }}>充值金额</div>\n                        <Input style={{ flex: 3 }} onChange={this.getBalanceNum.bind(this)}></Input>\n                    </div>\n                </Modal>\n            </div>\n        )\n    }\n}\nexport default UserList","/*\n * @Author: your name\n * @Date: 2020-06-14 12:29:32\n * @LastEditTime: 2020-10-14 23:18:17\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\pc\\src\\utils\\utils.js\n */ \n\n // 年月日转换\nexport  function formdateTime(dateValue) {\n    let dateNum = new Date(dateValue)\n\n    let year = dateNum.getFullYear()\n    let month = dateNum.getMonth() > 9 ? dateNum.getMonth() : '0'+ dateNum.getMonth()\n    let day = dateNum.getDay() > 9 ? dateNum.getDay() : '0' + dateNum.getDay()\n    let hours = dateNum.getHours() > 9 ? dateNum.getHours() : '0' + dateNum.getHours()\n    let minus = dateNum.getMinutes() > 9 ? dateNum.getMinutes() : '0' + dateNum.getMinutes()\n    let secnds = dateNum.getSeconds() > 9 ? dateNum.getSeconds() : '0' + dateNum.getSeconds()\n    // let dateFormDate = {\n    //     year: year,\n    //     month: month,\n    //     day: day,\n    //     hours: hours,\n    //     minus: minus,\n    //     secnds: secnds\n    // }\n    let dateFormDate = year + '-' + month + '-' + day + '  ' + hours + ':' + minus + ':' + secnds\n    return dateFormDate \n}\n\nexport function reamianTime(timeValue) {\n    let curTime = new Date()\n}\n\n\n// 随机字符串\nexport  function randomString(randomLen, min, max){\n    var str = \"\",\n        range = min,\n        arr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n               'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\n               'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\n               'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F',\n               'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', \n               'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n    // 随机产生\n    if(randomLen){\n        range = Math.round(Math.random() * (max-min)) + min;\n    }\n    for(var i=0; i<range; i++){\n        let pos = Math.round(Math.random() * (arr.length-1));\n        str += arr[pos];\n    }\n    return str;\n}\n\nlet timeObj = {\n    day: null,\n    hour: null,\n    min: null,\n    sec: null\n}\n// 倒计时\nexport function remainTime(start, end) {\n    var count = 0;//计时器开始时，给一个全局变量用于减少时间差（以秒为单位，每次增加1）\n        count += 1;//该方法执行几次，count相应++\n        var date1 = new Date(start);\n        var date2 = new Date(end);\n        var s1 = date1.getTime();\n        var s2 = date2.getTime();//毫秒为单位\n        var total = (s2 - s1) / 1000 - count;//每执行一次，减少时间差-1\n        var day = parseInt(total / (24 * 60 * 60)); //计算整数天数\n        var afterDay = total - day * 24 * 60 * 60; //取得算出天数后剩余的秒数\n        var hour = parseInt(afterDay / (60 * 60)); //计算整数小时数\n        var afterHour = total - day * 24 * 60 * 60 - hour * 60 * 60; //取得算出小时数后剩余的秒数\n        var min = parseInt(afterHour / 60); //计算整数分\n        var afterMin = total - day * 24 * 60 * 60 - hour * 60 * 60 - min * 60;\n\n        return  timeObj = {\n            day: day > 0 ? parseInt(day) : 0,\n            hour:hour> 0 ? parseInt(hour): 0,\n            min:min > 0 ? parseInt(min) : 0,\n            sec:afterMin > 0 ? parseInt(afterMin) : 0\n        }\n\n}","/*\n * @Author: your name\n * @Date: 2020-10-05 16:17:52\n * @LastEditTime: 2020-10-15 00:40:03\n * @LastEditors: Please set LastEditors\n * @Description: 订单列表\n * @FilePath: \\project\\src\\containers\\user.js\n */\nimport React from 'react'\nimport {Table, Pagination} from 'antd'\nimport APIService from '../service/APIService'\nimport {formdateTime} from '../utils/utils'\n\nclass OrderList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dataSource: [],\n            curPage: 0,\n            pageSize: 10, \n            total: 0\n        }\n    }\n\n    componentDidMount(){\n        this.fetchOrders()\n    }\n\n    fetchOrders(page) {\n        this.setState({\n            curPage: page ? page : 0\n        }, () => {\n            let {curPage, pageSize} = this.state\n            let params = {\n                page: page ? page - 1  : curPage,\n                size: pageSize\n            }\n            APIService.WeChatRobotAPI('fetchOrders', params).then(res => {\n                this.setState({\n                    dataSource: res.data.content,\n                    total: res.data.totalElements\n\n                })\n            })  \n        })\n        \n    }\n\n    \n    handleChangePage(page) {\n        this.fetchOrders(page)\n    }\n\n    render () {\n        const {dataSource, curPage, pageSize, total} = this.state\n\n        const columns = [\n            {\n                title: '订单号',\n                dataIndex: 'accountId',\n                key: 'accountId',\n            },\n           \n            {\n                title: '状态',\n                dataIndex: 'status',\n                key: 'status',\n                render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                text == 0 ? \n                                    <span style={{color: '#008000'}}>已结束</span>\n                                    :\n                                    text == 1 ?\n                                    <span style={{color: '#FF8C00'}}>进行中</span>\n                                    :\n                                    text == 2 ?\n                                    <span style={{color: '#1E90FF'}}>已完成</span>\n                                    :\n                                    <span style={{color: '#ccc'}}>其他</span>\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '消费金额(元)',\n                dataIndex: 'amount',\n                key: 'amount',\n            },\n            {\n                title: '历时(分钟)',\n                dataIndex: 'costTime',\n                key: 'costTime',\n            },\n            {\n                title: '支付状态',\n                dataIndex: 'payStatus',\n                key: 'payStatus',\n                render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                text == 0 ? \n                                    <span style={{color: '#008000'}}>已支付</span>\n                                    :\n                                    text == 1 ?\n                                    <span style={{color: '#FF8C00'}}>待支付</span>\n                                    :\n                                    <span style={{color: '#ccc'}}>未知</span>\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '开始时间',\n                dataIndex: 'createTime',\n                key: 'createTime',\n                render: (text, record, index) => {\n                    let time = formdateTime(text)\n                    return (\n                        <div>\n                            {time}\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '结束时间',\n                dataIndex: 'endTime',\n                key: 'endTime',\n                render: (text, record, index) => {\n                    let time = formdateTime(text)\n                    return (\n                        <div>\n                            {time}\n                        </div>\n                    )\n                }\n            },\n            \n        ]\n\n        return (\n            <div>\n                <Table \n                    style={{marginBottom: 20}}\n                    columns={columns}\n                    dataSource={dataSource}\n                    pagination={false}\n                />\n                <Pagination defaultCurrent={curPage} total={total} pageSize={pageSize} onChange={this.handleChangePage.bind(this)}  showSizeChanger={false}/>\n\n            </div>\n        )\n    }\n}\n\nexport default OrderList","/*\n * @Author: your name\n * @Date: 2020-10-05 16:17:52\n * @LastEditTime: 2020-10-25 01:00:23\n * @LastEditors: Please set LastEditors\n * @Description: 账号列表\n * @FilePath: \\project\\src\\containers\\user.js\n */\nimport React from 'react'\nimport { Table, Drawer, Button, Form, Input, Select, Col, Row, message, Modal } from 'antd'\nimport APIService from '../service/APIService'\nconst rankLevelSingleOpts = [\n    { key: 0, value: '黑铁' },\n    { key: 1, value: '青铜' },\n    { key: 2, value: '白银' },\n    { key: 3, value: '黄金' },\n    { key: 4, value: '铂金' },\n    { key: 5, value: '钻石' },\n    { key: 6, value: '大师' },\n    { key: 7, value: '王者' },\n    { key: -1, value: '无段位' },\n\n]\nconst rankLevelFlexibleOpts = {}\n\nconst rankLevelNumOpts = [\n    { key: 'Ⅰ', value: 'Ⅰ' },\n    { key: 'Ⅱ', value: 'Ⅱ' },\n    { key: 'Ⅲ', value: 'Ⅲ' },\n    { key: 'Ⅳ', value: 'Ⅳ' },\n    { key: 'Ⅴ', value: 'Ⅴ' },\n]\n\nconst vipsLevelOpts = [\n    { key: 0, value: '普通' },\n    { key: 1, value: 'VIP' },\n    { key: 2, value: 'SVIP' },\n]\n\nconst statusOpts = [\n    { key: 0, value: '正常' },\n    { key: 1, value: '使用中' },\n    { key: 2, value: '其他' },\n\n\n]\nclass ExceptionAccountList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dataSource: [\n                {}\n            ],\n            initData: {\n                rankLevelName: '0',\n                rankLevelFlexibleNum: '0'\n            },\n            visible: false,\n            visible: false,\n            balanceNum: null,\n            choosenAccount: null\n\n        }\n    }\n\n    componentDidMount() {\n        this.fecthAccounts()\n    }\n\n    fecthAccounts() {\n        APIService.WeChatRobotAPI('fetchAccountsRent', { wxid: 'root' }).then(res => {\n            console.log('res======', res)\n            this.setState({\n                dataSource: res.data\n            })\n        })\n    }\n\n    handleEditAccount(record) {\n        // 单双排具体值\n        let rankLevelNum = record.rankLevelSingle ? record.rankLevelSingle.substring(2, record.rankLevelSingle.length) : null\n        // 灵活排具体值\n        let rankFlexLevelNum = record.rankLevelFlexible ? record.rankLevelFlexible.substring(2, record.rankLevelFlexible.length) : null\n        this.setState({\n            initData: {\n                ...record,\n                rankLevelNum: rankLevelNum,\n                rankLevelName: record.rankIndexSingle ? record.rankIndexSingle : -1,\n                rankLevelFlexibleName: record.rankIndexFlexible ? record.rankIndexFlexible : -1,\n                rankLevelFlexibleNum: rankFlexLevelNum\n            },\n            visible: true\n        })\n    }\n    onFinish(values) {\n        let params = {\n            ...values,\n            rankIndexSingle: values.rankLevelName ? values.rankLevelName : 0,\n            rankLevelSingle: rankLevelSingleOpts.find(item => item.key === values.rankLevelName).value + values.rankLevelNum,\n            rankIndexFlexible: values.rankLevelFlexibleName ? values.rankLevelFlexibleName : 0,\n            rankLevelFlexible: rankLevelSingleOpts.find(item => item.key === values.rankLevelFlexibleName).value + values.rankLevelFlexibleNum\n        }\n        if (this.state.initData) {\n            params.id = this.state.initData.id\n        }\n        delete values.rankLevelName\n        delete values.rankLevelNum\n        delete values.rankLevelFlexibleName\n        delete values.rankLevelFlexibleNum\n        APIService.WeChatRobotAPI('saveAccounts', params).then(res => {\n            if (res.code === 200) {\n                message.success('保存成功！')\n                this.setState({\n                    visible: false\n                })\n            }\n        })\n    }\n\n\n    /**\n    * 下号\n    */\n    handleLoginOut(record) {\n        this.setState({\n            calcelVisible: true,\n            choosenAccount: record\n        })\n    }\n\n    getBalanceNum(e) {\n        this.setState({\n            balanceNum: e.target.value\n        })\n    }\n\n\n    handleOk() {\n        let { balanceNum, choosenAccount } = this.state\n        if (balanceNum) {\n            let params = {\n                accountIds: [choosenAccount.id],\n                balance: balanceNum\n            }\n            APIService.WeChatRobotAPI('cancelRent', params).then(res => {\n                if (res.code == 200) {\n                    message.success('下号成功')\n                    this.setState({\n                        choosenAccount: null,\n                        calcelVisible: false,\n                        balanceNum: null\n                    }, () => {\n                        this.fecthAccounts()\n                    })\n                } else {\n                    message.warning(res.message)\n                }\n\n            })\n        }\n\n    }\n\n    handleCancel() {\n        this.setState({\n            calcelVisible: false\n        })\n    }\n\n    handleSetRentGroup(record) {\n        let params = {\n            userId: record.id,\n            status: !record.isRentGroup ? 1 : 0\n        }\n        APIService.WeChatRobotAPI('rentGroupChange', params).then(res => {\n            console.log(res)\n\n\n            this.fecthAccounts()\n        })\n    }\n\n\n    render() {\n        const { dataSource, initData, visible } = this.state\n        const columns = [\n\n            { title: '租号人', dataIndex: 'wxName', key: 'wxName', },\n            { title: '账号', dataIndex: 'username', key: 'username', },\n            { title: '昵称', dataIndex: 'nickName', key: 'nickName', },\n            {\n                title: 'VIP限制等级', dataIndex: 'vipLevel', key: 'vipLevel', render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                text == 0 ?\n                                    <span style={{ color: '#008000' }}>普通</span>\n                                    :\n                                    text == 1 ?\n                                        <span style={{ color: '#FF8C00' }}>VIP</span>\n                                        :\n                                        <span style={{ color: '#ff0000' }}>SVIP</span>\n\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '状态', dataIndex: 'status', key: 'status', render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                text == 0 ?\n                                    <span style={{ color: '#008000' }}>正常</span>\n                                    :\n                                    text == 1 ?\n                                        <span style={{ color: '#FF8C00' }}>使用中</span>\n                                        :\n                                        <span style={{ color: '#ff0000' }}>不可用</span>\n\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            { title: '单双排段位', dataIndex: 'rankLevelSingle', key: 'rankLevelSingle', },\n            { title: '等级', dataIndex: 'level', key: 'level', },\n            { title: '租号单价（元/时）', dataIndex: 'price', key: 'price', width: 160, },\n            {\n                title: '时长', dataIndex: 'costTime', width: 160, key: 'costTime', ellipsis: true, render: (text, record, index) => {\n                    return (\n                        <span>{parseInt(parseInt(text) / 60)}小时{parseInt(text) % 60}分钟</span>\n                    )\n                }\n            },\n            {\n                title: '操作', dataIndex: 'operation', width: 160, render: (text, record, index) => {\n                    return (\n                        <div style={{ display: 'flex' }}>\n                            <Button type='link' onClick={this.handleLoginOut.bind(this, record)}>下号</Button>\n                        </div>\n                    )\n                }\n            }\n\n        ]\n\n\n        return (\n            <div>\n                <Table\n                    columns={columns}\n                    dataSource={dataSource}\n                />\n                <Drawer\n                    visible={visible}\n                    width={600}\n                    title={initData ? '编辑' : '新建'}\n                    onClose={() => { this.setState({ visible: false }) }}\n\n                >\n                    <Form\n                        labelCol={{ span: 6 }}\n                        wrapperCol={{ span: 14 }}\n                        layout=\"horizontal\"\n                        initialValues={initData}\n                        onFinish={this.onFinish.bind(this)}\n                    >\n                        <Form.Item label=\"账号状态\" name=\"status\" required={true}>\n                            <Select>\n                                {\n                                    statusOpts.map((item, index) => {\n                                        return (\n                                            <Select.Option value={item.key} key={item.key}>{item.value}</Select.Option>\n                                        )\n                                    })\n                                }\n                            </Select>\n                        </Form.Item>\n\n                        <Form.Item label=\"账号\" name=\"username\" required={true}>\n                            <Input placeholder=\"请输入账号\" />\n                        </Form.Item>\n                        <Form.Item label=\"密码\" name=\"password\" required={true}>\n                            <Input.Password placeholder=\"请输入密码\" />\n                        </Form.Item>\n                        <Form.Item label=\"昵称\" name=\"nickName\">\n                            <Input placeholder=\"请输入昵称\" />\n                        </Form.Item>\n                        <Form.Item label=\"VIP限制等级\" name=\"vipLevel\">\n                            <Select>\n                                {\n                                    vipsLevelOpts.map((item, index) => {\n                                        return (\n                                            <Select.Option value={item.key} key={item.key}>{item.value}</Select.Option>\n                                        )\n                                    })\n                                }\n                            </Select>\n                        </Form.Item>\n                        <Form.Item label=\"单双排段位\">\n                            <Form.Item name=\"rankLevelName\">\n\n                                <Select placeholder=\"请选择单双排段位\">\n                                    {\n                                        rankLevelSingleOpts.map((item, index) => {\n                                            return (\n                                                <Select.Option key={item.key} value={item.key}>{item.value}</Select.Option>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            </Form.Item>\n\n                            <Form.Item name=\"rankLevelNum\">\n                                <Select>\n                                    {\n                                        rankLevelNumOpts.map((item, index) => {\n                                            return (\n                                                <Select.Option key={item.key} value={item.key}>{item.value}</Select.Option>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            </Form.Item>\n\n                        </Form.Item>\n                        <Form.Item label=\"灵活排位段位\">\n                            <Form.Item name=\"rankLevelFlexibleName\">\n                                <Select placeholder=\"请选择单双排段位\">\n                                    {\n                                        rankLevelSingleOpts.map((item, index) => {\n                                            return (\n                                                <Select.Option key={item.key} value={item.key}>{item.value}</Select.Option>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            </Form.Item>\n                            <Form.Item name=\"rankLevelFlexibleNum\">\n                                <Select>\n\n                                    {\n                                        rankLevelNumOpts.map((item, index) => {\n                                            return (\n                                                <Select.Option key={item.key} value={item.key}>{item.value}</Select.Option>\n                                            )\n                                        })\n                                    }\n\n                                </Select>\n                            </Form.Item>\n                        </Form.Item>\n\n                        <Form.Item label=\"英雄数量\" name=\"heroNum\">\n                            <Input placeholder=\"请输入昵称\" />\n                        </Form.Item>\n                        <Form.Item label=\"等级\" name=\"level\">\n                            <Input placeholder=\"请输入昵称\" />\n                        </Form.Item>\n                        <Form.Item label=\"租号单价（元/时）\" name=\"price\">\n                            <Input placeholder=\"请输入租号单价\" />\n                        </Form.Item>\n                        <Form.Item label=\"英雄\" name=\"heroList\">\n                            <Input.TextArea placeholder=\"请输入英雄\" />\n                        </Form.Item>\n                        <Form.Item >\n                            <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n                        </Form.Item>\n                    </Form>\n                </Drawer>\n\n                <Modal\n                    title=\"下号\"\n                    visible={this.state.calcelVisible}\n                    onOk={this.handleOk.bind(this)}\n                    onCancel={this.handleCancel.bind(this)}\n                    okText=\"确认\"\n                    cancelText=\"取消\"\n                >\n                    <div style={{ display: 'flex', flexDirection: 'row' }}>\n                        <div style={{ flex: 2 }}>金额</div>\n                        <Input style={{ flex: 3 }} onChange={this.getBalanceNum.bind(this)}></Input>\n                    </div>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default ExceptionAccountList","/*\n * @Author: your name\n * @Date: 2020-10-05 16:09:56\n * @LastEditTime: 2020-10-14 22:58:27\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\project\\src\\App.js\n */\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Layout, Tabs } from 'antd';\nimport AccountList from './containers/account'\nimport UserList from './containers/user'\nimport OrderList from './containers/orders'\nimport ExceptionAccountList from './containers/exceptionAccounts'\n\nconst { TabPane } = Tabs\nconst { Header, Content } = Layout;\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Layout style={{ height: '100%' }}>\n                <Header style={{ color: '#fff', fontSize: '24px', textAlign: 'left' }}>\n                    包猪公微信机器人管理后台\n                </Header>\n                <Layout>\n                    <Content className=\"page-content\">\n                        <Tabs>\n                            <TabPane tab=\"账号列表\" key={0}>\n\n                                <AccountList />\n                            </TabPane>\n                            <TabPane tab=\"用户列表\" key={1}>\n                                <UserList />\n\n                            </TabPane>\n                            <TabPane tab=\"订单列表\" key={2}>\n                                <OrderList />\n\n                            </TabPane>\n                            <TabPane tab=\"超时账号\" key={3}>\n                                <ExceptionAccountList />\n\n                            </TabPane>\n                        </Tabs>\n                    </Content>\n                </Layout>\n\n            </Layout>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*\n * @Date: 2020-06-05 10:02:55\n * @LastEditors: Austin.Xu\n * @LastEditTime: 2020-06-09 21:05:32\n * @FilePath: /project/src/store/redux/reducer/common.js\n */ \nimport { ActionTypes, Status } from '../ActionTypes'\n\nconst initialState = {\n    type:  ActionTypes.BASE,\n    data: {},\n    status: Status.INIT\n}\nexport function Common (state=initialState, action) {\n\n    switch(action.reduceType) {\n        case ActionTypes.BASE: \n            return Object.assign({}, state, {\n                type: action.type,\n                data: action.data,\n                status: action.status\n            })\n        default:\n            return state\n    }\n}","/*\n * @Date: 2020-06-05 10:02:30\n * @LastEditors: Austin.Xu\n * @LastEditTime: 2020-06-05 10:23:51\n * @FilePath: /project/src/store/index.js\n */ \nimport { CombineReducers, combineReducers} from 'redux'\n\nimport {Common} from './redux/reducer/common'\n\nexport default combineReducers({\n    Common\n})","/*\n * @Author: your name\n * @Date: 2020-10-05 16:09:56\n * @LastEditTime: 2020-10-14 22:29:03\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\project\\src\\index.js\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store'\nimport {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\n\nconst middleWare = [thunk]\nconst store = createStore(reducer, applyMiddleware(...middleWare))\n \nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}