{"version":3,"sources":["logo.svg","store/redux/ActionTypes.js","service/requestUtils.js","service/APIService.js","containers/account.js","containers/user.js","utils/utils.js","containers/orders.js","containers/exceptionAccounts.js","containers/settings.js","containers/finance.js","component/dictList.js","containers/dict.js","App.js","serviceWorker.js","store/redux/reducer/common.js","store/index.js","index.js"],"names":["module","exports","Status","ActionTypes","BASE","INDEXBANNER","HISTORYTSPORTRECORD","SPORTSLIST","RECOMMENDSOPRTS","PROMOTIONTYPE","PROMOTIONLIST","NEWSLIST","USERINFO","SPORTSFOLLOW","LOTTERYFOLLOW","SPORTSCOLLECTION","USERMESSAGE","RECOMMENDLOTTERY","PROFESSORRECOMMENDLOTTERY","HISTORYLOTTERY","LOTTERYDETAIL","LOTTERYLIST","LOTTERYCATEGORY","SPORTSINFORMATION","SPORTSLEAGUELIST","SPORTSGETHANDICALIST","NEWSDETAIL","PROMOTIONDETAIL","NEWSCOMMENTLIST","UPDATENEWSCOMMENT","WELFAREAPPLYLIST","HISTORYINDEXLOTTERY","ASIANSPORTSINDEXLIST","EROUPSPORTSINDEXLIST","SIZESPORTSINDEXLIST","ASIANSPORTSINDEXDETAIL","SPORTSTEXTLIVE","RequestTool","method","path","params","headers","request","url","undefined","sessionStorage","getItem","paramsArry","Object","keys","forEach","key","push","join","Request","bodyStr","JSON","stringify","body","APIService","type","data","dispatch","status","reduceType","actionType","handleDispatch","fetch","then","response","json","resultCode","message","warning","catch","err","responseType","obj","requests","seriesRequest","this","promiseRequest","handleRequest","NEWSCOLLECTION","Option","Select","rankLevelSingleOpts","value","rankLevelNumOpts","vipsLevelOpts","statusOpts","regionList","AccountList","props","state","dataSource","basicDataSource","initData","rankLevelName","rankLevelFlexibleNum","visible","fecthAccounts","WeChatRobotAPI","wxid","res","console","log","setState","record","rankLevelNum","rankLevelSingle","substring","length","rankFlexLevelNum","rankLevelFlexible","rankIndexSingle","rankLevelFlexibleName","rankIndexFlexible","saveType","values","find","item","id","code","success","calcelVisible","choosenAccount","balanceNum","accountIds","costTime","userId","isRentGroup","e","queryValue","target","queryServer","list","filter","server","Modal","confirm","title","content","okText","cancelText","onOk","that","isAllCancel","onCancel","columns","dataIndex","width","render","text","index","style","color","ellipsis","fixed","display","onClick","handleEditAccount","bind","handleLoginOut","marginBottom","marginRight","allowClear","onChange","handleSelectServer","map","placeholder","handleGetFilterValue","handleFilter","handleAdd","handleAllCancel","marginLeft","scroll","x","y","onClose","labelCol","span","wrapperCol","layout","initialValues","onFinish","Item","label","name","required","Password","TextArea","htmlType","handleOk","handleCancel","flexDirection","flex","step","getBalanceNum","parser","isNaN","Number","replace","String","React","Component","UserList","curPage","pageSize","total","choosenUser","choosenRentMode","fetchUsers","page","query","size","mark","sex","totalElements","balance","editVisible","rentMode","indexOf","checkedChildren","unCheckedChildren","checked","handleSetRentGroup","handleRecharge","handleEdit","handleQuery","backgroundColor","padding","pagination","defaultCurrent","handleChangePage","showSizeChanger","handleEditOk","handleEditCancel","getRentType","formdateTime","dateValue","dateNum","Date","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","OrderList","fetchOrders","time","ExceptionAccountList","parseInt","Setting","openStatus","checkStatus","cardStatus","fetchMode","fetchCard","float","handleChangeModeStatus","marginTop","handleChangeCardStatus","RangePicker","DatePicker","FinanceList","start","moment","endOf","subtract","end","fetchList","fetchTotal","totalNum","startStr","_d","format","endStr","justifyContent","defaultValue","startOf","handleGetTimes","textAlign","DictList","lab","handleDel","TabPane","Tabs","Content","Layout","Header","labArry","DictManage","curTab","handleChangeTab","lebStr","className","position","right","top","zIndex","activeKey","toString","tab","editDict","delDict","ref","listOne","listTwo","listThree","listFour","App","account","user","order","outtime","finance","height","fontSize","handleChange","Boolean","window","location","hostname","match","initialState","combineReducers","Common","action","assign","middleWare","thunk","createStore","reducer","applyMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.a5eee26f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/*\n * @Date: 2020-06-05 10:03:46\n * @LastEditors: Please set LastEditors\n * @LastEditTime: 2020-10-25 01:03:09\n * @FilePath: /project/src/store/redux/ActionTypes.js\n */\nexport const Status = {\n    INIT: 'INIT',\n    LOADING: 'LOADING',\n    SUCCESS: 'SUCCESS',\n    ERROR: 'ERRPR'\n}\n\nexport const ActionTypes = {\n    BASE: 'BASE', //  初始类型\n    INDEXBANNER: 'INDEXBANNER', // 首页轮播\n    HISTORYTSPORTRECORD: 'HISTORYTSPORTRECORD', // 昨日战绩\n    SPORTSLIST: 'SPORTSLIST', // 赛事列表\n    RECOMMENDSOPRTS: 'RECOMMENDSOPRTS', // 热门赛事\n    PROMOTIONTYPE: 'PROMOTIONTYPE', // 活动种类\n    PROMOTIONLIST: 'PROMOTIONLIST',  // 活动列表\n    NEWSLIST: 'NEWSLIST', // 资讯列表\n    USERINFO: 'USERINFO', // 用户信息\n    SPORTSFOLLOW: 'SPORTSFOLLOW', // 体育关注\n    LOTTERYFOLLOW: 'LOTTERYFOLLOW', // 彩票关注\n    SPORTSCOLLECTION: 'SPORTSCOLLECTION', // 体育收藏\n    USERMESSAGE: 'USERMESSAGE', // 用户消息\n    RECOMMENDLOTTERY: 'RECOMMENDLOTTERY', //推荐彩票\n    PROFESSORRECOMMENDLOTTERY: 'PROFESSORRECOMMENDLOTTERY',// 专家推荐\n    HISTORYLOTTERY: 'HISTORYLOTTERY', // 历史开奖\n    LOTTERYDETAIL: 'LOTTERYDETAIL', // 开奖详情\n    LOTTERYLIST: 'LOTTERYLIST', // 彩票列表,\n    LOTTERYCATEGORY: 'LOTTERYCATEGORY', // 彩种，\n    SPORTSINFORMATION: 'SPORTSINFORMATION', // 赛事情报\n    SPORTSLEAGUELIST: 'SPORTSLEAGUELIST', // 联赛列表\n    SPORTSGETHANDICALIST: 'SPORTSGETHANDICALIST', // 盘口数据\n    NEWSDETAIL: 'NEWSDETAIL', // 资讯详情,\n    PROMOTIONDETAIL: 'PROMOTIONDETAIL', // 活动详情\n    NEWSCOMMENTLIST: 'NEWSCOMMENTLIST', // 新闻评论列表\n    UPDATENEWSCOMMENT: 'UPDATENEWSCOMMENT', // 更新评论数\n    WELFAREAPPLYLIST: 'WELFAREAPPLYLIST', //福利申请列表\n    HISTORYINDEXLOTTERY: 'HISTORYINDEXLOTTERY', // 首页昨日战绩彩票\n    ASIANSPORTSINDEXLIST: 'ASIANSPORTSINDEXLIST', // 亚盘盘口数据\n    EROUPSPORTSINDEXLIST: 'EROUPSPORTSINDEXLIST', // 欧盘盘口数据\n    SIZESPORTSINDEXLIST: 'SIZESPORTSINDEXLIST', // 让球盘口数据\n    ASIANSPORTSINDEXDETAIL: 'ASIANSPORTSINDEXDETAIL', // 亚盘详情\n    SPORTSTEXTLIVE: 'SPORTSTEXTLIVE', // 文字直播\n}\n\nexport const serverUrl = 'http://localhost:10000'\n// export const serverUrl = 'http://192.168.3.32:10000'\n","/*\n * @Date: 2020-06-05 10:04:50\n * @LastEditors: Please set LastEditors\n * @LastEditTime: 2020-10-14 22:35:05\n * @FilePath: /project/src/service/requestUtils.js\n * @Description: Description\n */ \nimport { serverUrl, uploadUrl} from '../store/redux/ActionTypes'\n\nexport default class RequestTool {\n\n    \n    // 异步请求\n    static seriesRequest (method, path, params, headers) {\n        let url = serverUrl + path\n        if(headers === undefined) {\n            headers = {}\n            headers['Content-Type'] = 'application/json'\n            headers['Authorization'] = sessionStorage.getItem('omToken')\n        }\n        if(params === undefined) {\n            params = {}\n        }\n        let request\n        if(method === 'GET') {\n            let paramsArry = []\n            Object.keys(params).forEach((key) => params[key] != undefined && params[key] != null ? paramsArry.push(key + '=' + params[key]) : null)\n            url += '?' + paramsArry.join('&')\n            request = new Request(url, {\n                method: 'GET',\n                headers: headers\n            })\n        } else if(method === 'POST') {\n            let bodyStr = JSON.stringify(params)\n            request = new Request(url, {\n                method: 'POST',\n                headers: headers,\n                body: bodyStr\n            })\n\n        } else if(method === 'PUT') {\n            let bodyStr = JSON.stringify(params)\n            request = new Request(url, {\n                method: 'PUT',\n                headers: headers,\n                body: JSON.stringify(bodyStr)\n\n            })\n        } else if(method === 'DELETE') {\n\n            let bodyStr = JSON.stringify(params)\n\n            request = new Request(url, {\n                method: 'DELETE',\n                headers: headers,\n                body: JSON.stringify(bodyStr)\n            })\n        }\n\n        return request\n    }   \n\n   \n\n}","/*\n * @Date: 2020-06-05 10:05:30\n * @LastEditors: Please set LastEditors\n * @LastEditTime: 2020-10-25 00:37:39\n * @FilePath: /project/src/service/APIService.js\n */\nimport RequestTool from './requestUtils'\nimport { message } from 'antd'\nimport { ActionTypes, Status } from '../store/redux/ActionTypes'\n\nexport default class APIService {\n\n    /*************************** 调用封装 ************************/\n    static handleDispatch(type, data, dispatch, status) {\n        return dispatch({\n            reduceType: ActionTypes.BASE,\n            type: type,\n            data: data,\n            status: status\n        })\n    }\n\n    static handleRequest(actionType, request) {\n        return (dispatch) => {\n            this.handleDispatch(actionType, {}, dispatch, Status.LOADING);\n            fetch(\n                request\n            ).then((response) =>\n                response.json()\n            ).then((json) => {\n                if (json.resultCode == 1) { // 成功\n                    this.handleDispatch(actionType, json, dispatch, Status.SUCCESS)\n                } else {\n                    message.warning(json.message)\n                    return false\n                }\n            }).catch((err) => {\n                this.handleDispatch(actionType, {}, dispatch, Status.ERROR);\n            })\n        }\n    }\n\n    static promiseRequest(request, responseType) {\n        return fetch(request).then((response) => {\n            return response.json()\n        })\n    }\n\n\n    /*************************************************** API  接口 ************************************************/\n\n\n\n\n    /**\n     * 账号相关\n     * @param {*} type  具体接口定义\n     * @param {*} obj 参数\n     */\n    static WeChatRobotAPI(type, obj) {\n        let requests;\n        switch (type) {\n            case 'fetchAccounts': // 账号列表\n                requests = RequestTool.seriesRequest('POST', '/accounts', obj)\n                return this.promiseRequest(requests)\n            case 'saveAccounts': // 账号保存\n                requests = RequestTool.seriesRequest('POST', '/account/save', obj)\n                return this.promiseRequest(requests)\n            case 'fetchOrders': // 订单列表\n                requests = RequestTool.seriesRequest('GET', '/orders', obj)\n                return this.promiseRequest(requests)\n            case 'fetchUsers': // 用户列表\n                requests = RequestTool.seriesRequest('POST', '/user_list', obj)\n                return this.promiseRequest(requests)\n            case 'rentGroupChange': // 设置租号群\n                requests = RequestTool.seriesRequest('GET', '/rentgroup/mark', obj)\n                return this.promiseRequest(requests)\n            case 'recharge': // 充值\n                requests = RequestTool.seriesRequest('POST', '/recharge', obj)\n                return this.promiseRequest(requests)\n            case 'cancelRent': // 下号\n                requests = RequestTool.seriesRequest('POST', '/rent/cancel', obj)\n                return this.promiseRequest(requests)\n            case 'fetchAccountsRent': // 出租账号列表\n                requests = RequestTool.seriesRequest('POST', '/accounts/rent', obj)\n                return this.promiseRequest(requests)\n            case 'saveMode': // 修改mode\n                requests = RequestTool.seriesRequest('GET', '/mode', obj)\n                return this.promiseRequest(requests)\n            case 'fetchMode': // 获取mode\n                requests = RequestTool.seriesRequest('GET', '/getmode', obj)\n                return this.promiseRequest(requests)\n            case 'financeList': // 财务列表\n                requests = RequestTool.seriesRequest('GET', '/turnover', obj)\n                return this.promiseRequest(requests)\n            case 'financeTotal': // 财务汇总\n                requests = RequestTool.seriesRequest('GET', '/amount/total', obj)\n                return this.promiseRequest(requests)\n            case 'changeRentMode': // 修改租号模式\n                requests = RequestTool.seriesRequest('POST', '/rentMode', obj)\n                return this.promiseRequest(requests)\n            case 'configList': // 字典列表\n                requests = RequestTool.seriesRequest('GET', '/config/list', obj)\n                return this.promiseRequest(requests)\n            case 'configSave': // 字典保存\n                requests = RequestTool.seriesRequest('POST', '/config/save', obj)\n                return this.promiseRequest(requests)\n            case 'configDel': // 字典保存\n                requests = RequestTool.seriesRequest('GET', '/config/delete', obj)\n                return this.promiseRequest(requests)\n            case 'cardGet': // 获取名片\n                requests = RequestTool.seriesRequest('GET', '/card/getmode', obj)\n                return this.promiseRequest(requests)\n             case 'cardSave': // 修改名片\n                requests = RequestTool.seriesRequest('GET', '/card/mode', obj)\n                return this.promiseRequest(requests)\n            default:\n                break;\n        }\n    }\n    /**\n     * 彩票管理\n     * @param {*} type  具体接口定义\n     * @param {*} obj 参数\n     */\n    static LotteryAPI(type, obj) {\n        let requests;\n        switch (type) {\n            case 'LotteryType': //  彩票类型\n                requests = RequestTool.seriesRequest('POST', '/Lottery/LotteryTypeList', obj)\n                return this.promiseRequest(requests)\n            case 'LotteryCatList': // 彩票重分类列表\n                requests = RequestTool.seriesRequest('POST', '/Lottery/LotteryCategoryList', obj)\n                return this.handleRequest(ActionTypes.LOTTERYCATEGORY, requests)\n            case 'lotteryList': // 彩票列表\n                requests = RequestTool.seriesRequest('POST', '/Lottery/LottoList', obj)\n                return this.handleRequest(ActionTypes.LOTTERYLIST, requests)\n            case 'recommendLottery': // 推荐彩票\n                requests = RequestTool.seriesRequest('POST', '/Lottery/HotLotteryList', obj)\n                return this.handleRequest(ActionTypes.RECOMMENDLOTTERY, requests)\n            case 'porfessorRecommendLottery': // 专家推荐\n                requests = RequestTool.seriesRequest('POST', '/Lottery/LotteryRecordList', obj)\n                return this.handleRequest(ActionTypes.PROFESSORRECOMMENDLOTTERY, requests)\n            case 'historyLottery': // 历史开奖\n                requests = RequestTool.seriesRequest('POST', '/Lottery/LotteryList', obj)\n                return this.handleRequest(ActionTypes.HISTORYLOTTERY, requests)\n            case 'lotteryDetail': // 开奖详情\n                requests = RequestTool.seriesRequest('POST', '/Lottery/LotteryDetail', obj)\n                return this.handleRequest(ActionTypes.LOTTERYDETAIL, requests)\n            case 'LotteryYesterdayInfo': //  昨日彩票战绩\n                requests = RequestTool.seriesRequest('POST', '/Lottery/GetLotteryExploits', obj)\n                return this.handleRequest(ActionTypes.HISTORYINDEXLOTTERY, requests)\n            default:\n                break\n\n        }\n    }\n\n\n    /**\n     * 体育服务\n     * @param {*} type  具体接口定义\n     * @param {*} obj 参数\n     */\n    static SportsAPI(type, obj) {\n        let requests;\n        switch (type) {\n            case 'historyRecord': // 昨日战绩\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetExploits', obj)\n                return this.handleRequest(ActionTypes.HISTORYTSPORTRECORD, requests)\n            case 'sportsList': // 查询赛事列表\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetCompetitionList', obj)\n                return this.handleRequest(ActionTypes.SPORTSLIST, requests)\n            case 'recommendSports': // 热门赛事\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetReferralsList', obj)\n                return this.handleRequest(ActionTypes.RECOMMENDSOPRTS, requests)\n            case 'sportsDetail': // 赛事详情\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetCompetitionDetail', obj)\n                return this.promiseRequest(requests)\n            case 'sportsInformationDetail': // 赛事情报\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetInformationList', obj)\n                return this.handleRequest(ActionTypes.SPORTSINFORMATION, requests)\n            case 'sportsLeagueList': // 联赛列表\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetLeagueList', obj)\n                return this.handleRequest(ActionTypes.SPORTSLEAGUELIST, requests)\n            case 'asianSportsIndexList': // 让球（亚盘）盘口数据\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetAsiaHandicaList', obj)\n                return this.handleRequest(ActionTypes.ASIANSPORTSINDEXLIST, requests)\n            case 'asianSportsIndexDetail': // 让球（亚盘）盘口数据详情\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetCompanyAsiaHandicaList', obj)\n                return this.handleRequest(ActionTypes.ASIANSPORTSINDEXDETAIL, requests)\n            case 'eroupSportsIndexList': // 亚盘盘口数据\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetEuropeHandicaList', obj)\n                return this.handleRequest(ActionTypes.EROUPSPORTSINDEXLIST, requests)\n            case 'sizeSportsIndexList': // 亚盘盘口数据\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetEuropeHandicaList', obj)\n                return this.handleRequest(ActionTypes.SIZESPORTSINDEXLIST, requests)\n            case 'sportsTextLive': // 文字直播查询\n                requests = RequestTool.seriesRequest('POST', '/Sports/GetLiveInformation', obj)\n                return this.handleRequest(ActionTypes.SPORTSTEXTLIVE, requests)\n            default:\n                break\n        }\n    }\n\n    /**\n     * 活动服务\n     */\n    static PromotionAPI(type, obj) {\n        let requests;\n        switch (type) {\n            case 'promotionType': // 活动种类\n                requests = RequestTool.seriesRequest('POST', '/Promotion/PromotionTypeList', obj)\n                return this.handleRequest(ActionTypes.PROMOTIONTYPE, requests)\n            case 'promotionList': // 活动列表\n                requests = RequestTool.seriesRequest('POST', '/Promotion/PromotionList', obj)\n                return this.handleRequest(ActionTypes.PROMOTIONLIST, requests)\n            case 'promotionDetail': // 活动详情\n                requests = RequestTool.seriesRequest('POST', '/Promotion/PromotionDetail', obj)\n                return this.handleRequest(ActionTypes.PROMOTIONDETAIL, requests)\n            case 'applyWelfare': // 申请活动\n                requests = RequestTool.seriesRequest('POST', '/Promotion/ApplyForPromotion', obj)\n                return this.promiseRequest(requests)\n            case 'applyWelfareList': // 申请活动列表\n                requests = RequestTool.seriesRequest('POST', '/Promotion/ApplyRecordList', obj)\n                return this.handleRequest(ActionTypes.WELFAREAPPLYLIST, requests)\n        }\n\n    }\n    /**\n     * 资讯服务\n     */\n    static NewsAPI(type, obj) {\n        let requests;\n        switch (type) {\n            case 'newsList':\n                requests = RequestTool.seriesRequest('POST', '/News/GetNewsList', obj)\n                return this.handleRequest(ActionTypes.NEWSLIST, requests)\n            case 'newsDetail':\n                requests = RequestTool.seriesRequest('POST', '/News/GetNewsById', obj)\n                return this.handleRequest(ActionTypes.NEWSDETAIL, requests)\n            case 'NewsCommentList': // 资讯评论列表\n                requests = RequestTool.seriesRequest('POST', '/News/GetCommentInfoList', obj)\n                return this.handleRequest(ActionTypes.NEWSCOMMENTLIST, requests)\n            case 'addNewsComment': // 添加资讯评论\n                requests = RequestTool.seriesRequest('POST', '/News/AddCommentInfo', obj)\n                return this.promiseRequest(requests)\n            case 'updateCommentNum': // 更新评论数\n                requests = RequestTool.seriesRequest('POST', '/News/UpdateNewsCommentNumber', obj)\n                return this.handleRequest(ActionTypes.UPDATENEWSCOMMENT, requests)\n        }\n    }\n\n    /**\n     * 用户收藏关注\n     */\n    static UserInterstedAPI(type, obj) {\n        let requests;\n        switch (type) {\n            case 'sportsFollow': // 体育关注列表\n                requests = RequestTool.seriesRequest('POST', '/UserIntersted/GetAttentionRecordsBySportList', obj)\n                return this.handleRequest(ActionTypes.SPORTSFOLLOW, requests)\n            case 'lotteryFollow': // 彩票关注列表\n                requests = RequestTool.seriesRequest('POST', '/UserIntersted/GetAttentionRecordsByLotteryList', obj)\n                return this.handleRequest(ActionTypes.LOTTERYFOLLOW, requests)\n            case 'newsCollection': // 资讯收藏列表\n                requests = RequestTool.seriesRequest('POST', '/UserIntersted/GetSYSBlackWordList', obj)\n                return this.handleRequest(ActionTypes.NEWSCOLLECTION, requests)\n            case 'sportsCollection': // 体育收藏列表\n                requests = RequestTool.seriesRequest('POST', '/UserIntersted/GetInterestedRecordsSportList', obj)\n                return this.handleRequest(ActionTypes.SPORTSCOLLECTION, requests)\n            case 'addCollection': // 添加收藏\n                requests = RequestTool.seriesRequest('POST', '/UserIntersted/AddInterestedRecords', obj)\n                return this.promiseRequest(requests)\n            case 'addFollow': // 添加关注\n                requests = RequestTool.seriesRequest('POST', '/UserIntersted/AddAttentionRecords', obj)\n                return this.promiseRequest(requests)\n            default:\n                break\n        }\n    }\n\n    /**\n     * 聊天室服务\n     */\n    static ChatRoomAPI(type, obj) {\n        let requests;\n        switch (type) {\n            case 'createChatRoom':\n                requests = RequestTool.seriesRequest('POST', '/ChatRoom/CreateChatroom', obj)\n                return this.promiseRequest(requests)\n            case 'enterChatRoom':\n                requests = RequestTool.seriesRequest('POST', '/ChatRoom/AddMembers', obj)\n                return this.promiseRequest(requests)\n            case 'exitChatRoom':\n                requests = RequestTool.seriesRequest('POST', '/ChatRoom/RemoveMembers', obj)\n                return this.promiseRequest(requests)\n            case 'sendText': // 发送聊天文字信息\n                requests = RequestTool.seriesRequest('POST', '/ChatRoom/SendTxtMessage', obj)\n                return this.handleRequest(ActionTypes.NEWSLIST, requests)\n            case 'chatroomDetail': // 聊天室详情\n                requests = RequestTool.seriesRequest('GET', '/ChatRoom/GetChatroomInfoById', obj)\n                return this.promiseRequest(requests)\n            case 'getSign': // 获取签名\n                requests = RequestTool.seriesRequest('POST', '/ChatRoom/GetSign', obj)\n                return this.promiseRequest(requests)\n        }\n    }\n\n\n}","/*\n * @Author: your name\n * @Date: 2020-10-05 16:17:52\n * @LastEditTime: 2020-10-25 01:00:23\n * @LastEditors: Please set LastEditors\n * @Description: 账号列表\n * @FilePath: \\project\\src\\containers\\user.js\n */\nimport React from 'react'\nimport { Table, Drawer, Button, Form, Input, Select, Col, Row, message, Modal, InputNumber } from 'antd'\nimport APIService from '../service/APIService'\nconst { Option } = Select\nconst rankLevelSingleOpts = [\n    { key: 0, value: '黑铁' },\n    { key: 1, value: '青铜' },\n    { key: 2, value: '白银' },\n    { key: 3, value: '黄金' },\n    { key: 4, value: '铂金' },\n    { key: 5, value: '钻石' },\n    { key: 6, value: '大师' },\n    { key: 7, value: '王者' },\n    { key: -1, value: '无段位' },\n\n]\nconst rankLevelFlexibleOpts = {}\n\nconst rankLevelNumOpts = [\n    { key: 'Ⅰ', value: 'Ⅰ' },\n    { key: 'Ⅱ', value: 'Ⅱ' },\n    { key: 'Ⅲ', value: 'Ⅲ' },\n    { key: 'Ⅳ', value: 'Ⅳ' },\n    { key: 'Ⅴ', value: 'Ⅴ' },\n]\n\nconst vipsLevelOpts = [\n    { key: 0, value: '普通' },\n    { key: 1, value: 'VIP' },\n    { key: 2, value: 'SVIP' },\n]\n\nconst statusOpts = [\n    { key: 0, value: '正常' },\n    { key: 1, value: '使用中' },\n    { key: 2, value: '其他' },\n\n\n]\n\nconst regionList = [\n    '艾欧尼亚',\n    '祖安',\n    '诺克萨斯',\n    '班德尔城',\n    '皮尔特沃夫',\n    '战争学院',\n    '巨神峰',\n    '雷瑟守备',\n    '裁决之地',\n    '黑色玫瑰',\n    '暗影岛',\n    '钢铁烈阳',\n    '水晶之痕',\n    '均衡教派',\n    '影流',\n    '守望之海',\n    '征服之海',\n    '卡拉曼达',\n    '皮城警备',\n    '比尔吉沃特',\n    '德玛西亚',\n    '弗雷尔卓德',\n    '无畏先锋',\n    '恕瑞玛',\n    '扭曲丛林',\n    '巨龙之巢',\n    '教育网专区',\n    '男爵领域'\n]\nclass AccountList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dataSource: [\n                {}\n            ],\n            basicDataSource: [{}],\n            initData: {\n                rankLevelName: '0',\n                rankLevelFlexibleNum: '0'\n            },\n            visible: false,\n            visible: false,\n            balanceNum: null,\n            choosenAccount: null,\n            queryValue: '',\n            queryServer: null\n\n        }\n    }\n\n    componentDidMount() {\n        this.fecthAccounts()\n    }\n\n    fecthAccounts() {\n        APIService.WeChatRobotAPI('fetchAccounts', { wxid: 'root' }).then(res => {\n            console.log('res======', res)\n            this.setState({\n                basicDataSource: res.data,\n                dataSource: res.data\n            })\n        })\n    }\n\n    handleEditAccount(record) {\n        // 单双排具体值\n        let rankLevelNum = record.rankLevelSingle ? record.rankLevelSingle.substring(2, record.rankLevelSingle.length) : null\n        // 灵活排具体值\n        let rankFlexLevelNum = record.rankLevelFlexible ? record.rankLevelFlexible.substring(2, record.rankLevelFlexible.length) : null\n        this.setState({\n            initData: {\n                ...record,\n                rankLevelNum: rankLevelNum,\n                rankLevelName: record.rankIndexSingle ? record.rankIndexSingle : -1,\n                rankLevelFlexibleName: record.rankIndexFlexible ? record.rankIndexFlexible : -1,\n                rankLevelFlexibleNum: rankFlexLevelNum\n            },\n            visible: true,\n            saveType: 'edit'\n        })\n    }\n    onFinish(values) {\n        let params = {\n            ...values,\n            rankIndexSingle: values.rankLevelName ? values.rankLevelName : 0,\n            rankLevelSingle: rankLevelSingleOpts.find(item => item.key === values.rankLevelName).value + values.rankLevelNum,\n            rankIndexFlexible: values.rankLevelFlexibleName ? values.rankLevelFlexibleName : 0,\n            rankLevelFlexible: rankLevelSingleOpts.find(item => item.key === values.rankLevelFlexibleName).value + values.rankLevelFlexibleNum\n        }\n        if (this.state.saveType === 'edit') {\n            params.id = this.state.initData.id\n        }\n        delete values.rankLevelName\n        delete values.rankLevelNum\n        delete values.rankLevelFlexibleName\n        delete values.rankLevelFlexibleNum\n\n        console.log('params=====', params)\n        APIService.WeChatRobotAPI('saveAccounts', params).then(res => {\n            if (res.code === 200) {\n                message.success('保存成功！')\n                this.fecthAccounts()\n                this.setState({\n                    visible: false\n                })\n            }\n        })\n    }\n\n\n    /**\n    * 下号\n    */\n    handleLoginOut(record) {\n        this.setState({\n            calcelVisible: true,\n            choosenAccount: record\n        })\n    }\n\n    getBalanceNum(value) {\n        this.setState({\n            balanceNum: value\n        })\n    }\n\n\n\n    handleOk() {\n        let { balanceNum, choosenAccount } = this.state\n        if (balanceNum) {\n            let params = {\n                accountIds: [choosenAccount.id],\n                costTime: balanceNum\n            }\n            APIService.WeChatRobotAPI('cancelRent', params).then(res => {\n                if (res.code == 200) {\n                    message.success('下号成功')\n                    this.setState({\n                        choosenAccount: null,\n                        calcelVisible: false,\n                        balanceNum: null\n                    }, () => {\n                        this.fecthAccounts()\n                    })\n                } else {\n                    message.warning(res.message)\n                }\n\n            })\n        }\n\n    }\n\n    handleCancel() {\n        this.setState({\n            calcelVisible: false\n        })\n    }\n\n    handleSetRentGroup(record) {\n        let params = {\n            userId: record.id,\n            status: !record.isRentGroup ? 1 : 0\n        }\n        APIService.WeChatRobotAPI('rentGroupChange', params).then(res => {\n            console.log(res)\n\n\n            this.fecthAccounts()\n        })\n    }\n\n    // 点击新增\n    handleAdd() {\n        this.setState({\n            initData: {\n                rankLevelNum: null,\n                rankLevelName: -1,\n                rankLevelFlexibleName: -1,\n                rankLevelFlexibleNum: null\n            },\n            visible: true,\n            saveType: 'add'\n        })\n    }\n\n    // 获取输入框中的值\n    handleGetFilterValue(e) {\n        this.setState({\n            queryValue: e.target.value\n        })\n    }\n    // 前端查询过滤\n    handleFilter() {\n        let { queryValue, queryServer, basicDataSource } = this.state\n        let list = []\n        if (queryValue != '') {\n            list = basicDataSource.filter((item => item.id == queryValue))\n        } else {\n            list = basicDataSource\n        }\n        if (queryServer) {\n            console.log(queryServer)\n            list = list.filter(item => item.server == queryServer)\n        }\n        this.setState({\n            dataSource: list\n        })\n    }\n\n    handleAllCancel() {\n        Modal.confirm({\n            title: '提示！',\n            content: '是否确认进行全部下号操作？',\n            okText: '确认',\n            cancelText: '取消',\n            onOk() {\n                let that = this\n                let params = {\n                    isAllCancel: true\n                }\n                APIService.WeChatRobotAPI('cancelRent', params).then(res => {\n                    if (res.code == 200) {\n                        message.success('下号成功')\n                        that.setState({\n                            choosenAccount: null,\n                            calcelVisible: false,\n                            balanceNum: null\n                        }, () => {\n                            that.fecthAccounts()\n                        })\n                    } else {\n                        message.warning(res.message)\n                    }\n\n                })\n            },\n            onCancel() {\n                console.log('Cancel');\n            },\n\n        })\n\n    }\n\n    /**\n     * 选择大区\n     */\n    handleSelectServer(e) {\n\n        this.setState({\n            queryServer: e\n        })\n    }\n\n    render() {\n        const limitNumber = value => {\n            if (typeof value === 'string') {\n                return !isNaN(Number(value)) ? value.replace(/^(0+)|[^\\d]/g, '') : ''\n            } else if (typeof value === 'number') {\n                return !isNaN(value) ? String(value).replace(/^(0+)|[^\\d]/g, '') : ''\n            } else {\n                return ''\n            }\n        }\n        const { dataSource, initData, visible, saveType, queryServer } = this.state\n        const columns = [\n            { title: '账号', dataIndex: 'username', key: 'username', width: 200 },\n            { title: '密码', dataIndex: 'password', key: 'password', width: 200 },\n            { title: '昵称', dataIndex: 'nickName', key: 'nickName', width: 260 },\n            { title: '货架号', dataIndex: 'id', key: 'id', width: 160 },\n            { title: '大区', dataIndex: 'server', key: 'server', width: 160 },\n            {\n                title: 'VIP限制等级', dataIndex: 'vipLevel', width: 160, key: 'vipLevel', render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                text == 0 ?\n                                    <span style={{ color: '#008000' }}>普通</span>\n                                    :\n                                    text == 1 ?\n                                        <span style={{ color: '#FF8C00' }}>VIP</span>\n                                        :\n                                        <span style={{ color: '#ff0000' }}>SVIP</span>\n\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '状态', dataIndex: 'status', key: 'status', width: 200, render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                text == 0 ?\n                                    <span style={{ color: '#008000' }}>正常</span>\n                                    :\n                                    text == 1 ?\n                                        <span style={{ color: '#FF8C00' }}>使用中</span>\n                                        :\n                                        <span style={{ color: '#ff0000' }}>不可用</span>\n\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            { title: '单双排段位', dataIndex: 'rankLevelSingle', key: 'rankLevelSingle', width: 160, },\n            { title: '灵活排位段位', dataIndex: 'rankLevelFlexible', key: 'rankLevelFlexible', width: 160, },\n            { title: '英雄数', dataIndex: 'heroNum', key: 'heroNum', width: 100 },\n            { title: '等级', dataIndex: 'level', key: 'level', width: 100 },\n            { title: '租号单价（元/时）', dataIndex: 'price', key: 'price', width: 160, },\n            { title: '英雄', dataIndex: 'heroList', key: 'heroList', ellipsis: true, width: 300 },\n            {\n                title: '操作', dataIndex: 'operation', width: 160, fixed: 'right', render: (text, record, index) => {\n                    return (\n                        <div style={{ display: 'flex' }}>\n                            <Button type='link' onClick={this.handleEditAccount.bind(this, record)}>编辑</Button>\n                            <Button type='link' onClick={this.handleLoginOut.bind(this, record)}>下号</Button>\n                        </div>\n                    )\n                }\n            }\n\n        ]\n\n\n        return (\n            <div>\n                <Row style={{ marginBottom: 20, display: 'flex' }}>\n                    <Select style={{ marginRight: 10, width: 100 }} allowClear onChange={this.handleSelectServer.bind(this)}>\n                        {\n                            regionList.map((item, index) => {\n                                return (\n                                    <Option value={item} key={item}>{item}</Option>\n                                )\n                            })\n                        }\n                    </Select>\n                    <Input style={{ width: 200, marginRight: 8 }} allowClear placeholder=\"请输入货架号\" onChange={this.handleGetFilterValue.bind(this)}></Input>\n                    <Button style={{ marginRight: 8 }} onClick={this.handleFilter.bind(this)} type=\"success\" >查询</Button>\n                    <Button onClick={this.handleAdd.bind(this)} type=\"primary\">新增</Button>\n                    <Button onClick={this.handleAllCancel.bind(this)} style={{ marginLeft: 20 }} >全部下号</Button>\n                </Row>\n\n                <Table\n                    columns={columns}\n                    dataSource={dataSource}\n                    scroll={{ x: 1800, y: 'auto' }}\n                />\n                <Drawer\n                    visible={visible}\n                    width={600}\n                    title={saveType == 'edit' ? '编辑' : '新建'}\n                    onClose={() => { this.setState({ visible: false }) }}\n\n                >\n                    <Form\n                        labelCol={{ span: 6 }}\n                        wrapperCol={{ span: 14 }}\n                        layout=\"horizontal\"\n                        initialValues={initData}\n                        onFinish={this.onFinish.bind(this)}\n                    >\n                        <Form.Item label=\"账号状态\" name=\"status\" required={true}>\n                            <Select>\n                                {\n                                    statusOpts.map((item, index) => {\n                                        return (\n                                            <Select.Option value={item.key} key={item.key}>{item.value}</Select.Option>\n                                        )\n                                    })\n                                }\n                            </Select>\n                        </Form.Item>\n\n                        <Form.Item label=\"账号\" name=\"username\" required={true}>\n                            <Input placeholder=\"请输入账号\" />\n                        </Form.Item>\n                        <Form.Item label=\"密码\" name=\"password\" required={true}>\n                            <Input.Password placeholder=\"请输入密码\" />\n                        </Form.Item>\n                        <Form.Item label=\"昵称\" name=\"nickName\">\n                            <Input placeholder=\"请输入昵称\" />\n                        </Form.Item>\n                        <Form.Item label=\"所在大区\" name=\"server\" required={true}>\n                            <Select>\n                                {\n                                    regionList.map((item, index) => {\n                                        return (\n                                            <Select.Option value={item} key={item}>{item}</Select.Option>\n                                        )\n                                    })\n                                }\n                            </Select>\n                        </Form.Item>\n                        <Form.Item label=\"VIP限制等级\" name=\"vipLevel\">\n                            <Select>\n                                {\n                                    vipsLevelOpts.map((item, index) => {\n                                        return (\n                                            <Select.Option value={item.key} key={item.key}>{item.value}</Select.Option>\n                                        )\n                                    })\n                                }\n                            </Select>\n                        </Form.Item>\n                        <Form.Item label=\"单双排段位\">\n                            <Form.Item name=\"rankLevelName\">\n\n                                <Select placeholder=\"请选择单双排段位\">\n                                    {\n                                        rankLevelSingleOpts.map((item, index) => {\n                                            return (\n                                                <Select.Option key={item.key} value={item.key}>{item.value}</Select.Option>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            </Form.Item>\n\n                            <Form.Item name=\"rankLevelNum\">\n                                <Select>\n                                    {\n                                        rankLevelNumOpts.map((item, index) => {\n                                            return (\n                                                <Select.Option key={item.key} value={item.key}>{item.value}</Select.Option>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            </Form.Item>\n\n                        </Form.Item>\n                        <Form.Item label=\"灵活排位段位\">\n                            <Form.Item name=\"rankLevelFlexibleName\">\n                                <Select placeholder=\"请选择单双排段位\">\n                                    {\n                                        rankLevelSingleOpts.map((item, index) => {\n                                            return (\n                                                <Select.Option key={item.key} value={item.key}>{item.value}</Select.Option>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            </Form.Item>\n                            <Form.Item name=\"rankLevelFlexibleNum\">\n                                <Select>\n\n                                    {\n                                        rankLevelNumOpts.map((item, index) => {\n                                            return (\n                                                <Select.Option key={item.key} value={item.key}>{item.value}</Select.Option>\n                                            )\n                                        })\n                                    }\n\n                                </Select>\n                            </Form.Item>\n                        </Form.Item>\n\n                        <Form.Item label=\"英雄数量\" name=\"heroNum\">\n                            <Input placeholder=\"请输入昵称\" />\n                        </Form.Item>\n                        <Form.Item label=\"等级\" name=\"level\">\n                            <Input placeholder=\"请输入昵称\" />\n                        </Form.Item>\n                        <Form.Item label=\"租号单价（元/时）\" name=\"price\">\n                            <Input placeholder=\"请输入租号单价\" />\n                        </Form.Item>\n                        <Form.Item label=\"英雄\" name=\"heroList\">\n                            <Input.TextArea placeholder=\"请输入英雄\" />\n                        </Form.Item>\n                        <Form.Item >\n                            <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n                        </Form.Item>\n                    </Form>\n                </Drawer>\n\n                <Modal\n                    title=\"下号\"\n                    visible={this.state.calcelVisible}\n                    onOk={this.handleOk.bind(this)}\n                    onCancel={this.handleCancel.bind(this)}\n                    okText=\"确认\"\n                    cancelText=\"取消\"\n                >\n                    <div style={{ display: 'flex', flexDirection: 'row' }}>\n                        <div style={{ flex: 2 }}>时长（分钟）</div>\n                        <InputNumber step={1} style={{ flex: 3 }} onChange={this.getBalanceNum.bind(this)} parser={limitNumber}></InputNumber>\n                    </div>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default AccountList","/*\n * @Author: your name\n * @Date: 2020-10-05 16:17:52\n * @LastEditTime: 2020-10-15 00:48:13\n * @LastEditors: Please set LastEditors\n * @Description: 用户列表\n * @FilePath: \\project\\src\\containers\\user.js\n */\nimport React from 'react'\nimport { Table, Pagination, Form, Row, Col, Input, Select, Button, Modal, Switch, message } from 'antd'\nimport APIService from '../service/APIService'\nconst { Option } = Select;\nclass UserList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dataSource: [{}],\n            curPage: 1,\n            pageSize: 10,\n            total: 0,\n            visible: false,\n            balanceNum: null,\n            choosenUser: null,\n            choosenRentMode: null\n\n        }\n    }\n    componentDidMount() {\n        this.fetchUsers()\n    }\n\n    fetchUsers(page, query) {\n        this.setState({\n            curPage: page ? page : 0\n        }, () => {\n            let { curPage, pageSize } = this.state\n            let params = {\n                page: page ? page - 1 : curPage,\n                size: pageSize\n            }\n            if (query) {\n                params = {\n                    page: params.page ? params.page : 0,\n                    size: params.size ? params.size : 10,\n                    mark: query.mark ? query.mark : '',\n                    name: query.name ? query.name : '',\n                    sex: query.sex ? query.sex : null,\n                    status: query.status ? query.status : null,\n\n\n                }\n            }\n            // this.props.form.getFieldsValue()\n            APIService.WeChatRobotAPI('fetchUsers', params).then(res => {\n                this.setState({\n                    dataSource: res.data.content,\n                    total: res.data.totalElements\n                })\n            })\n        })\n\n    }\n\n    handleChangePage(page) {\n        this.fetchUsers(page)\n    }\n\n    handleQuery(values) {\n        this.fetchUsers(0, values)\n    }\n\n    /**\n     * 充值\n     */\n    handleRecharge(record) {\n        this.setState({\n            visible: true,\n            choosenUser: record\n        })\n    }\n\n    getBalanceNum(e) {\n        this.setState({\n            balanceNum: e.target.value\n        })\n    }\n    handleOk() {\n        let { balanceNum, choosenUser } = this.state\n        if (balanceNum) {\n            let params = {\n                type: 1,\n                balance: balanceNum,\n                userId: choosenUser.id\n            }\n            APIService.WeChatRobotAPI('recharge', params).then(res => {\n                if (res.code == 200) {\n                    message.success('充值成功')\n                    this.setState({\n                        choosenUser: null,\n                        visible: false,\n                        balanceNum: null\n                    }, () => {\n                        this.fetchUsers()\n                    })\n                } else {\n                    message.warning(res.message)\n                }\n\n            })\n        }\n\n    }\n\n    handleCancel() {\n        this.setState({\n            visible: false\n        })\n    }\n\n    handleSetRentGroup(record) {\n        let params = {\n            userId: record.id,\n            status: !record.isRentGroup ? 1 : 0\n        }\n        APIService.WeChatRobotAPI('rentGroupChange', params).then(res => {\n            console.log(res)\n\n\n            this.fetchUsers()\n        })\n    }\n\n    // 点击编辑按钮\n    handleEdit(record) {\n        this.setState({\n            choosenUser: record,\n            editVisible: true\n        })\n    }\n\n    handleEditOk() {\n        let params = {\n            id: this.state.choosenUser.id,\n            rentMode: this.state.choosenRentMode\n        }\n        APIService.WeChatRobotAPI('changeRentMode', params).then(res => {\n            if (res.code == 200) {\n                message.success('修改成功！')\n                this.fetchUsers()\n                this.setState({\n                    editVisible: false\n\n                })\n            }\n        })\n    }\n\n    handleEditCancel() {\n        this.setState({\n            choosenUser: null,\n            editVisible: false\n        })\n    }\n\n    getRentType(value) {\n        this.setState({\n            choosenRentMode: value\n        })\n    }\n    render() {\n        const { dataSource, curPage, pageSize, total } = this.state\n\n        const rentType = [\n            { value: 1, name: '先打后付款' },\n            { value: 2, name: '先付款后打' },\n\n        ]\n        const columns = [\n\n            {\n                title: '昵称',\n                dataIndex: 'nickName',\n                key: 'nickName',\n                width: 260,\n                ellipsis: true,\n                render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                record.wxid && record.wxid.indexOf('@chatroom') > -1 ?\n                                    <span>{text}(群)</span>\n                                    :\n                                    <span>{text}</span>\n                            }\n                        </div>\n                    )\n\n                }\n            },\n            {\n                title: '备注名',\n                dataIndex: 'remarkName',\n                key: 'remarkName',\n            },\n            {\n                title: '是否租号群',\n                dataIndex: 'isRentGroup',\n                key: 'isRentGroup',\n                render: (text, record, index) => {\n                    return (\n                        <div>\n                            <Switch checkedChildren=\"启用中\" unCheckedChildren=\"禁用中\" checked={record.isRentGroup} onChange={this.handleSetRentGroup.bind(this, record)} />\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '用户类型',\n                dataIndex: 'type',\n                key: 'type',\n                render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                text == 0 ?\n                                    <span style={{ color: '#1E90FF' }}>普通用户</span>\n                                    :\n                                    text == 1 ?\n                                        <span style={{ color: '#FFD700' }}>VIP</span>\n                                        :\n                                        text == 2 ?\n                                            <span style={{ color: '#FF8C00' }}>SVIP</span>\n                                            :\n                                            <span style={{ color: '#ccc' }}>未知</span>\n\n\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '用户状态',\n                dataIndex: 'status',\n                key: 'status',\n                render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                text == 0 ?\n                                    <span style={{ color: '#008000' }}>正常</span>\n                                    :\n                                    text == 1 ?\n                                        <span style={{ color: '#ff0000' }}>异常（不可租号）</span>\n                                        :\n                                        <span style={{ color: '#ccc' }}>未知</span>\n\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '余额',\n                dataIndex: 'balance',\n                key: 'balance',\n            },\n            {\n                title: '性别',\n                dataIndex: 'sex',\n                key: 'sex',\n                render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                text == 1 ?\n                                    <span >男</span>\n                                    :\n                                    <span >女</span>\n\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '租号模式',\n                dataIndex: 'rentMode',\n                key: 'rentMode',\n                render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                text == 1 ?\n                                    <span>先打后付款</span>\n                                    :\n                                    text == 2 ?\n                                        <span>先付款后打</span>\n                                        :\n                                        <span style={{ color: '#ccc' }}>未知</span>\n\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '操作',\n                dataIndex: 'operation',\n                key: 'operation',\n                render: (text, record, index) => {\n                    return (\n                        <div>\n                            <Button type=\"link\" onClick={this.handleRecharge.bind(this, record)}>充值</Button>\n                            <Button type=\"link\" onClick={this.handleEdit.bind(this, record)}>编辑</Button>\n                        </div>\n                    )\n                }\n            },\n\n        ]\n        const formItemLayout = {\n            labelCol: {\n                span: 6,\n            },\n            wrapperCol: {\n                span: 14,\n            },\n        };\n        return (\n            <div>\n                <div>\n                    <Form {...formItemLayout} onFinish={this.handleQuery.bind(this)}>\n                        <Row style={{ backgroundColor: '#fff', padding: '16px 0px 0px 0px', marginBottom: 16 }}>\n                            <Col span={5}>\n                                <Form.Item label=\"昵称\" name=\"name\">\n\n                                    <Input placeholder=\"请输入昵称\" allowClear={true} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={5}>\n                                <Form.Item label=\"备注名\" name=\"mark\">\n\n                                    <Input placeholder=\"请输入备注名\" allowClear={true} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={5}>\n                                <Form.Item label=\"状态\" name=\"status\">\n\n                                    <Select allowClear={true}>\n                                        <Option value={0}>正常</Option>\n                                        <Option value={1}>异常（不可租号）</Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                            <Col span={5}>\n                                <Form.Item label=\"性别\" name=\"sex\">\n                                    <Select allowClear={true}>\n                                        <Option value=\"1\">男</Option>\n                                        <Option value=\"2\">女</Option>\n                                    </Select>\n\n                                </Form.Item>\n                            </Col>\n                            <Col span={2}>\n                                <Form.Item >\n                                    <Button type=\"primary\" htmlType=\"submit\">查询</Button>\n                                </Form.Item>\n                            </Col>\n\n                        </Row>\n\n\n                    </Form>\n                </div>\n                <Table\n                    style={{ marginBottom: 20 }}\n                    columns={columns}\n                    dataSource={dataSource}\n                    pagination={false}\n                />\n                <Pagination defaultCurrent={curPage} total={total} pageSize={pageSize} onChange={this.handleChangePage.bind(this)} showSizeChanger={false} />\n\n                <Modal\n                    title=\"充值\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk.bind(this)}\n                    onCancel={this.handleCancel.bind(this)}\n                    okText=\"确认\"\n                    cancelText=\"取消\"\n                >\n                    <div style={{ display: 'flex', flexDirection: 'row' }}>\n                        <div style={{ flex: 2 }}>充值金额</div>\n                        <Input style={{ flex: 3 }} onChange={this.getBalanceNum.bind(this)}></Input>\n                    </div>\n                </Modal>\n                <Modal\n                    title=\"租号模式\"\n                    visible={this.state.editVisible}\n                    onOk={this.handleEditOk.bind(this)}\n                    onCancel={this.handleEditCancel.bind(this)}\n                    okText=\"确认\"\n                    cancelText=\"取消\"\n                >\n                    <div style={{ display: 'flex', flexDirection: 'row' }}>\n                        <div style={{ flex: 2 }}>租号模式</div>\n                        <Select style={{ flex: 3 }} onChange={this.getRentType.bind(this)}>\n                            {\n                                rentType.map((item, index) => {\n                                    return (\n                                        <Option value={item.value}>\n                                            {item.name}\n                                        </Option>\n                                    )\n                                })\n                            }\n                        </Select>\n                    </div>\n                </Modal>\n            </div>\n        )\n    }\n}\nexport default UserList","/*\n * @Author: your name\n * @Date: 2020-06-14 12:29:32\n * @LastEditTime: 2020-10-14 23:18:17\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\pc\\src\\utils\\utils.js\n */\n\n// 年月日转换\nexport function formdateTime(dateValue) {\n    let dateNum = new Date(dateValue)\n\n    let year = dateNum.getFullYear()\n    let month = dateNum.getMonth() > 9 ? dateNum.getMonth() : '0' + dateNum.getMonth()\n    let day = dateNum.getDay() > 9 ? dateNum.getDay() : '0' + dateNum.getDay()\n    let hours = dateNum.getHours() > 9 ? dateNum.getHours() : '0' + dateNum.getHours()\n    let minus = dateNum.getMinutes() > 9 ? dateNum.getMinutes() : '0' + dateNum.getMinutes()\n    let secnds = dateNum.getSeconds() > 9 ? dateNum.getSeconds() : '0' + dateNum.getSeconds()\n    // let dateFormDate = {\n    //     year: year,\n    //     month: month,\n    //     day: day,\n    //     hours: hours,\n    //     minus: minus,\n    //     secnds: secnds\n    // }\n    let dateFormDate = year + '-' + month + '-' + day + '  ' + hours + ':' + minus + ':' + secnds\n    return dateFormDate\n}\n\nexport function reamianTime(timeValue) {\n    let curTime = new Date()\n}\n\n\n// 随机字符串\nexport function randomString(randomLen, min, max) {\n    var str = \"\",\n        range = min,\n        arr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n            'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\n            'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\n            'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F',\n            'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',\n            'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n    // 随机产生\n    if (randomLen) {\n        range = Math.round(Math.random() * (max - min)) + min;\n    }\n    for (var i = 0; i < range; i++) {\n        let pos = Math.round(Math.random() * (arr.length - 1));\n        str += arr[pos];\n    }\n    return str;\n}\n\nlet timeObj = {\n    day: null,\n    hour: null,\n    min: null,\n    sec: null\n}\n// 倒计时\nexport function remainTime(start, end) {\n    var count = 0;//计时器开始时，给一个全局变量用于减少时间差（以秒为单位，每次增加1）\n    count += 1;//该方法执行几次，count相应++\n    var date1 = new Date(start);\n    var date2 = new Date(end);\n    var s1 = date1.getTime();\n    var s2 = date2.getTime();//毫秒为单位\n    var total = (s2 - s1) / 1000 - count;//每执行一次，减少时间差-1\n    var day = parseInt(total / (24 * 60 * 60)); //计算整数天数\n    var afterDay = total - day * 24 * 60 * 60; //取得算出天数后剩余的秒数\n    var hour = parseInt(afterDay / (60 * 60)); //计算整数小时数\n    var afterHour = total - day * 24 * 60 * 60 - hour * 60 * 60; //取得算出小时数后剩余的秒数\n    var min = parseInt(afterHour / 60); //计算整数分\n    var afterMin = total - day * 24 * 60 * 60 - hour * 60 * 60 - min * 60;\n\n    return timeObj = {\n        day: day > 0 ? parseInt(day) : 0,\n        hour: hour > 0 ? parseInt(hour) : 0,\n        min: min > 0 ? parseInt(min) : 0,\n        sec: afterMin > 0 ? parseInt(afterMin) : 0\n    }\n\n}","/*\n * @Author: your name\n * @Date: 2020-10-05 16:17:52\n * @LastEditTime: 2020-10-15 00:40:03\n * @LastEditors: Please set LastEditors\n * @Description: 订单列表\n * @FilePath: \\project\\src\\containers\\user.js\n */\nimport React from 'react'\nimport {Table, Pagination} from 'antd'\nimport APIService from '../service/APIService'\nimport {formdateTime} from '../utils/utils'\n\nclass OrderList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dataSource: [],\n            curPage: 0,\n            pageSize: 10, \n            total: 0\n        }\n    }\n\n    componentDidMount(){\n        this.fetchOrders()\n    }\n\n    fetchOrders(page) {\n        this.setState({\n            curPage: page ? page : 0\n        }, () => {\n            let {curPage, pageSize} = this.state\n            let params = {\n                page: page ? page - 1  : curPage,\n                size: pageSize\n            }\n            APIService.WeChatRobotAPI('fetchOrders', params).then(res => {\n                this.setState({\n                    dataSource: res.data.content,\n                    total: res.data.totalElements\n\n                })\n            })  \n        })\n        \n    }\n\n    \n    handleChangePage(page) {\n        this.fetchOrders(page)\n    }\n\n    render () {\n        const {dataSource, curPage, pageSize, total} = this.state\n\n        const columns = [\n            {\n                title: '订单号',\n                dataIndex: 'accountId',\n                key: 'accountId',\n            },\n           \n            {\n                title: '状态',\n                dataIndex: 'status',\n                key: 'status',\n                render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                text == 0 ? \n                                    <span style={{color: '#008000'}}>已结束</span>\n                                    :\n                                    text == 1 ?\n                                    <span style={{color: '#FF8C00'}}>进行中</span>\n                                    :\n                                    text == 2 ?\n                                    <span style={{color: '#1E90FF'}}>已完成</span>\n                                    :\n                                    <span style={{color: '#ccc'}}>其他</span>\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '消费金额(元)',\n                dataIndex: 'amount',\n                key: 'amount',\n            },\n            {\n                title: '历时(分钟)',\n                dataIndex: 'costTime',\n                key: 'costTime',\n            },\n            {\n                title: '支付状态',\n                dataIndex: 'payStatus',\n                key: 'payStatus',\n                render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                text == 0 ? \n                                    <span style={{color: '#008000'}}>已支付</span>\n                                    :\n                                    text == 1 ?\n                                    <span style={{color: '#FF8C00'}}>待支付</span>\n                                    :\n                                    <span style={{color: '#ccc'}}>未知</span>\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '开始时间',\n                dataIndex: 'createTime',\n                key: 'createTime',\n                render: (text, record, index) => {\n                    let time = formdateTime(text)\n                    return (\n                        <div>\n                            {time}\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '结束时间',\n                dataIndex: 'endTime',\n                key: 'endTime',\n                render: (text, record, index) => {\n                    let time = formdateTime(text)\n                    return (\n                        <div>\n                            {time}\n                        </div>\n                    )\n                }\n            },\n            \n        ]\n\n        return (\n            <div>\n                <Table \n                    style={{marginBottom: 20}}\n                    columns={columns}\n                    dataSource={dataSource}\n                    pagination={false}\n                />\n                <Pagination defaultCurrent={curPage} total={total} pageSize={pageSize} onChange={this.handleChangePage.bind(this)}  showSizeChanger={false}/>\n\n            </div>\n        )\n    }\n}\n\nexport default OrderList","/*\n * @Author: your name\n * @Date: 2020-10-05 16:17:52\n * @LastEditTime: 2020-10-25 01:00:23\n * @LastEditors: Please set LastEditors\n * @Description: 账号列表\n * @FilePath: \\project\\src\\containers\\user.js\n */\nimport React from 'react'\nimport { Table, Drawer, Button, Form, Input, Select, Col, Row, message, Modal, InputNumber } from 'antd'\nimport APIService from '../service/APIService'\nconst rankLevelSingleOpts = [\n    { key: 0, value: '黑铁' },\n    { key: 1, value: '青铜' },\n    { key: 2, value: '白银' },\n    { key: 3, value: '黄金' },\n    { key: 4, value: '铂金' },\n    { key: 5, value: '钻石' },\n    { key: 6, value: '大师' },\n    { key: 7, value: '王者' },\n    { key: -1, value: '无段位' },\n\n]\nconst rankLevelFlexibleOpts = {}\n\nconst rankLevelNumOpts = [\n    { key: 'Ⅰ', value: 'Ⅰ' },\n    { key: 'Ⅱ', value: 'Ⅱ' },\n    { key: 'Ⅲ', value: 'Ⅲ' },\n    { key: 'Ⅳ', value: 'Ⅳ' },\n    { key: 'Ⅴ', value: 'Ⅴ' },\n]\n\nconst vipsLevelOpts = [\n    { key: 0, value: '普通' },\n    { key: 1, value: 'VIP' },\n    { key: 2, value: 'SVIP' },\n]\n\nconst statusOpts = [\n    { key: 0, value: '正常' },\n    { key: 1, value: '使用中' },\n    { key: 2, value: '其他' },\n\n\n]\nclass ExceptionAccountList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dataSource: [\n                {}\n            ],\n            initData: {\n                rankLevelName: '0',\n                rankLevelFlexibleNum: '0'\n            },\n            visible: false,\n            visible: false,\n            balanceNum: null,\n            choosenAccount: null\n\n        }\n    }\n\n    componentDidMount() {\n        this.fecthAccounts()\n    }\n\n    fecthAccounts() {\n        APIService.WeChatRobotAPI('fetchAccountsRent', { wxid: 'root' }).then(res => {\n            console.log('res======', res)\n            this.setState({\n                dataSource: res.data\n            })\n        })\n    }\n\n    handleEditAccount(record) {\n        // 单双排具体值\n        let rankLevelNum = record.rankLevelSingle ? record.rankLevelSingle.substring(2, record.rankLevelSingle.length) : null\n        // 灵活排具体值\n        let rankFlexLevelNum = record.rankLevelFlexible ? record.rankLevelFlexible.substring(2, record.rankLevelFlexible.length) : null\n        this.setState({\n            initData: {\n                ...record,\n                rankLevelNum: rankLevelNum,\n                rankLevelName: record.rankIndexSingle ? record.rankIndexSingle : -1,\n                rankLevelFlexibleName: record.rankIndexFlexible ? record.rankIndexFlexible : -1,\n                rankLevelFlexibleNum: rankFlexLevelNum\n            },\n            visible: true\n        })\n    }\n    onFinish(values) {\n        let params = {\n            ...values,\n            rankIndexSingle: values.rankLevelName ? values.rankLevelName : 0,\n            rankLevelSingle: rankLevelSingleOpts.find(item => item.key === values.rankLevelName).value + values.rankLevelNum,\n            rankIndexFlexible: values.rankLevelFlexibleName ? values.rankLevelFlexibleName : 0,\n            rankLevelFlexible: rankLevelSingleOpts.find(item => item.key === values.rankLevelFlexibleName).value + values.rankLevelFlexibleNum\n        }\n        if (this.state.initData) {\n            params.id = this.state.initData.id\n        }\n        delete values.rankLevelName\n        delete values.rankLevelNum\n        delete values.rankLevelFlexibleName\n        delete values.rankLevelFlexibleNum\n        APIService.WeChatRobotAPI('saveAccounts', params).then(res => {\n            if (res.code === 200) {\n                message.success('保存成功！')\n                this.setState({\n                    visible: false\n                })\n            }\n        })\n    }\n\n\n    /**\n    * 下号\n    */\n    handleLoginOut(record) {\n        this.setState({\n            calcelVisible: true,\n            choosenAccount: record\n        })\n    }\n\n    getBalanceNum(value) {\n        this.setState({\n            balanceNum: value\n        })\n    }\n\n\n    handleOk() {\n        let { balanceNum, choosenAccount } = this.state\n        if (balanceNum) {\n            let params = {\n                accountIds: [choosenAccount.id],\n                costTime: balanceNum\n            }\n            APIService.WeChatRobotAPI('cancelRent', params).then(res => {\n                if (res.code == 200) {\n                    message.success('下号成功')\n                    this.setState({\n                        choosenAccount: null,\n                        calcelVisible: false,\n                        balanceNum: null\n                    }, () => {\n                        this.fecthAccounts()\n                    })\n                } else {\n                    message.warning(res.message)\n                }\n\n            })\n        }\n\n    }\n\n    handleCancel() {\n        this.setState({\n            calcelVisible: false\n        })\n    }\n\n    handleSetRentGroup(record) {\n        let params = {\n            userId: record.id,\n            status: !record.isRentGroup ? 1 : 0\n        }\n        APIService.WeChatRobotAPI('rentGroupChange', params).then(res => {\n            console.log(res)\n\n\n            this.fecthAccounts()\n        })\n    }\n\n\n    render() {\n        const { dataSource, initData, visible } = this.state\n        const columns = [\n\n            { title: '租号人', dataIndex: 'wxName', key: 'wxName', },\n            { title: '账号', dataIndex: 'username', key: 'username', },\n            { title: '昵称', dataIndex: 'nickName', key: 'nickName', },\n            {\n                title: 'VIP限制等级', dataIndex: 'vipLevel', key: 'vipLevel', render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                text == 0 ?\n                                    <span style={{ color: '#008000' }}>普通</span>\n                                    :\n                                    text == 1 ?\n                                        <span style={{ color: '#FF8C00' }}>VIP</span>\n                                        :\n                                        <span style={{ color: '#ff0000' }}>SVIP</span>\n\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '状态', dataIndex: 'status', key: 'status', render: (text, record, index) => {\n                    return (\n                        <div>\n                            {\n                                text == 0 ?\n                                    <span style={{ color: '#008000' }}>正常</span>\n                                    :\n                                    text == 1 ?\n                                        <span style={{ color: '#FF8C00' }}>使用中</span>\n                                        :\n                                        <span style={{ color: '#ff0000' }}>不可用</span>\n\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            { title: '单双排段位', dataIndex: 'rankLevelSingle', key: 'rankLevelSingle', },\n            { title: '等级', dataIndex: 'level', key: 'level', },\n            { title: '租号单价（元/时）', dataIndex: 'price', key: 'price', width: 160, },\n            {\n                title: '时长', dataIndex: 'costTime', width: 160, key: 'costTime', ellipsis: true, render: (text, record, index) => {\n                    return (\n                        <span>{parseInt(parseInt(text) / 60)}小时{parseInt(text) % 60}分钟</span>\n                    )\n                }\n            },\n            {\n                title: '操作', dataIndex: 'operation', width: 160, render: (text, record, index) => {\n                    return (\n                        <div style={{ display: 'flex' }}>\n                            <Button type='link' onClick={this.handleLoginOut.bind(this, record)}>下号</Button>\n                        </div>\n                    )\n                }\n            }\n\n        ]\n         const limitNumber = value => {\n            if (typeof value === 'string') {\n            return !isNaN(Number(value)) ? value.replace(/^(0+)|[^\\d]/g, '') : ''\n            } else if (typeof value === 'number') {\n            return !isNaN(value) ? String(value).replace(/^(0+)|[^\\d]/g, '') : ''\n            } else {\n            return ''\n            }\n        }\n\n\n        return (\n            <div>\n                <Table\n                    columns={columns}\n                    dataSource={dataSource}\n                />\n                <Drawer\n                    visible={visible}\n                    width={600}\n                    title={initData ? '编辑' : '新建'}\n                    onClose={() => { this.setState({ visible: false }) }}\n\n                >\n                    <Form\n                        labelCol={{ span: 6 }}\n                        wrapperCol={{ span: 14 }}\n                        layout=\"horizontal\"\n                        initialValues={initData}\n                        onFinish={this.onFinish.bind(this)}\n                    >\n                        <Form.Item label=\"账号状态\" name=\"status\" required={true}>\n                            <Select>\n                                {\n                                    statusOpts.map((item, index) => {\n                                        return (\n                                            <Select.Option value={item.key} key={item.key}>{item.value}</Select.Option>\n                                        )\n                                    })\n                                }\n                            </Select>\n                        </Form.Item>\n\n                        <Form.Item label=\"账号\" name=\"username\" required={true}>\n                            <Input placeholder=\"请输入账号\" />\n                        </Form.Item>\n                        <Form.Item label=\"密码\" name=\"password\" required={true}>\n                            <Input.Password placeholder=\"请输入密码\" />\n                        </Form.Item>\n                        <Form.Item label=\"昵称\" name=\"nickName\">\n                            <Input placeholder=\"请输入昵称\" />\n                        </Form.Item>\n                        <Form.Item label=\"VIP限制等级\" name=\"vipLevel\">\n                            <Select>\n                                {\n                                    vipsLevelOpts.map((item, index) => {\n                                        return (\n                                            <Select.Option value={item.key} key={item.key}>{item.value}</Select.Option>\n                                        )\n                                    })\n                                }\n                            </Select>\n                        </Form.Item>\n                        <Form.Item label=\"单双排段位\">\n                            <Form.Item name=\"rankLevelName\">\n\n                                <Select placeholder=\"请选择单双排段位\">\n                                    {\n                                        rankLevelSingleOpts.map((item, index) => {\n                                            return (\n                                                <Select.Option key={item.key} value={item.key}>{item.value}</Select.Option>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            </Form.Item>\n\n                            <Form.Item name=\"rankLevelNum\">\n                                <Select>\n                                    {\n                                        rankLevelNumOpts.map((item, index) => {\n                                            return (\n                                                <Select.Option key={item.key} value={item.key}>{item.value}</Select.Option>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            </Form.Item>\n\n                        </Form.Item>\n                        <Form.Item label=\"灵活排位段位\">\n                            <Form.Item name=\"rankLevelFlexibleName\">\n                                <Select placeholder=\"请选择单双排段位\">\n                                    {\n                                        rankLevelSingleOpts.map((item, index) => {\n                                            return (\n                                                <Select.Option key={item.key} value={item.key}>{item.value}</Select.Option>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            </Form.Item>\n                            <Form.Item name=\"rankLevelFlexibleNum\">\n                                <Select>\n\n                                    {\n                                        rankLevelNumOpts.map((item, index) => {\n                                            return (\n                                                <Select.Option key={item.key} value={item.key}>{item.value}</Select.Option>\n                                            )\n                                        })\n                                    }\n\n                                </Select>\n                            </Form.Item>\n                        </Form.Item>\n\n                        <Form.Item label=\"英雄数量\" name=\"heroNum\">\n                            <Input placeholder=\"请输入昵称\" />\n                        </Form.Item>\n                        <Form.Item label=\"等级\" name=\"level\">\n                            <Input placeholder=\"请输入昵称\" />\n                        </Form.Item>\n                        <Form.Item label=\"租号单价（元/时）\" name=\"price\">\n                            <Input placeholder=\"请输入租号单价\" />\n                        </Form.Item>\n                        <Form.Item label=\"英雄\" name=\"heroList\">\n                            <Input.TextArea placeholder=\"请输入英雄\" />\n                        </Form.Item>\n                        <Form.Item >\n                            <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n                        </Form.Item>\n                    </Form>\n                </Drawer>\n\n                <Modal\n                    title=\"下号\"\n                    visible={this.state.calcelVisible}\n                    onOk={this.handleOk.bind(this)}\n                    onCancel={this.handleCancel.bind(this)}\n                    okText=\"确认\"\n                    cancelText=\"取消\"\n                >\n                    <div style={{ display: 'flex', flexDirection: 'row' }}>\n                        <div style={{ flex: 2 }}>时长（分钟）</div>\n                        <InputNumber step={1} style={{ flex: 3 }} onChange={this.getBalanceNum.bind(this)} parser={limitNumber}></InputNumber>\n                    </div>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default ExceptionAccountList","/*\r\n * @Author: your name\r\n * @Date: 2020-10-05 16:17:52\r\n * @LastEditTime: 2020-10-25 14:39:01\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 订单列表\r\n * @FilePath: \\project\\src\\containers\\user.js\r\n */\r\nimport React from 'react'\r\nimport { Table, Pagination, Col, Switch, Row, message } from 'antd'\r\nimport APIService from '../service/APIService'\r\nimport { formdateTime } from '../utils/utils'\r\n\r\nclass Setting extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            openStatus: null, // 1-开启， 0关闭\r\n            checkStatus: '1',\r\n            cardStatus: '1'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchMode()\r\n        this.fetchCard()\r\n    }\r\n\r\n    fetchMode() {\r\n        APIService.WeChatRobotAPI('fetchMode', {}).then(res => {\r\n            if (res.code === 200) {\r\n                this.setState({\r\n                    checkStatus: res.data\r\n                })\r\n            }\r\n        })\r\n    }\r\n    fetchCard() {\r\n        APIService.WeChatRobotAPI('cardGet', {}).then(res => {\r\n            if (res.code === 200) {\r\n                this.setState({\r\n                    cardStatus: res.data\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChangeModeStatus(checked) {\r\n        console.log(checked)\r\n        let params = {\r\n            status: checked ? '1' : '0'\r\n        }\r\n        APIService.WeChatRobotAPI('saveMode', params).then(res => {\r\n            if (res.code === 200) {\r\n                message.success('操作成功')\r\n                this.fetchMode()\r\n\r\n            }\r\n        })\r\n    }\r\n     handleChangeCardStatus(checked) {\r\n        let params = {\r\n            status: checked ? '1' : '0'\r\n        }\r\n        APIService.WeChatRobotAPI('cardSave', params).then(res => {\r\n            if (res.code === 200) {\r\n                message.success('操作成功')\r\n                this.fetchCard()\r\n\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { checkStatus, cardStatus } = this.state\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col span={2}>静默模式</Col>\r\n                    <Col span={4}>\r\n                        <Switch checked={checkStatus === '1' ? true : false} checkedChildren=\"开启\" unCheckedChildren=\"关闭\" style={{ float: 'left' }} onChange={this.handleChangeModeStatus.bind(this)} />\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{marginTop: 20}}>\r\n                    <Col span={2}>名片模式</Col>\r\n                    <Col span={4}>\r\n                        <Switch checked={cardStatus === '1' ? true : false} checkedChildren=\"开启\" unCheckedChildren=\"关闭\" style={{ float: 'left' }} onChange={this.handleChangeCardStatus.bind(this)} />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Setting","/*\n * @Author: your name\n * @Date: 2020-10-05 16:17:52\n * @LastEditTime: 2020-10-15 00:40:03\n * @LastEditors: Please set LastEditors\n * @Description: 财务列表\n * @FilePath: \\project\\src\\containers\\user.js\n */\nimport React from 'react'\nimport { Table, Pagination, Row, Col, DatePicker, Button } from 'antd'\nimport APIService from '../service/APIService'\nimport { formdateTime } from '../utils/utils'\nimport moment from 'moment';\n\nconst { RangePicker } = DatePicker;\n\nconst dateFormat = 'YYYY-MM-DD';\nclass FinanceList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dataSource: [],\n            curPage: 0,\n            pageSize: 10,\n            total: 0,\n            start: moment().endOf('day').subtract(2, 'days'),\n            end: moment().endOf('day').subtract(1, 'days')\n        }\n    }\n\n    componentDidMount() {\n        this.fetchList()\n        this.fetchTotal()\n    }\n\n    fetchList(page) {\n        this.setState({\n            curPage: page ? page : 0\n        }, () => {\n            let { curPage, pageSize } = this.state\n            let params = {\n                page: page ? page - 1 : curPage,\n                size: pageSize,\n                start: '2020-09-01',\n                end: '2020-12-01'\n            }\n            APIService.WeChatRobotAPI('financeList', params).then(res => {\n                this.setState({\n                    dataSource: res.data,\n                })\n            })\n        })\n\n    }\n\n\n    fetchTotal() {\n        APIService.WeChatRobotAPI('financeTotal', {}).then(res => {\n            console.log('res====', res)\n            if (res.code == 200) {\n                this.setState({\n                    totalNum: res.data\n                })\n            }\n            // this.setState({\n            //     dataSource: res.data.content,\n            //     total: res.data.totalElements\n            // })\n        })\n    }\n\n    handleChangePage(page) {\n        this.fetchOrders(page)\n    }\n\n    handleGetTimes(e) {\n        console.log(e)\n\n        if (e.length == 2) {\n            // let startStr = moment(parseInt(e[0])).format('YYYY-MM-DD')\n            let startStr = moment(new Date(e[0]._d)).format('YYYY-MM-DD')\n            let endStr = moment(new Date(e[1]._d)).format('YYYY-MM-DD')\n\n            // let _startTime = new Date(e[0])\n            // let _startYear = new Date(e[0]).getFullYear()\n            // let _startMonth = parseInt(_startTime.getMonth() + 1) > 9 ? parseInt(_startTime.getMonth() + 1) : '0' + parseInt(_startTime.getMonth() + 1)\n            // let _startDay = _startTime.getDay() > 9 ? _startTime.getDay() : '0' + _startTime.getDay()\n            // let startStr = _startYear + '-' + _startMonth + '-' + _startDay\n\n            this.setState({\n                start: startStr,\n                end: endStr\n            })\n\n        }\n    }\n\n    handleQuery() {\n\n    }\n    render() {\n        const { dataSource, curPage, pageSize, total, totalNum } = this.state\n\n        const columns = [\n            {\n                title: '货架号',\n                dataIndex: 'id',\n                key: 'id',\n            },\n            {\n                title: '账号名称',\n                dataIndex: 'username',\n                key: 'username',\n            },\n            {\n                title: '游戏名',\n                dataIndex: 'accountId',\n                key: 'accountId',\n                render: (text, record, index) => {\n                    return (\n                        <span>英雄联盟</span>\n                    )\n                }\n            },\n            {\n                title: '大区',\n                dataIndex: 'server',\n                key: 'server',\n            },\n            {\n                title: '角色名',\n                dataIndex: 'nick_name',\n                key: 'nick_name',\n            },\n            {\n                title: '次数',\n                dataIndex: 'count',\n                key: 'count',\n            },\n            {\n                title: '小时数',\n                dataIndex: 'times',\n                key: 'times',\n            },\n            {\n                title: '盈利',\n                dataIndex: 'amount',\n                key: 'amount',\n            },\n\n        ]\n\n        return (\n            <div>\n                <Row style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 20 }}>\n\n                    <Col span={12}>\n                        <RangePicker\n                            style={{ float: 'left', marginRight: 10 }}\n                            defaultValue={[moment().startOf('day').subtract(2, 'days'), moment().endOf('day').subtract(1, 'days')]}\n                            format={dateFormat}\n                            onChange={this.handleGetTimes.bind(this)}\n                        />\n                        <Button type=\"primary\" onClick={this.handleQuery.bind(this)}>查询</Button>\n                    </Col>\n                    <Col span={12} style={{ width: '300px', textAlign: 'right' }}>总盈利：{totalNum}元</Col>\n                </Row>\n                <Table\n                    style={{ marginBottom: 20 }}\n                    columns={columns}\n                    dataSource={dataSource}\n                />\n\n            </div>\n        )\n    }\n}\n\nexport default FinanceList","/*\n * @Author: your name\n * @Date: 2020-10-05 16:17:52\n * @LastEditTime: 2020-10-15 00:40:03\n * @LastEditors: Please set LastEditors\n * @Description: \n * @FilePath: \\project\\src\\containers\\user.js\n */\nimport React from 'react'\nimport { Table, Pagination, Button } from 'antd'\nimport APIService from '../service/APIService'\nimport { formdateTime } from '../utils/utils'\n\nclass DictList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dataSource: [],\n            curPage: 0,\n            pageSize: 10,\n            total: 0\n        }\n    }\n\n    componentDidMount() {\n        console.log('this.props.type=====')\n        this.fetchList(1, this.props.type)\n    }\n\n    fetchList(page, type) {\n        this.setState({\n            curPage: page ? page : 0\n        }, () => {\n            let { curPage, pageSize } = this.state\n            let params = {\n                lab: type,\n                page: page ? page - 1 : curPage,\n                size: pageSize\n            }\n            APIService.WeChatRobotAPI('configList', params).then(res => {\n                this.setState({\n                    dataSource: res.data.content,\n                    total: res.data.totalElements\n                })\n            })\n        })\n\n    }\n\n\n    handleChangePage(page) {\n        this.fetchList(page, this.props.type)\n    }\n\n    handleEdit(record) {\n        this.props.handleEdit(record, this.props.type)\n    }\n    handleDel(record) {\n        this.props.handleDel(record, this.props.type)\n    }\n\n    render() {\n        const { dataSource, curPage, pageSize, total } = this.state\n\n        const columns = [\n            {\n                title: 'ID',\n                dataIndex: 'id',\n                key: 'id',\n            },\n            {\n                title: '名称',\n                dataIndex: 'lab',\n                key: 'lab',\n            },\n            {\n                title: '值',\n                dataIndex: 'value',\n                key: 'value',\n            },\n            {\n                title: '操作', dataIndex: 'operation', width: 160, fixed: 'right', render: (text, record, index) => {\n                    return (\n                        <div style={{ display: 'flex' }}>\n                            <Button type='link' onClick={this.handleEdit.bind(this, record)}>编辑</Button>\n                            <Button type='link' onClick={this.handleDel.bind(this, record)}>删除</Button>\n                        </div>\n                    )\n                }\n            }\n        ]\n\n        return (\n            <div>\n                <Table\n                    style={{ marginBottom: 20 }}\n                    columns={columns}\n                    dataSource={dataSource}\n                    pagination={false}\n                />\n                <Pagination defaultCurrent={curPage} total={total} pageSize={pageSize} onChange={this.handleChangePage.bind(this)} showSizeChanger={false} />\n\n            </div>\n        )\n    }\n}\n\nexport default DictList","import React, { Component } from 'react'\nimport { Layout, Tabs, Button, Drawer, Form, Select, Input, message } from 'antd';\nimport DictList from '../component/dictList'\nimport APIService from '../service/APIService';\n\nconst { TabPane } = Tabs\nconst { Header, Content } = Layout;\nconst labArry = [\n    { key: 1, value: '回收' },\n    { key: 2, value: '全部回收' },\n    { key: 3, value: '查询语句' },\n    { key: 4, value: '黑名单' },\n]\n\nclass DictManage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            curTab: 1,\n            saveType: 'add',\n            visible: false,\n            initData: null\n        }\n    }\n\n    // 新增\n    handleAdd() {\n        this.setState({\n            saveType: 'add',\n            visible: true,\n            initData: null\n        })\n    }\n\n    // 编辑\n    editDict(obj, type) {\n        console.log('obj=====', obj)\n        this.setState({\n            initData: obj,\n            saveType: 'edit',\n            visible: true,\n        })\n    }\n\n    delDict(obj) {\n        let params = {\n            id: obj.id\n        }\n        console.log('params====', params)\n        APIService.WeChatRobotAPI('configDel', params).then(res => {\n            if (res.code == 200) {\n                message.success('删除成功！')\n                this.handleChangeTab(obj.key)\n            }\n        })\n\n    }\n\n    onFinish(values) {\n        const { saveType, initData } = this.state\n        let lebStr = ''\n        if (values.key == 1) {\n            lebStr = '回收'\n        } else if (values.key == 2) {\n            lebStr = '全部回收'\n\n        } else if (values.key == 3) {\n            lebStr = '查询语句'\n\n        } else if (values.key == 4) {\n            lebStr = '黑名单'\n        }\n\n        let params = {\n            ...values,\n            lab: lebStr\n        }\n\n        if (saveType == 'edit') {\n            params.id = initData.id\n        }\n        APIService.WeChatRobotAPI('configSave', params).then(res => {\n            if (res.code == 200) {\n                message.success('保存成功！')\n                this.setState({\n                    visible: false,\n                    initData: null\n                }, () => {\n                    this.handleChangeTab(params.key)\n                })\n            }\n        })\n    }\n\n\n    handleChangeTab(value) {\n        this.setState({\n            curTab: value\n        }, () => {\n            console.log('value====', value)\n            // if (value == 1) {\n            //     this.listOne.fetchList(1, '回收')\n            // } else if (value == 2) {\n            //     this.listTwo.fetchList(1, '全部回收')\n\n            // } else if (value == 3) {\n            //     this.listThree.fetchList(1, '查询语句')\n\n            // } else if (value == 4) {\n            //     this.listFour.fetchList(1, '黑名单')\n            // }\n\n        })\n    }\n    render() {\n        const { visible, saveType, initData, curTab } = this.state\n        console.log('curTab=======', curTab)\n        return (\n            <Layout>\n                <Content className=\"page-content\" style={{ position: 'relative' }}>\n                    <Button type=\"primary\" onClick={this.handleAdd.bind(this)} style={{ position: 'absolute', right: 50, top: 25, zIndex: 99 }}>新增</Button>\n                    <Tabs onChange={this.handleChangeTab.bind(this)} activeKey={curTab.toString()} >\n                        <TabPane tab=\"回收\" key={1}>\n                            <DictList type=\"回收\" handleEdit={this.editDict.bind(this)} handleDel={this.delDict.bind(this)} ref={ref => this.listOne = ref} />\n                        </TabPane>\n                        <TabPane tab=\"全部回收\" key={2}>\n                            <DictList type=\"全部回收\" handleEdit={this.editDict.bind(this)} handleDel={this.delDict.bind(this)} ref={ref => this.listTwo = ref} />\n                        </TabPane>\n                        <TabPane tab=\"查询语句\" key={3}>\n                            <DictList type=\"查询语句\" handleEdit={this.editDict.bind(this)} handleDel={this.delDict.bind(this)} ref={ref => this.listThree = ref} />\n                        </TabPane>\n                        <TabPane tab=\"黑名单\" key={4}>\n                            <DictList type=\"黑名单\" handleEdit={this.editDict.bind(this)} handleDel={this.delDict.bind(this)} ref={ref => this.listFour = ref} />\n                        </TabPane>\n                    </Tabs>\n                </Content>\n                <Drawer\n                    visible={visible}\n                    width={600}\n                    title={saveType == 'edit' ? '编辑' : '新建'}\n                    onClose={() => { this.setState({ visible: false }) }}\n\n                >\n                    <Form\n                        labelCol={{ span: 6 }}\n                        wrapperCol={{ span: 14 }}\n                        layout=\"horizontal\"\n                        initialValues={initData}\n                        onFinish={this.onFinish.bind(this)}\n                    >\n                        <Form.Item label=\"名称\" name=\"key\" required={true}>\n                            <Select>\n                                {\n                                    labArry.map((item, index) => {\n                                        return (\n                                            <Select.Option value={item.key} key={item.key}>{item.value}</Select.Option>\n                                        )\n                                    })\n                                }\n                            </Select>\n                        </Form.Item>\n                        <Form.Item label=\"值\" name=\"value\" required={true}>\n                            <Input placeholder=\"请输入值\" />\n                        </Form.Item>\n                        <Form.Item >\n                            <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n                        </Form.Item>\n                    </Form>\n                </Drawer>\n            </Layout>\n        )\n\n    }\n}\nexport default DictManage","/*\n * @Author: your name\n * @Date: 2020-10-05 16:09:56\n * @LastEditTime: 2020-10-14 22:58:27\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\project\\src\\App.js\n */\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Layout, Tabs } from 'antd';\nimport AccountList from './containers/account'\nimport UserList from './containers/user'\nimport OrderList from './containers/orders'\nimport ExceptionAccountList from './containers/exceptionAccounts'\nimport Setting from './containers/settings'\nimport FinanceList from './containers/finance'\nimport DictManage from './containers/dict'\n\nconst { TabPane } = Tabs\nconst { Header, Content } = Layout;\nclass App extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    handleChange(value) {\n        if (value == 0) {\n            this.account.fecthAccounts()\n        } else if (value == 1 && this.user) {\n            this.user.fetchUsers(1)\n        } else if (value == 2 && this.order) {\n            this.order.fetchOrders()\n\n        } else if (value == 3 && this.outtime) {\n            this.outtime.fecthAccounts()\n\n        } else if (value == 4 && this.finance) {\n            this.finance.fetchList(1)\n\n        }\n\n    }\n    render() {\n        return (\n            <div className=\"App\" >\n                <Layout style={{ height: '100%' }}>\n                    <Header style={{ color: '#fff', fontSize: '24px', textAlign: 'left' }}>\n                        包猪公微信机器人管理后台\n                </Header>\n                    <Layout>\n                        <Content className=\"page-content\">\n                            <Tabs onChange={this.handleChange.bind(this)}>\n                                <TabPane tab=\"账号列表\" key={0}>\n                                    <AccountList ref={ref => this.account = ref} />\n                                </TabPane>\n                                <TabPane tab=\"用户列表\" key={1}>\n                                    <UserList ref={ref => this.user = ref} />\n                                </TabPane>\n                                <TabPane tab=\"订单列表\" key={2}>\n                                    <OrderList ref={ref => this.order = ref} />\n                                </TabPane>\n                                <TabPane tab=\"超时账号\" key={3}>\n                                    <ExceptionAccountList ref={ref => this.outtime = ref} />\n                                </TabPane>\n                                <TabPane tab=\"财务管理\" key={4}>\n                                    <FinanceList ref={ref => this.finance = ref} />\n                                </TabPane>\n                                <TabPane tab=\"系统设置\" key={5}>\n                                    <Setting />\n                                </TabPane>\n                                <TabPane tab=\"关键词设置\" key={6}>\n                                    <DictManage />\n                                </TabPane>\n                            </Tabs>\n                        </Content>\n                    </Layout>\n\n                </Layout>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*\n * @Date: 2020-06-05 10:02:55\n * @LastEditors: Austin.Xu\n * @LastEditTime: 2020-06-09 21:05:32\n * @FilePath: /project/src/store/redux/reducer/common.js\n */ \nimport { ActionTypes, Status } from '../ActionTypes'\n\nconst initialState = {\n    type:  ActionTypes.BASE,\n    data: {},\n    status: Status.INIT\n}\nexport function Common (state=initialState, action) {\n\n    switch(action.reduceType) {\n        case ActionTypes.BASE: \n            return Object.assign({}, state, {\n                type: action.type,\n                data: action.data,\n                status: action.status\n            })\n        default:\n            return state\n    }\n}","/*\n * @Date: 2020-06-05 10:02:30\n * @LastEditors: Austin.Xu\n * @LastEditTime: 2020-06-05 10:23:51\n * @FilePath: /project/src/store/index.js\n */ \nimport { CombineReducers, combineReducers} from 'redux'\n\nimport {Common} from './redux/reducer/common'\n\nexport default combineReducers({\n    Common\n})","/*\n * @Author: your name\n * @Date: 2020-10-05 16:09:56\n * @LastEditTime: 2020-10-14 22:29:03\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\project\\src\\index.js\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store'\nimport {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\n\nconst middleWare = [thunk]\nconst store = createStore(reducer, applyMiddleware(...middleWare))\n \nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}